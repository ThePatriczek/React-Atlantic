{"version":3,"sources":["Checkbox.test.jsx"],"names":["Component","isChecked","output","tst","describe","it","expect","prop","toEqual","tests","checkbox"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,GAAGC,SAAS,IAAI;AACpC,SAAO,6BAAC,kBAAD;AAAU,IAAA,SAAS,EAAEA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFM;;;AAIP,IAAIC,MAAM,GAAG,qBAAQF,SAAS,EAAjB,CAAb;AAEA;;;;;;AAKA,MAAMG,GAAG,GAAG,MACVC,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBC,EAAAA,EAAE,CAAE,0BAAyBJ,SAAU,EAArC,EAAwC,MAAM;AAC9CK,IAAAA,MAAM,CAACJ,MAAM,CAACK,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyCP,SAAzC;AACD,GAFC,CAAF;AAGD,CAJO,CADV;;AAOO,MAAMQ,KAAK,GAAG,CAACC,QAAD,EAAWT,SAAS,GAAG,KAAvB,KAAiC;AACpDC,EAAAA,MAAM,GAAG,qBAAQQ,QAAR,CAAT;AAEA,SAAON,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,0BAAyBJ,SAAU,EAArC,EAAwC,MAAM;AAC9CK,MAAAA,MAAM,CAACJ,MAAM,CAACK,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyCP,SAAzC;AACD,KAFC,CAAF;AAGD,GAJc,CAAf,CAHoD,CASpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA7BM;;;AA8BPQ,KAAK","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport const Component = isChecked => {\n  return <Checkbox isChecked={isChecked} />;\n};\n\nlet output = shallow(Component());\n\n/*describe('Checkbox', () => {\n  it(`Should have isChecked: ${false}`, () => {\n    expect(output.prop('isChecked')).toEqual(false);\n  });\n});*/\nconst tst = () =>\n  describe('Checkbox', () => {\n    it(`Should have isChecked: ${isChecked}`, () => {\n      expect(output.prop('isChecked')).toEqual(isChecked);\n    });\n  });\n\nexport const tests = (checkbox, isChecked = false) => {\n  output = shallow(checkbox);\n\n  return describe('Checkbox', () => {\n    it(`Should have isChecked: ${isChecked}`, () => {\n      expect(output.prop('isChecked')).toEqual(isChecked);\n    });\n  });\n\n  // it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n  //   expect(output.prop('isDefaultChecked')).toEqual(isDefaultChecked);\n  // });\n  //\n  // it(`Should have isDisabled: ${isDisabled}`, () => {\n  //   expect(output.prop('isDisabled')).toEqual(isDisabled);\n  // });\n  //\n  // it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {\n  //   expect(output.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);\n  // });\n  //\n  // it(`Should have position: ${position}`, () => {\n  //   expect(output.prop('position')).toEqual(position);\n  // });\n  //\n  // it(`Should have children: ${children}`, () => {\n  //   expect(output.prop('children')).toEqual(children);\n  // });\n  // });\n};\ntests();\n"]}