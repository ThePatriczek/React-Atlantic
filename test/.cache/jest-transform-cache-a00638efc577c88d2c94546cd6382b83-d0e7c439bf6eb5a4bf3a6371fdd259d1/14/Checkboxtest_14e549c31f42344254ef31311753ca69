3d2863939b565599cdbad3eba2b289a0
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Checkbox = require("./Checkbox");

var _defaultValues = require("./defaultValues");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Checkbox/Checkbox.test.jsx";

const Component = (isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children) => {
  return _react.default.createElement(_Checkbox.Checkbox, {
    isChecked: isChecked,
    isPartiallyChecked: isPartiallyChecked,
    isDefaultChecked: isDefaultChecked,
    isDisabled: isDisabled,
    position: position,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15
    },
    __self: void 0
  }, children);
};

exports.Component = Component;
let output;

const tests = (isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children) => {
  output = (0, _enzyme.shallow)(Component(_defaultValues.defaultValues.isChecked, _defaultValues.defaultValues.isDefaultChecked, _defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isPartiallyChecked, _defaultValues.defaultValues.position, _defaultValues.defaultValues.children));

  if (isDefaultChecked !== undefined) {
    output = (0, _enzyme.mount)(Component(isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children));
  }

  console.log('DefaultChecked: ', isDefaultChecked);
  return describe('Checkbox', () => {
    if (isDefaultChecked !== undefined) {
      it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {
        expect(output.props().isDefaultChecked).toEqual(isDefaultChecked);
      });
    } else {
      it(`Should have isDefaultChecked: ${_defaultValues.defaultValues.isDefaultChecked}`, () => {
        console.log(output.props());
        expect(output.props().isDefaultChecked).toEqual(_defaultValues.defaultValues.isDefaultChecked);
      });
    }
    /* if (checkbox.props.isChecked) {
      it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {
        expect(output.prop('isChecked')).toEqual(checkbox.props.isChecked);
      });
    } else
      it(`Should have isChecked: ${defaultValues.isChecked}`, () => {
        expect(output.prop('isChecked')).toEqual(defaultValues.isChecked);
      });
     if (checkbox.props.isDisabled) {
      it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {
        expect(output.prop('isDisabled')).toEqual(checkbox.props.isDisabled);
      });
    } else
      it(`Should have isDisabled: ${defaultValues.isDisabled}`, () => {
        expect(output.prop('isDisabled')).toEqual(defaultValues.isDisabled);
      });
     if (checkbox.props.isPartiallyChecked) {
      it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {
        expect(output.prop('isPartiallyChecked')).toEqual(
          checkbox.props.isPartiallyChecked
        );
      });
    } else
      it(`Should have isPartiallyChecked: ${defaultValues.isPartiallyChecked}`, () => {
        expect(output.prop('isPartiallyChecked')).toEqual(
          defaultValues.isPartiallyChecked
        );
      });
     if (checkbox.props.position) {
      it(`Should have position: ${checkbox.props.position}`, () => {
        expect(output.prop('position')).toEqual(checkbox.props.position);
      });
    } else
      it(`Should have position: ${defaultValues.position}`, () => {
        expect(output.prop('position')).toEqual(defaultValues.position);
      });
     if (checkbox.props.children) {
      it(`Should have children: ${checkbox.props.children}`, () => {
        expect(output.prop('children')).toEqual(checkbox.props.children);
      });
    } else
      it(`Should have children: ${defaultValues.children}`, () => {
        expect(output.prop('children')).toEqual(defaultValues.children);
      });*/

  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrYm94LnRlc3QuanN4Il0sIm5hbWVzIjpbIkNvbXBvbmVudCIsImlzQ2hlY2tlZCIsImlzRGVmYXVsdENoZWNrZWQiLCJpc0Rpc2FibGVkIiwiaXNQYXJ0aWFsbHlDaGVja2VkIiwicG9zaXRpb24iLCJjaGlsZHJlbiIsIm91dHB1dCIsInRlc3RzIiwiZGVmYXVsdFZhbHVlcyIsInVuZGVmaW5lZCIsImNvbnNvbGUiLCJsb2ciLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwicHJvcHMiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLFNBQVMsR0FBRyxDQUN2QkMsU0FEdUIsRUFFdkJDLGdCQUZ1QixFQUd2QkMsVUFIdUIsRUFJdkJDLGtCQUp1QixFQUt2QkMsUUFMdUIsRUFNdkJDLFFBTnVCLEtBT3BCO0FBQ0gsU0FDRSw2QkFBQyxrQkFBRDtBQUNFLElBQUEsU0FBUyxFQUFFTCxTQURiO0FBRUUsSUFBQSxrQkFBa0IsRUFBRUcsa0JBRnRCO0FBR0UsSUFBQSxnQkFBZ0IsRUFBRUYsZ0JBSHBCO0FBSUUsSUFBQSxVQUFVLEVBQUVDLFVBSmQ7QUFLRSxJQUFBLFFBQVEsRUFBRUUsUUFMWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQU9HQyxRQVBILENBREY7QUFXRCxDQW5CTTs7O0FBcUJQLElBQUlDLE1BQUo7O0FBRU8sTUFBTUMsS0FBSyxHQUFHLENBQ25CUCxTQURtQixFQUVuQkMsZ0JBRm1CLEVBR25CQyxVQUhtQixFQUluQkMsa0JBSm1CLEVBS25CQyxRQUxtQixFQU1uQkMsUUFObUIsS0FPaEI7QUFDSEMsRUFBQUEsTUFBTSxHQUFHLHFCQUNQUCxTQUFTLENBQ1BTLDZCQUFjUixTQURQLEVBRVBRLDZCQUFjUCxnQkFGUCxFQUdQTyw2QkFBY04sVUFIUCxFQUlQTSw2QkFBY0wsa0JBSlAsRUFLUEssNkJBQWNKLFFBTFAsRUFNUEksNkJBQWNILFFBTlAsQ0FERixDQUFUOztBQVVBLE1BQUlKLGdCQUFnQixLQUFLUSxTQUF6QixFQUFvQztBQUNsQ0gsSUFBQUEsTUFBTSxHQUFHLG1CQUNQUCxTQUFTLENBQ1BDLFNBRE8sRUFFUEMsZ0JBRk8sRUFHUEMsVUFITyxFQUlQQyxrQkFKTyxFQUtQQyxRQUxPLEVBTVBDLFFBTk8sQ0FERixDQUFUO0FBVUQ7O0FBQ0RLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtCQUFaLEVBQWdDVixnQkFBaEM7QUFDQSxTQUFPVyxRQUFRLENBQUMsVUFBRCxFQUFhLE1BQU07QUFDaEMsUUFBSVgsZ0JBQWdCLEtBQUtRLFNBQXpCLEVBQW9DO0FBQ2xDSSxNQUFBQSxFQUFFLENBQUUsaUNBQWdDWixnQkFBaUIsRUFBbkQsRUFBc0QsTUFBTTtBQUM1RGEsUUFBQUEsTUFBTSxDQUFDUixNQUFNLENBQUNTLEtBQVAsR0FBZWQsZ0JBQWhCLENBQU4sQ0FBd0NlLE9BQXhDLENBQWdEZixnQkFBaEQ7QUFDRCxPQUZDLENBQUY7QUFHRCxLQUpELE1BSU87QUFDTFksTUFBQUEsRUFBRSxDQUFFLGlDQUFnQ0wsNkJBQWNQLGdCQUFpQixFQUFqRSxFQUFvRSxNQUFNO0FBQzFFUyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUwsTUFBTSxDQUFDUyxLQUFQLEVBQVo7QUFDQUQsUUFBQUEsTUFBTSxDQUFDUixNQUFNLENBQUNTLEtBQVAsR0FBZWQsZ0JBQWhCLENBQU4sQ0FBd0NlLE9BQXhDLENBQ0VSLDZCQUFjUCxnQkFEaEI7QUFHRCxPQUxDLENBQUY7QUFNRDtBQUNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnREQsR0E3RGMsQ0FBZjtBQThERCxDQTdGTTs7O0FBK0ZQTSxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbW91bnQsIHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnLi9DaGVja2JveCc7XG5pbXBvcnQgeyBkZWZhdWx0VmFsdWVzIH0gZnJvbSAnLi9kZWZhdWx0VmFsdWVzJztcblxuZXhwb3J0IGNvbnN0IENvbXBvbmVudCA9IChcbiAgaXNDaGVja2VkLFxuICBpc0RlZmF1bHRDaGVja2VkLFxuICBpc0Rpc2FibGVkLFxuICBpc1BhcnRpYWxseUNoZWNrZWQsXG4gIHBvc2l0aW9uLFxuICBjaGlsZHJlblxuKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENoZWNrYm94XG4gICAgICBpc0NoZWNrZWQ9e2lzQ2hlY2tlZH1cbiAgICAgIGlzUGFydGlhbGx5Q2hlY2tlZD17aXNQYXJ0aWFsbHlDaGVja2VkfVxuICAgICAgaXNEZWZhdWx0Q2hlY2tlZD17aXNEZWZhdWx0Q2hlY2tlZH1cbiAgICAgIGlzRGlzYWJsZWQ9e2lzRGlzYWJsZWR9XG4gICAgICBwb3NpdGlvbj17cG9zaXRpb259XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ2hlY2tib3g+XG4gICk7XG59O1xuXG5sZXQgb3V0cHV0O1xuXG5leHBvcnQgY29uc3QgdGVzdHMgPSAoXG4gIGlzQ2hlY2tlZCxcbiAgaXNEZWZhdWx0Q2hlY2tlZCxcbiAgaXNEaXNhYmxlZCxcbiAgaXNQYXJ0aWFsbHlDaGVja2VkLFxuICBwb3NpdGlvbixcbiAgY2hpbGRyZW5cbikgPT4ge1xuICBvdXRwdXQgPSBzaGFsbG93KFxuICAgIENvbXBvbmVudChcbiAgICAgIGRlZmF1bHRWYWx1ZXMuaXNDaGVja2VkLFxuICAgICAgZGVmYXVsdFZhbHVlcy5pc0RlZmF1bHRDaGVja2VkLFxuICAgICAgZGVmYXVsdFZhbHVlcy5pc0Rpc2FibGVkLFxuICAgICAgZGVmYXVsdFZhbHVlcy5pc1BhcnRpYWxseUNoZWNrZWQsXG4gICAgICBkZWZhdWx0VmFsdWVzLnBvc2l0aW9uLFxuICAgICAgZGVmYXVsdFZhbHVlcy5jaGlsZHJlblxuICAgIClcbiAgKTtcbiAgaWYgKGlzRGVmYXVsdENoZWNrZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIG91dHB1dCA9IG1vdW50KFxuICAgICAgQ29tcG9uZW50KFxuICAgICAgICBpc0NoZWNrZWQsXG4gICAgICAgIGlzRGVmYXVsdENoZWNrZWQsXG4gICAgICAgIGlzRGlzYWJsZWQsXG4gICAgICAgIGlzUGFydGlhbGx5Q2hlY2tlZCxcbiAgICAgICAgcG9zaXRpb24sXG4gICAgICAgIGNoaWxkcmVuXG4gICAgICApXG4gICAgKTtcbiAgfVxuICBjb25zb2xlLmxvZygnRGVmYXVsdENoZWNrZWQ6ICcsIGlzRGVmYXVsdENoZWNrZWQpO1xuICByZXR1cm4gZGVzY3JpYmUoJ0NoZWNrYm94JywgKCkgPT4ge1xuICAgIGlmIChpc0RlZmF1bHRDaGVja2VkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGl0KGBTaG91bGQgaGF2ZSBpc0RlZmF1bHRDaGVja2VkOiAke2lzRGVmYXVsdENoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkuaXNEZWZhdWx0Q2hlY2tlZCkudG9FcXVhbChpc0RlZmF1bHRDaGVja2VkKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBpdChgU2hvdWxkIGhhdmUgaXNEZWZhdWx0Q2hlY2tlZDogJHtkZWZhdWx0VmFsdWVzLmlzRGVmYXVsdENoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhvdXRwdXQucHJvcHMoKSk7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5pc0RlZmF1bHRDaGVja2VkKS50b0VxdWFsKFxuICAgICAgICAgIGRlZmF1bHRWYWx1ZXMuaXNEZWZhdWx0Q2hlY2tlZFxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfVxuICAgIC8qIGlmIChjaGVja2JveC5wcm9wcy5pc0NoZWNrZWQpIHtcbiAgICAgIGl0KGBTaG91bGQgaGF2ZSBpc0NoZWNrZWQ6ICR7Y2hlY2tib3gucHJvcHMuaXNDaGVja2VkfWAsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0NoZWNrZWQnKSkudG9FcXVhbChjaGVja2JveC5wcm9wcy5pc0NoZWNrZWQpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlXG4gICAgICBpdChgU2hvdWxkIGhhdmUgaXNDaGVja2VkOiAke2RlZmF1bHRWYWx1ZXMuaXNDaGVja2VkfWAsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0NoZWNrZWQnKSkudG9FcXVhbChkZWZhdWx0VmFsdWVzLmlzQ2hlY2tlZCk7XG4gICAgICB9KTtcblxuICAgIGlmIChjaGVja2JveC5wcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgICBpdChgU2hvdWxkIGhhdmUgaXNEaXNhYmxlZDogJHtjaGVja2JveC5wcm9wcy5pc0Rpc2FibGVkfWAsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0Rpc2FibGVkJykpLnRvRXF1YWwoY2hlY2tib3gucHJvcHMuaXNEaXNhYmxlZCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2VcbiAgICAgIGl0KGBTaG91bGQgaGF2ZSBpc0Rpc2FibGVkOiAke2RlZmF1bHRWYWx1ZXMuaXNEaXNhYmxlZH1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNEaXNhYmxlZCcpKS50b0VxdWFsKGRlZmF1bHRWYWx1ZXMuaXNEaXNhYmxlZCk7XG4gICAgICB9KTtcblxuICAgIGlmIChjaGVja2JveC5wcm9wcy5pc1BhcnRpYWxseUNoZWNrZWQpIHtcbiAgICAgIGl0KGBTaG91bGQgaGF2ZSBpc1BhcnRpYWxseUNoZWNrZWQ6ICR7Y2hlY2tib3gucHJvcHMuaXNQYXJ0aWFsbHlDaGVja2VkfWAsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc1BhcnRpYWxseUNoZWNrZWQnKSkudG9FcXVhbChcbiAgICAgICAgICBjaGVja2JveC5wcm9wcy5pc1BhcnRpYWxseUNoZWNrZWRcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZVxuICAgICAgaXQoYFNob3VsZCBoYXZlIGlzUGFydGlhbGx5Q2hlY2tlZDogJHtkZWZhdWx0VmFsdWVzLmlzUGFydGlhbGx5Q2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNQYXJ0aWFsbHlDaGVja2VkJykpLnRvRXF1YWwoXG4gICAgICAgICAgZGVmYXVsdFZhbHVlcy5pc1BhcnRpYWxseUNoZWNrZWRcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuXG4gICAgaWYgKGNoZWNrYm94LnByb3BzLnBvc2l0aW9uKSB7XG4gICAgICBpdChgU2hvdWxkIGhhdmUgcG9zaXRpb246ICR7Y2hlY2tib3gucHJvcHMucG9zaXRpb259YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ3Bvc2l0aW9uJykpLnRvRXF1YWwoY2hlY2tib3gucHJvcHMucG9zaXRpb24pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlXG4gICAgICBpdChgU2hvdWxkIGhhdmUgcG9zaXRpb246ICR7ZGVmYXVsdFZhbHVlcy5wb3NpdGlvbn1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgncG9zaXRpb24nKSkudG9FcXVhbChkZWZhdWx0VmFsdWVzLnBvc2l0aW9uKTtcbiAgICAgIH0pO1xuXG4gICAgaWYgKGNoZWNrYm94LnByb3BzLmNoaWxkcmVuKSB7XG4gICAgICBpdChgU2hvdWxkIGhhdmUgY2hpbGRyZW46ICR7Y2hlY2tib3gucHJvcHMuY2hpbGRyZW59YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2NoaWxkcmVuJykpLnRvRXF1YWwoY2hlY2tib3gucHJvcHMuY2hpbGRyZW4pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlXG4gICAgICBpdChgU2hvdWxkIGhhdmUgY2hpbGRyZW46ICR7ZGVmYXVsdFZhbHVlcy5jaGlsZHJlbn1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnY2hpbGRyZW4nKSkudG9FcXVhbChkZWZhdWx0VmFsdWVzLmNoaWxkcmVuKTtcbiAgICAgIH0pOyovXG4gIH0pO1xufTtcblxudGVzdHMoKTtcbiJdfQ==