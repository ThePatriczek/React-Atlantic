{"version":3,"sources":["Checkbox.test.jsx"],"names":["tests","describe","checkbox","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","it","output","expect","prop","toEqual","wrapper"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAOA;;;AAEO,MAAMA,KAAK,GAAGC,QAAQ,CAAC,UAAD,EAAa,MAAM;AAC9C,QAAMC,QAAQ,GACZ,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAEC,oBADb;AAEE,IAAA,gBAAgB,EAAEC,2BAFpB;AAGE,IAAA,UAAU,EAAEC,qBAHd;AAIE,IAAA,kBAAkB,EAAEC,6BAJtB;AAKE,IAAA,QAAQ,EAAEC,mBALZ;AAME,IAAA,QAAQ,EAAE,0BAAQ,UAAR,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,QARH,CADF;;AAYAC,EAAAA,EAAE,CAAC,UAAD,EAAa,MAAM;AACnB,UAAMC,MAAM,GAAG,qBAAQR,QAAR,CAAf;AACAS,IAAAA,MAAM,CAACD,MAAM,CAACE,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyC,IAAzC;AACD,GAHC,CAAF;AAKAJ,EAAAA,EAAE,CAAE,0BAAyBN,oBAAU,EAArC,EAAwC,MAAM;AAC9CQ,IAAAA,MAAM,CAACG,OAAO,CAACF,IAAR,CAAa,WAAb,CAAD,CAAN,CAAkCC,OAAlC,CAA0CV,oBAA1C;AACD,GAFC,CAAF;AAIAM,EAAAA,EAAE,CAAE,iCAAgCL,2BAAiB,EAAnD,EAAsD,MAAM;AAC5DO,IAAAA,MAAM,CAACG,OAAO,CAACF,IAAR,CAAa,kBAAb,CAAD,CAAN,CAAyCC,OAAzC,CAAiDT,2BAAjD;AACD,GAFC,CAAF;AAIAK,EAAAA,EAAE,CAAE,2BAA0BJ,qBAAW,EAAvC,EAA0C,MAAM;AAChDM,IAAAA,MAAM,CAACG,OAAO,CAACF,IAAR,CAAa,YAAb,CAAD,CAAN,CAAmCC,OAAnC,CAA2CR,qBAA3C;AACD,GAFC,CAAF;AAIAI,EAAAA,EAAE,CAAE,mCAAkCH,6BAAmB,EAAvD,EAA0D,MAAM;AAChEK,IAAAA,MAAM,CAACG,OAAO,CAACF,IAAR,CAAa,oBAAb,CAAD,CAAN,CAA2CC,OAA3C,CAAmDP,6BAAnD;AACD,GAFC,CAAF;AAIAG,EAAAA,EAAE,CAAE,yBAAwBF,mBAAS,EAAnC,EAAsC,MAAM;AAC5CI,IAAAA,MAAM,CAACG,OAAO,CAACF,IAAR,CAAa,UAAb,CAAD,CAAN,CAAiCC,OAAjC,CAAyCN,mBAAzC;AACD,GAFC,CAAF;AAIAE,EAAAA,EAAE,CAAE,yBAAwBD,QAAS,EAAnC,EAAsC,MAAM;AAC5CG,IAAAA,MAAM,CAACG,OAAO,CAACF,IAAR,CAAa,UAAb,CAAD,CAAN,CAAiCC,OAAjC,CAAyCL,QAAzC;AACD,GAFC,CAAF;AAGD,CAzC4B,CAAtB","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport {\n  isDefaultChecked,\n  isDisabled,\n  isChecked,\n  isPartiallyChecked,\n  position\n} from '../../constants';\nimport { action } from '@storybook/addon-actions';\n\nexport const tests = describe('Checkbox', () => {\n  const checkbox = (\n    <Checkbox\n      isChecked={isChecked}\n      isDefaultChecked={isDefaultChecked}\n      isDisabled={isDisabled}\n      isPartiallyChecked={isPartiallyChecked}\n      position={position}\n      onChange={action(`onChange`)}\n    >\n      {children}\n    </Checkbox>\n  );\n  it('Checked?', () => {\n    const output = shallow(checkbox);\n    expect(output.prop('isChecked')).toEqual(true);\n  });\n\n  it(`Should have isChecked: ${isChecked}`, () => {\n    expect(wrapper.prop('isChecked')).toEqual(isChecked);\n  });\n\n  it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n    expect(wrapper.prop('isDefaultChecked')).toEqual(isDefaultChecked);\n  });\n\n  it(`Should have isDisabled: ${isDisabled}`, () => {\n    expect(wrapper.prop('isDisabled')).toEqual(isDisabled);\n  });\n\n  it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {\n    expect(wrapper.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);\n  });\n\n  it(`Should have position: ${position}`, () => {\n    expect(wrapper.prop('position')).toEqual(position);\n  });\n\n  it(`Should have children: ${children}`, () => {\n    expect(wrapper.prop('children')).toEqual(children);\n  });\n});\n"]}