{"version":3,"sources":["Button.test.jsx"],"names":["Component","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","tests","checkbox","defaultValues","describe","it","props","expect","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,GAAG,CACvBC,SADuB,EAEvBC,gBAFuB,EAGvBC,UAHuB,EAIvBC,kBAJuB,EAKvBC,QALuB,EAMvBC,QANuB,KAOpB;AACH,SACE,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAEL,SADb;AAEE,IAAA,kBAAkB,EAAEG,kBAFtB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGC,QAPH,CADF;AAWD,CAnBM;;;AAqBP,IAAIC,MAAJ;;AAEO,MAAMC,KAAK,GAAG,CACnBC,QAAQ,GAAGT,SAAS,CAClBU,6BAAcT,SADI,EAElBS,6BAAcR,gBAFI,EAGlBQ,6BAAcP,UAHI,EAIlBO,6BAAcN,kBAJI,EAKlBM,6BAAcL,QALI,EAMlBK,6BAAcJ,QANI,CADD,KAShB;AACHC,EAAAA,MAAM,GAAG,mBAAME,QAAN,CAAT;AAEA,SAAOE,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,iCAAgCH,QAAQ,CAACI,KAAT,CAAeX,gBAAiB,EAAlE,EAAqE,MAAM;AAC3EY,MAAAA,MAAM,CAACP,MAAM,CAACM,KAAP,GAAeX,gBAAhB,CAAN,CAAwCa,OAAxC,CACEN,QAAQ,CAACI,KAAT,CAAeX,gBADjB;AAGD,KAJC,CAAF;AAKAU,IAAAA,EAAE,CAAE,0BAAyBH,QAAQ,CAACI,KAAT,CAAeZ,SAAU,EAApD,EAAuD,MAAM;AAC7Da,MAAAA,MAAM,CAACP,MAAM,CAACM,KAAP,GAAeZ,SAAhB,CAAN,CAAiCc,OAAjC,CAAyCN,QAAQ,CAACI,KAAT,CAAeZ,SAAxD;AACD,KAFC,CAAF;AAGAW,IAAAA,EAAE,CAAE,2BAA0BH,QAAQ,CAACI,KAAT,CAAeV,UAAW,EAAtD,EAAyD,MAAM;AAC/DW,MAAAA,MAAM,CAACP,MAAM,CAACM,KAAP,GAAeV,UAAhB,CAAN,CAAkCY,OAAlC,CAA0CN,QAAQ,CAACI,KAAT,CAAeV,UAAzD;AACD,KAFC,CAAF;AAGAS,IAAAA,EAAE,CAAE,mCAAkCH,QAAQ,CAACI,KAAT,CAAeT,kBAAmB,EAAtE,EAAyE,MAAM;AAC/EU,MAAAA,MAAM,CAACP,MAAM,CAACM,KAAP,GAAeT,kBAAhB,CAAN,CAA0CW,OAA1C,CACEN,QAAQ,CAACI,KAAT,CAAeT,kBADjB;AAGD,KAJC,CAAF;AAKAQ,IAAAA,EAAE,CAAE,yBAAwBH,QAAQ,CAACI,KAAT,CAAeR,QAAS,EAAlD,EAAqD,MAAM;AAC3DS,MAAAA,MAAM,CAACP,MAAM,CAACM,KAAP,GAAeR,QAAhB,CAAN,CAAgCU,OAAhC,CAAwCN,QAAQ,CAACI,KAAT,CAAeR,QAAvD;AACD,KAFC,CAAF;AAGAO,IAAAA,EAAE,CAAE,yBAAwBH,QAAQ,CAACI,KAAT,CAAeP,QAAS,EAAlD,EAAqD,MAAM;AAC3DQ,MAAAA,MAAM,CAACP,MAAM,CAACM,KAAP,GAAeP,QAAhB,CAAN,CAAgCS,OAAhC,CAAwCN,QAAQ,CAACI,KAAT,CAAeP,QAAvD;AACD,KAFC,CAAF;AAGD,GAvBc,CAAf;AAwBD,CApCM;;;AAsCPE,KAAK","sourcesContent":["import { mount } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from '../Checkbox';\nimport { defaultValues } from '../../constants/defaultValues';\n\nexport const Component = (\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  return (\n    <Checkbox\n      isChecked={isChecked}\n      isPartiallyChecked={isPartiallyChecked}\n      isDefaultChecked={isDefaultChecked}\n      isDisabled={isDisabled}\n      position={position}\n    >\n      {children}\n    </Checkbox>\n  );\n};\n\nlet output;\n\nexport const tests = (\n  checkbox = Component(\n    defaultValues.isChecked,\n    defaultValues.isDefaultChecked,\n    defaultValues.isDisabled,\n    defaultValues.isPartiallyChecked,\n    defaultValues.position,\n    defaultValues.children\n  )\n) => {\n  output = mount(checkbox);\n\n  return describe('Checkbox', () => {\n    it(`Should have isDefaultChecked: ${checkbox.props.isDefaultChecked}`, () => {\n      expect(output.props().isDefaultChecked).toEqual(\n        checkbox.props.isDefaultChecked\n      );\n    });\n    it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {\n      expect(output.props().isChecked).toEqual(checkbox.props.isChecked);\n    });\n    it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {\n      expect(output.props().isDisabled).toEqual(checkbox.props.isDisabled);\n    });\n    it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {\n      expect(output.props().isPartiallyChecked).toEqual(\n        checkbox.props.isPartiallyChecked\n      );\n    });\n    it(`Should have position: ${checkbox.props.position}`, () => {\n      expect(output.props().position).toEqual(checkbox.props.position);\n    });\n    it(`Should have children: ${checkbox.props.children}`, () => {\n      expect(output.props().children).toEqual(checkbox.props.children);\n    });\n  });\n};\n\ntests();\n"]}