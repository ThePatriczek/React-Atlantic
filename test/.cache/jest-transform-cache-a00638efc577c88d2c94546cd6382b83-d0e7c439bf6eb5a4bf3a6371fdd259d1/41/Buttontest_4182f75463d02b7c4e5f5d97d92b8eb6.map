{"version":3,"sources":["Button.test.jsx"],"names":["Component","isDisabled","isFullWidth","isRound","size","type","value","onClick","output","tests","button","defaultValues","isChecked","isDefaultChecked","props","text","toEqual","mockClick","jest","fn","setProps","simulate","toHaveBeenCalled","not","prop"],"mappings":"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","sourcesContent":["import { mount } from 'enzyme';\nimport React from 'react';\nimport { defaultValues } from '../../constants/defaultValues';\nimport { Button } from './Button';\nimport { describe, it } from 'storybook-addon-specifications';\nimport expect from 'expect';\n\nexport const Component = (\n  isDisabled,\n  isFullWidth,\n  isRound,\n  size,\n  type,\n  value,\n  onClick\n) => {\n  return (\n    <Button\n      isDisabled={isDisabled}\n      isFullWidth={isFullWidth}\n      isRound={isRound}\n      size={size}\n      type={type}\n      onClick={onClick}\n    >\n      {value}\n    </Button>\n  );\n};\n\nlet output;\n\nexport const tests = (\n  button = Component(\n    defaultValues.isChecked,\n    defaultValues.isDefaultChecked,\n    defaultValues.isDisabled,\n    defaultValues.isFullWidth,\n    defaultValues.isRound,\n    defaultValues.size,\n    defaultValues.type,\n    defaultValues.value\n  )\n) => {\n  output = mount(button);\n\n  return describe('Button', () => {\n    it(`Should have the right text: ${button.props.value}`, () =>\n      expect(output.text()).toEqual(button.props.value));\n\n    it(`onClick should have been called if Button is not disabled: `, () => {\n      const mockClick = jest.fn();\n      output.setProps({\n        onClick: mockClick\n      });\n\n      output.simulate('click');\n\n      if (!button.props.isDisabled) {\n        expect(button.props.onClick).toHaveBeenCalled();\n      } else {\n        expect(button.props.onClick).not.toHaveBeenCalled();\n      }\n    });\n\n    it(`Should have isDisabled: ${button.props.isDisabled}`, () => {\n      expect(output.prop('isDisabled')).toEqual(button.props.isDisabled);\n    });\n\n    it(`Should have isRound: ${button.props.isRound}`, () => {\n      expect(output.prop('isRound')).toEqual(button.props.isRound);\n    });\n\n    it(`Should have isFullWidth: ${button.props.isFullWidth}`, () => {\n      expect(output.prop('isFullWidth')).toEqual(button.props.isFullWidth);\n    });\n\n    it(`Should have type: ${button.props.type}`, () => {\n      expect(output.prop('type')).toEqual(button.props.type);\n    });\n\n    it(`Should have size: ${button.props.size}`, () => {\n      expect(output.prop('size')).toEqual(button.props.size);\n    });\n  });\n};\n\ntests();\n"]}