b0e0dddf066b721b02a7e749b8a6a6a8
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _storybookAddonSpecifications = require("storybook-addon-specifications");

var _expect = _interopRequireDefault(require("expect"));

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";
const mockClick = jest.fn();

const Component = (isDisabled, isFullWidth, isRound, size, type, value) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: mockClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    },
    __self: void 0
  }, value);
};

exports.Component = Component;

const tests = (button = Component(_defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value)) => {
  let output = (0, _enzyme.mount)(button);
  return (0, _storybookAddonSpecifications.describe)('Button', () => {
    (0, _storybookAddonSpecifications.it)(`Should have the right text: ${button.props.value}`, () => (0, _expect.default)(output.text()).toEqual(button.props.value));
    (0, _storybookAddonSpecifications.it)(`onClick should have been called if Button is not disabled: `, () => {
      output.setProps({
        onClick: mockClick
      });
      output.simulate('click');

      if (!button.props.isDisabled) {
        (0, _expect.default)(button.props.onClick).toHaveBeenCalled();
      } else {
        (0, _expect.default)(button.props.onClick).not.toHaveBeenCalled();
      }
    });
    (0, _storybookAddonSpecifications.it)(`Should have isDisabled: ${button.props.isDisabled}`, () => {
      (0, _expect.default)(output.prop('isDisabled')).toEqual(button.props.isDisabled);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isRound: ${button.props.isRound}`, () => {
      (0, _expect.default)(output.prop('isRound')).toEqual(button.props.isRound);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isFullWidth: ${button.props.isFullWidth}`, () => {
      (0, _expect.default)(output.prop('isFullWidth')).toEqual(button.props.isFullWidth);
    });
    (0, _storybookAddonSpecifications.it)(`Should have type: ${button.props.type}`, () => {
      (0, _expect.default)(output.prop('type')).toEqual(button.props.type);
    });
    (0, _storybookAddonSpecifications.it)(`Should have size: ${button.props.size}`, () => {
      (0, _expect.default)(output.prop('size')).toEqual(button.props.size);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJtb2NrQ2xpY2siLCJqZXN0IiwiZm4iLCJDb21wb25lbnQiLCJpc0Rpc2FibGVkIiwiaXNGdWxsV2lkdGgiLCJpc1JvdW5kIiwic2l6ZSIsInR5cGUiLCJ2YWx1ZSIsInRlc3RzIiwiYnV0dG9uIiwiZGVmYXVsdFZhbHVlcyIsIm91dHB1dCIsInByb3BzIiwidGV4dCIsInRvRXF1YWwiLCJzZXRQcm9wcyIsIm9uQ2xpY2siLCJzaW11bGF0ZSIsInRvSGF2ZUJlZW5DYWxsZWQiLCJub3QiLCJwcm9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7O0FBRUEsTUFBTUEsU0FBUyxHQUFHQyxJQUFJLENBQUNDLEVBQUwsRUFBbEI7O0FBQ08sTUFBTUMsU0FBUyxHQUFHLENBQ3ZCQyxVQUR1QixFQUV2QkMsV0FGdUIsRUFHdkJDLE9BSHVCLEVBSXZCQyxJQUp1QixFQUt2QkMsSUFMdUIsRUFNdkJDLEtBTnVCLEtBT3BCO0FBQ0gsU0FDRSw2QkFBQyxjQUFEO0FBQ0UsSUFBQSxVQUFVLEVBQUVMLFVBRGQ7QUFFRSxJQUFBLFdBQVcsRUFBRUMsV0FGZjtBQUdFLElBQUEsT0FBTyxFQUFFQyxPQUhYO0FBSUUsSUFBQSxJQUFJLEVBQUVDLElBSlI7QUFLRSxJQUFBLElBQUksRUFBRUMsSUFMUjtBQU1FLElBQUEsT0FBTyxFQUFFUixTQU5YO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBUUdTLEtBUkgsQ0FERjtBQVlELENBcEJNOzs7O0FBc0JBLE1BQU1DLEtBQUssR0FBRyxDQUNuQkMsTUFBTSxHQUFHUixTQUFTLENBQ2hCUyw2QkFBY1IsVUFERSxFQUVoQlEsNkJBQWNQLFdBRkUsRUFHaEJPLDZCQUFjTixPQUhFLEVBSWhCTSw2QkFBY0wsSUFKRSxFQUtoQkssNkJBQWNKLElBTEUsRUFNaEJJLDZCQUFjSCxLQU5FLENBREMsS0FTaEI7QUFDSCxNQUFJSSxNQUFNLEdBQUcsbUJBQU1GLE1BQU4sQ0FBYjtBQUVBLFNBQU8sNENBQVMsUUFBVCxFQUFtQixNQUFNO0FBQzlCLDBDQUFJLCtCQUE4QkEsTUFBTSxDQUFDRyxLQUFQLENBQWFMLEtBQU0sRUFBckQsRUFBd0QsTUFDdEQscUJBQU9JLE1BQU0sQ0FBQ0UsSUFBUCxFQUFQLEVBQXNCQyxPQUF0QixDQUE4QkwsTUFBTSxDQUFDRyxLQUFQLENBQWFMLEtBQTNDLENBREY7QUFHQSwwQ0FBSSw2REFBSixFQUFrRSxNQUFNO0FBQ3RFSSxNQUFBQSxNQUFNLENBQUNJLFFBQVAsQ0FBZ0I7QUFDZEMsUUFBQUEsT0FBTyxFQUFFbEI7QUFESyxPQUFoQjtBQUlBYSxNQUFBQSxNQUFNLENBQUNNLFFBQVAsQ0FBZ0IsT0FBaEI7O0FBRUEsVUFBSSxDQUFDUixNQUFNLENBQUNHLEtBQVAsQ0FBYVYsVUFBbEIsRUFBOEI7QUFDNUIsNkJBQU9PLE1BQU0sQ0FBQ0csS0FBUCxDQUFhSSxPQUFwQixFQUE2QkUsZ0JBQTdCO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsNkJBQU9ULE1BQU0sQ0FBQ0csS0FBUCxDQUFhSSxPQUFwQixFQUE2QkcsR0FBN0IsQ0FBaUNELGdCQUFqQztBQUNEO0FBQ0YsS0FaRDtBQWNBLDBDQUFJLDJCQUEwQlQsTUFBTSxDQUFDRyxLQUFQLENBQWFWLFVBQVcsRUFBdEQsRUFBeUQsTUFBTTtBQUM3RCwyQkFBT1MsTUFBTSxDQUFDUyxJQUFQLENBQVksWUFBWixDQUFQLEVBQWtDTixPQUFsQyxDQUEwQ0wsTUFBTSxDQUFDRyxLQUFQLENBQWFWLFVBQXZEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHdCQUF1Qk8sTUFBTSxDQUFDRyxLQUFQLENBQWFSLE9BQVEsRUFBaEQsRUFBbUQsTUFBTTtBQUN2RCwyQkFBT08sTUFBTSxDQUFDUyxJQUFQLENBQVksU0FBWixDQUFQLEVBQStCTixPQUEvQixDQUF1Q0wsTUFBTSxDQUFDRyxLQUFQLENBQWFSLE9BQXBEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLDRCQUEyQkssTUFBTSxDQUFDRyxLQUFQLENBQWFULFdBQVksRUFBeEQsRUFBMkQsTUFBTTtBQUMvRCwyQkFBT1EsTUFBTSxDQUFDUyxJQUFQLENBQVksYUFBWixDQUFQLEVBQW1DTixPQUFuQyxDQUEyQ0wsTUFBTSxDQUFDRyxLQUFQLENBQWFULFdBQXhEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHFCQUFvQk0sTUFBTSxDQUFDRyxLQUFQLENBQWFOLElBQUssRUFBMUMsRUFBNkMsTUFBTTtBQUNqRCwyQkFBT0ssTUFBTSxDQUFDUyxJQUFQLENBQVksTUFBWixDQUFQLEVBQTRCTixPQUE1QixDQUFvQ0wsTUFBTSxDQUFDRyxLQUFQLENBQWFOLElBQWpEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHFCQUFvQkcsTUFBTSxDQUFDRyxLQUFQLENBQWFQLElBQUssRUFBMUMsRUFBNkMsTUFBTTtBQUNqRCwyQkFBT00sTUFBTSxDQUFDUyxJQUFQLENBQVksTUFBWixDQUFQLEVBQTRCTixPQUE1QixDQUFvQ0wsTUFBTSxDQUFDRyxLQUFQLENBQWFQLElBQWpEO0FBQ0QsS0FGRDtBQUdELEdBckNNLENBQVA7QUFzQ0QsQ0FsRE07OztBQW9EUEcsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1vdW50IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBkZWZhdWx0VmFsdWVzIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL2RlZmF1bHRWYWx1ZXMnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi9CdXR0b24nO1xuaW1wb3J0IHsgZGVzY3JpYmUsIGl0IH0gZnJvbSAnc3Rvcnlib29rLWFkZG9uLXNwZWNpZmljYXRpb25zJztcbmltcG9ydCBleHBlY3QgZnJvbSAnZXhwZWN0JztcblxuY29uc3QgbW9ja0NsaWNrID0gamVzdC5mbigpO1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudCA9IChcbiAgaXNEaXNhYmxlZCxcbiAgaXNGdWxsV2lkdGgsXG4gIGlzUm91bmQsXG4gIHNpemUsXG4gIHR5cGUsXG4gIHZhbHVlXG4pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBpc0Rpc2FibGVkPXtpc0Rpc2FibGVkfVxuICAgICAgaXNGdWxsV2lkdGg9e2lzRnVsbFdpZHRofVxuICAgICAgaXNSb3VuZD17aXNSb3VuZH1cbiAgICAgIHNpemU9e3NpemV9XG4gICAgICB0eXBlPXt0eXBlfVxuICAgICAgb25DbGljaz17bW9ja0NsaWNrfVxuICAgID5cbiAgICAgIHt2YWx1ZX1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgYnV0dG9uID0gQ29tcG9uZW50KFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNEaXNhYmxlZCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzRnVsbFdpZHRoLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNSb3VuZCxcbiAgICBkZWZhdWx0VmFsdWVzLnNpemUsXG4gICAgZGVmYXVsdFZhbHVlcy50eXBlLFxuICAgIGRlZmF1bHRWYWx1ZXMudmFsdWVcbiAgKVxuKSA9PiB7XG4gIGxldCBvdXRwdXQgPSBtb3VudChidXR0b24pO1xuXG4gIHJldHVybiBkZXNjcmliZSgnQnV0dG9uJywgKCkgPT4ge1xuICAgIGl0KGBTaG91bGQgaGF2ZSB0aGUgcmlnaHQgdGV4dDogJHtidXR0b24ucHJvcHMudmFsdWV9YCwgKCkgPT5cbiAgICAgIGV4cGVjdChvdXRwdXQudGV4dCgpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy52YWx1ZSkpO1xuXG4gICAgaXQoYG9uQ2xpY2sgc2hvdWxkIGhhdmUgYmVlbiBjYWxsZWQgaWYgQnV0dG9uIGlzIG5vdCBkaXNhYmxlZDogYCwgKCkgPT4ge1xuICAgICAgb3V0cHV0LnNldFByb3BzKHtcbiAgICAgICAgb25DbGljazogbW9ja0NsaWNrXG4gICAgICB9KTtcblxuICAgICAgb3V0cHV0LnNpbXVsYXRlKCdjbGljaycpO1xuXG4gICAgICBpZiAoIWJ1dHRvbi5wcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgICAgIGV4cGVjdChidXR0b24ucHJvcHMub25DbGljaykudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGJ1dHRvbi5wcm9wcy5vbkNsaWNrKS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGlzYWJsZWQ6ICR7YnV0dG9uLnByb3BzLmlzRGlzYWJsZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0Rpc2FibGVkJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzRGlzYWJsZWQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzUm91bmQ6ICR7YnV0dG9uLnByb3BzLmlzUm91bmR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc1JvdW5kJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzUm91bmQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRnVsbFdpZHRoOiAke2J1dHRvbi5wcm9wcy5pc0Z1bGxXaWR0aH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRnVsbFdpZHRoJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzRnVsbFdpZHRoKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSB0eXBlOiAke2J1dHRvbi5wcm9wcy50eXBlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgndHlwZScpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy50eXBlKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBzaXplOiAke2J1dHRvbi5wcm9wcy5zaXplfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnc2l6ZScpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy5zaXplKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG50ZXN0cygpO1xuIl19