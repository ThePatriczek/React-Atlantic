d2c9cfab7a5abfe2b62edf8769cdaadd
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _storybookAddonSpecifications = require("storybook-addon-specifications");

var _expect = _interopRequireDefault(require("expect"));

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";

const Component = (isDisabled, isFullWidth, isRound, size, type, value, onClick) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: onClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    },
    __self: void 0
  }, value);
};

exports.Component = Component;
let output;
/*export const tests = (
  button = Component(
    defaultValues.isDisabled,
    defaultValues.isFullWidth,
    defaultValues.isRound,
    defaultValues.size,
    defaultValues.type,
    defaultValues.value
  )
) => {
  output = mount(button);

  return describe('Button', () => {
    it(`Should have the right text: ${button.props.value}`, () => {
      expect(output.props().value).toEqual(button.props.value);
    });

    /!* it(`onClick should have been called if Button is not disabled: `, () => {
      const mockClick = jest.fn();
      output.setProps({
        onClick: mockClick
      });
      output.simulate('click');

      if (!button.props.isDisabled) {
        expect(output.props().onClick).toHaveBeenCalled();
      } else {
        expect(output.props().onClick).not.toHaveBeenCalled();
      }
    });

    it(`Should have isDisabled: ${button.props.isDisabled}`, () => {
      expect(output.prop('isDisabled')).toEqual(button.props.isDisabled);
    });

    it(`Should have isRound: ${button.props.isRound}`, () => {
      expect(output.prop('isRound')).toEqual(button.props.isRound);
    });

    it(`Should have isFullWidth: ${button.props.isFullWidth}`, () => {
      expect(output.prop('isFullWidth')).toEqual(button.props.isFullWidth);
    });

    it(`Should have type: ${button.props.type}`, () => {
      expect(output.prop('type')).toEqual(button.props.type);
    });

    it(`Should have size: ${button.props.size}`, () => {
      expect(output.prop('size')).toEqual(button.props.size);
    });*!/
  });
};

tests();*/

const tests = button => {
  output = (0, _enzyme.mount)(button);
  return (0, _storybookAddonSpecifications.describe)('Checkbox', () => {
    (0, _storybookAddonSpecifications.it)(`Should have isDefaultChecked: ${button.props.value}`, () => {
      (0, _expect.default)(output.props().value).toEqual(button.props.value);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJDb21wb25lbnQiLCJpc0Rpc2FibGVkIiwiaXNGdWxsV2lkdGgiLCJpc1JvdW5kIiwic2l6ZSIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2xpY2siLCJvdXRwdXQiLCJ0ZXN0cyIsImJ1dHRvbiIsInByb3BzIiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFTyxNQUFNQSxTQUFTLEdBQUcsQ0FDdkJDLFVBRHVCLEVBRXZCQyxXQUZ1QixFQUd2QkMsT0FIdUIsRUFJdkJDLElBSnVCLEVBS3ZCQyxJQUx1QixFQU12QkMsS0FOdUIsRUFPdkJDLE9BUHVCLEtBUXBCO0FBQ0gsU0FDRSw2QkFBQyxjQUFEO0FBQ0UsSUFBQSxVQUFVLEVBQUVOLFVBRGQ7QUFFRSxJQUFBLFdBQVcsRUFBRUMsV0FGZjtBQUdFLElBQUEsT0FBTyxFQUFFQyxPQUhYO0FBSUUsSUFBQSxJQUFJLEVBQUVDLElBSlI7QUFLRSxJQUFBLElBQUksRUFBRUMsSUFMUjtBQU1FLElBQUEsT0FBTyxFQUFFRSxPQU5YO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBUUdELEtBUkgsQ0FERjtBQVlELENBckJNOzs7QUF1QlAsSUFBSUUsTUFBSjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdURPLE1BQU1DLEtBQUssR0FBR0MsTUFBTSxJQUFJO0FBQzdCRixFQUFBQSxNQUFNLEdBQUcsbUJBQU1FLE1BQU4sQ0FBVDtBQUVBLFNBQU8sNENBQVMsVUFBVCxFQUFxQixNQUFNO0FBQ2hDLDBDQUFJLGlDQUFnQ0EsTUFBTSxDQUFDQyxLQUFQLENBQWFMLEtBQU0sRUFBdkQsRUFBMEQsTUFBTTtBQUM5RCwyQkFBT0UsTUFBTSxDQUFDRyxLQUFQLEdBQWVMLEtBQXRCLEVBQTZCTSxPQUE3QixDQUFxQ0YsTUFBTSxDQUFDQyxLQUFQLENBQWFMLEtBQWxEO0FBQ0QsS0FGRDtBQUdELEdBSk0sQ0FBUDtBQUtELENBUk07OztBQVVQRyxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbW91bnQsIHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGRlZmF1bHRWYWx1ZXMgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvZGVmYXVsdFZhbHVlcyc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuL0J1dHRvbic7XG5pbXBvcnQgeyBkZXNjcmliZSwgaXQgfSBmcm9tICdzdG9yeWJvb2stYWRkb24tc3BlY2lmaWNhdGlvbnMnO1xuaW1wb3J0IGV4cGVjdCBmcm9tICdleHBlY3QnO1xuXG5leHBvcnQgY29uc3QgQ29tcG9uZW50ID0gKFxuICBpc0Rpc2FibGVkLFxuICBpc0Z1bGxXaWR0aCxcbiAgaXNSb3VuZCxcbiAgc2l6ZSxcbiAgdHlwZSxcbiAgdmFsdWUsXG4gIG9uQ2xpY2tcbikgPT4ge1xuICByZXR1cm4gKFxuICAgIDxCdXR0b25cbiAgICAgIGlzRGlzYWJsZWQ9e2lzRGlzYWJsZWR9XG4gICAgICBpc0Z1bGxXaWR0aD17aXNGdWxsV2lkdGh9XG4gICAgICBpc1JvdW5kPXtpc1JvdW5kfVxuICAgICAgc2l6ZT17c2l6ZX1cbiAgICAgIHR5cGU9e3R5cGV9XG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgID5cbiAgICAgIHt2YWx1ZX1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn07XG5cbmxldCBvdXRwdXQ7XG4vKmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgYnV0dG9uID0gQ29tcG9uZW50KFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNEaXNhYmxlZCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzRnVsbFdpZHRoLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNSb3VuZCxcbiAgICBkZWZhdWx0VmFsdWVzLnNpemUsXG4gICAgZGVmYXVsdFZhbHVlcy50eXBlLFxuICAgIGRlZmF1bHRWYWx1ZXMudmFsdWVcbiAgKVxuKSA9PiB7XG4gIG91dHB1dCA9IG1vdW50KGJ1dHRvbik7XG5cbiAgcmV0dXJuIGRlc2NyaWJlKCdCdXR0b24nLCAoKSA9PiB7XG4gICAgaXQoYFNob3VsZCBoYXZlIHRoZSByaWdodCB0ZXh0OiAke2J1dHRvbi5wcm9wcy52YWx1ZX1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkudmFsdWUpLnRvRXF1YWwoYnV0dG9uLnByb3BzLnZhbHVlKTtcbiAgICB9KTtcblxuICAgIC8hKiBpdChgb25DbGljayBzaG91bGQgaGF2ZSBiZWVuIGNhbGxlZCBpZiBCdXR0b24gaXMgbm90IGRpc2FibGVkOiBgLCAoKSA9PiB7XG4gICAgICBjb25zdCBtb2NrQ2xpY2sgPSBqZXN0LmZuKCk7XG4gICAgICBvdXRwdXQuc2V0UHJvcHMoe1xuICAgICAgICBvbkNsaWNrOiBtb2NrQ2xpY2tcbiAgICAgIH0pO1xuICAgICAgb3V0cHV0LnNpbXVsYXRlKCdjbGljaycpO1xuXG4gICAgICBpZiAoIWJ1dHRvbi5wcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5vbkNsaWNrKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkub25DbGljaykubm90LnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0Rpc2FibGVkOiAke2J1dHRvbi5wcm9wcy5pc0Rpc2FibGVkfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNEaXNhYmxlZCcpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy5pc0Rpc2FibGVkKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBpc1JvdW5kOiAke2J1dHRvbi5wcm9wcy5pc1JvdW5kfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNSb3VuZCcpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy5pc1JvdW5kKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0Z1bGxXaWR0aDogJHtidXR0b24ucHJvcHMuaXNGdWxsV2lkdGh9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0Z1bGxXaWR0aCcpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy5pc0Z1bGxXaWR0aCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgdHlwZTogJHtidXR0b24ucHJvcHMudHlwZX1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ3R5cGUnKSkudG9FcXVhbChidXR0b24ucHJvcHMudHlwZSk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgc2l6ZTogJHtidXR0b24ucHJvcHMuc2l6ZX1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ3NpemUnKSkudG9FcXVhbChidXR0b24ucHJvcHMuc2l6ZSk7XG4gICAgfSk7KiEvXG4gIH0pO1xufTtcblxudGVzdHMoKTsqL1xuXG5leHBvcnQgY29uc3QgdGVzdHMgPSBidXR0b24gPT4ge1xuICBvdXRwdXQgPSBtb3VudChidXR0b24pO1xuXG4gIHJldHVybiBkZXNjcmliZSgnQ2hlY2tib3gnLCAoKSA9PiB7XG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGVmYXVsdENoZWNrZWQ6ICR7YnV0dG9uLnByb3BzLnZhbHVlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS52YWx1ZSkudG9FcXVhbChidXR0b24ucHJvcHMudmFsdWUpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbnRlc3RzKCk7XG4iXX0=