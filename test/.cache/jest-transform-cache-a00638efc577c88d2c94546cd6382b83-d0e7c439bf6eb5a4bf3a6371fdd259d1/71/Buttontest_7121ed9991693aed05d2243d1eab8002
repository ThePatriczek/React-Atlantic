1b529ec5dbbe4062ef41bb3c2b2430d9
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Button = require("./Button");

var _defaultValues = require("../../constants/defaultValues");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";

const Component = (isDisabled, isFullWidth, isRound, size, type, value, onClick) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: onClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 16
    },
    __self: void 0
  }, value);
};

exports.Component = Component;
let output;

const tests = (button = Component(_defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value)) => {
  output = (0, _enzyme.mount)(button);
  return describe('Button', () => {
    it(`Should have isDisabled: ${button.props.isDisabled}`, () => {
      expect(output.props().isDisabled).toEqual(button.props.isDisabled);
    });
    it(`Should have isDefaultChecked: ${button.props.value}`, () => {
      expect(output.props().value).toEqual(button.props.value);
    });
    it(`Should have isDefaultChecked: ${button.props.value}`, () => {
      expect(output.props().value).toEqual(button.props.value);
    });
    it(`Should have isDefaultChecked: ${button.props.value}`, () => {
      expect(output.props().value).toEqual(button.props.value);
    });
    it(`Should have isDefaultChecked: ${button.props.value}`, () => {
      expect(output.props().value).toEqual(button.props.value);
    });
    it(`Should have isDefaultChecked: ${button.props.value}`, () => {
      expect(output.props().value).toEqual(button.props.value);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJDb21wb25lbnQiLCJpc0Rpc2FibGVkIiwiaXNGdWxsV2lkdGgiLCJpc1JvdW5kIiwic2l6ZSIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2xpY2siLCJvdXRwdXQiLCJ0ZXN0cyIsImJ1dHRvbiIsImRlZmF1bHRWYWx1ZXMiLCJkZXNjcmliZSIsIml0IiwicHJvcHMiLCJleHBlY3QiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLFNBQVMsR0FBRyxDQUN2QkMsVUFEdUIsRUFFdkJDLFdBRnVCLEVBR3ZCQyxPQUh1QixFQUl2QkMsSUFKdUIsRUFLdkJDLElBTHVCLEVBTXZCQyxLQU51QixFQU92QkMsT0FQdUIsS0FRcEI7QUFDSCxTQUNFLDZCQUFDLGNBQUQ7QUFDRSxJQUFBLFVBQVUsRUFBRU4sVUFEZDtBQUVFLElBQUEsV0FBVyxFQUFFQyxXQUZmO0FBR0UsSUFBQSxPQUFPLEVBQUVDLE9BSFg7QUFJRSxJQUFBLElBQUksRUFBRUMsSUFKUjtBQUtFLElBQUEsSUFBSSxFQUFFQyxJQUxSO0FBTUUsSUFBQSxPQUFPLEVBQUVFLE9BTlg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FRR0QsS0FSSCxDQURGO0FBWUQsQ0FyQk07OztBQXVCUCxJQUFJRSxNQUFKOztBQUVPLE1BQU1DLEtBQUssR0FBRyxDQUNuQkMsTUFBTSxHQUFHVixTQUFTLENBQ2hCVyw2QkFBY1YsVUFERSxFQUVoQlUsNkJBQWNULFdBRkUsRUFHaEJTLDZCQUFjUixPQUhFLEVBSWhCUSw2QkFBY1AsSUFKRSxFQUtoQk8sNkJBQWNOLElBTEUsRUFNaEJNLDZCQUFjTCxLQU5FLENBREMsS0FTaEI7QUFDSEUsRUFBQUEsTUFBTSxHQUFHLG1CQUFNRSxNQUFOLENBQVQ7QUFFQSxTQUFPRSxRQUFRLENBQUMsUUFBRCxFQUFXLE1BQU07QUFDOUJDLElBQUFBLEVBQUUsQ0FBRSwyQkFBMEJILE1BQU0sQ0FBQ0ksS0FBUCxDQUFhYixVQUFXLEVBQXBELEVBQXVELE1BQU07QUFDN0RjLE1BQUFBLE1BQU0sQ0FBQ1AsTUFBTSxDQUFDTSxLQUFQLEdBQWViLFVBQWhCLENBQU4sQ0FBa0NlLE9BQWxDLENBQTBDTixNQUFNLENBQUNJLEtBQVAsQ0FBYWIsVUFBdkQ7QUFDRCxLQUZDLENBQUY7QUFHQVksSUFBQUEsRUFBRSxDQUFFLGlDQUFnQ0gsTUFBTSxDQUFDSSxLQUFQLENBQWFSLEtBQU0sRUFBckQsRUFBd0QsTUFBTTtBQUM5RFMsTUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNNLEtBQVAsR0FBZVIsS0FBaEIsQ0FBTixDQUE2QlUsT0FBN0IsQ0FBcUNOLE1BQU0sQ0FBQ0ksS0FBUCxDQUFhUixLQUFsRDtBQUNELEtBRkMsQ0FBRjtBQUdBTyxJQUFBQSxFQUFFLENBQUUsaUNBQWdDSCxNQUFNLENBQUNJLEtBQVAsQ0FBYVIsS0FBTSxFQUFyRCxFQUF3RCxNQUFNO0FBQzlEUyxNQUFBQSxNQUFNLENBQUNQLE1BQU0sQ0FBQ00sS0FBUCxHQUFlUixLQUFoQixDQUFOLENBQTZCVSxPQUE3QixDQUFxQ04sTUFBTSxDQUFDSSxLQUFQLENBQWFSLEtBQWxEO0FBQ0QsS0FGQyxDQUFGO0FBR0FPLElBQUFBLEVBQUUsQ0FBRSxpQ0FBZ0NILE1BQU0sQ0FBQ0ksS0FBUCxDQUFhUixLQUFNLEVBQXJELEVBQXdELE1BQU07QUFDOURTLE1BQUFBLE1BQU0sQ0FBQ1AsTUFBTSxDQUFDTSxLQUFQLEdBQWVSLEtBQWhCLENBQU4sQ0FBNkJVLE9BQTdCLENBQXFDTixNQUFNLENBQUNJLEtBQVAsQ0FBYVIsS0FBbEQ7QUFDRCxLQUZDLENBQUY7QUFHQU8sSUFBQUEsRUFBRSxDQUFFLGlDQUFnQ0gsTUFBTSxDQUFDSSxLQUFQLENBQWFSLEtBQU0sRUFBckQsRUFBd0QsTUFBTTtBQUM5RFMsTUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNNLEtBQVAsR0FBZVIsS0FBaEIsQ0FBTixDQUE2QlUsT0FBN0IsQ0FBcUNOLE1BQU0sQ0FBQ0ksS0FBUCxDQUFhUixLQUFsRDtBQUNELEtBRkMsQ0FBRjtBQUdBTyxJQUFBQSxFQUFFLENBQUUsaUNBQWdDSCxNQUFNLENBQUNJLEtBQVAsQ0FBYVIsS0FBTSxFQUFyRCxFQUF3RCxNQUFNO0FBQzlEUyxNQUFBQSxNQUFNLENBQUNQLE1BQU0sQ0FBQ00sS0FBUCxHQUFlUixLQUFoQixDQUFOLENBQTZCVSxPQUE3QixDQUFxQ04sTUFBTSxDQUFDSSxLQUFQLENBQWFSLEtBQWxEO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FuQmMsQ0FBZjtBQW9CRCxDQWhDTTs7O0FBa0NQRyxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbW91bnQgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB7IGRlZmF1bHRWYWx1ZXMgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvZGVmYXVsdFZhbHVlcyc7XG5cbmV4cG9ydCBjb25zdCBDb21wb25lbnQgPSAoXG4gIGlzRGlzYWJsZWQsXG4gIGlzRnVsbFdpZHRoLFxuICBpc1JvdW5kLFxuICBzaXplLFxuICB0eXBlLFxuICB2YWx1ZSxcbiAgb25DbGlja1xuKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEJ1dHRvblxuICAgICAgaXNEaXNhYmxlZD17aXNEaXNhYmxlZH1cbiAgICAgIGlzRnVsbFdpZHRoPXtpc0Z1bGxXaWR0aH1cbiAgICAgIGlzUm91bmQ9e2lzUm91bmR9XG4gICAgICBzaXplPXtzaXplfVxuICAgICAgdHlwZT17dHlwZX1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgPlxuICAgICAge3ZhbHVlfVxuICAgIDwvQnV0dG9uPlxuICApO1xufTtcblxubGV0IG91dHB1dDtcblxuZXhwb3J0IGNvbnN0IHRlc3RzID0gKFxuICBidXR0b24gPSBDb21wb25lbnQoXG4gICAgZGVmYXVsdFZhbHVlcy5pc0Rpc2FibGVkLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNGdWxsV2lkdGgsXG4gICAgZGVmYXVsdFZhbHVlcy5pc1JvdW5kLFxuICAgIGRlZmF1bHRWYWx1ZXMuc2l6ZSxcbiAgICBkZWZhdWx0VmFsdWVzLnR5cGUsXG4gICAgZGVmYXVsdFZhbHVlcy52YWx1ZVxuICApXG4pID0+IHtcbiAgb3V0cHV0ID0gbW91bnQoYnV0dG9uKTtcblxuICByZXR1cm4gZGVzY3JpYmUoJ0J1dHRvbicsICgpID0+IHtcbiAgICBpdChgU2hvdWxkIGhhdmUgaXNEaXNhYmxlZDogJHtidXR0b24ucHJvcHMuaXNEaXNhYmxlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkuaXNEaXNhYmxlZCkudG9FcXVhbChidXR0b24ucHJvcHMuaXNEaXNhYmxlZCk7XG4gICAgfSk7XG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGVmYXVsdENoZWNrZWQ6ICR7YnV0dG9uLnByb3BzLnZhbHVlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS52YWx1ZSkudG9FcXVhbChidXR0b24ucHJvcHMudmFsdWUpO1xuICAgIH0pO1xuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0RlZmF1bHRDaGVja2VkOiAke2J1dHRvbi5wcm9wcy52YWx1ZX1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkudmFsdWUpLnRvRXF1YWwoYnV0dG9uLnByb3BzLnZhbHVlKTtcbiAgICB9KTtcbiAgICBpdChgU2hvdWxkIGhhdmUgaXNEZWZhdWx0Q2hlY2tlZDogJHtidXR0b24ucHJvcHMudmFsdWV9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wcygpLnZhbHVlKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy52YWx1ZSk7XG4gICAgfSk7XG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGVmYXVsdENoZWNrZWQ6ICR7YnV0dG9uLnByb3BzLnZhbHVlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS52YWx1ZSkudG9FcXVhbChidXR0b24ucHJvcHMudmFsdWUpO1xuICAgIH0pO1xuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0RlZmF1bHRDaGVja2VkOiAke2J1dHRvbi5wcm9wcy52YWx1ZX1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkudmFsdWUpLnRvRXF1YWwoYnV0dG9uLnByb3BzLnZhbHVlKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG50ZXN0cygpO1xuIl19