f3c3fd879677760f362c1e0913455f7a
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";
const mockClick = jest.fn();

const Component = (isChecked, isDefaultChecked, isDisabled, isFullWidth, isRound, size, type, value) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: mockClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    },
    __self: void 0
  }, value);
};

exports.Component = Component;
let output;

const tests = button => {
  if (button) {
    output = (0, _enzyme.mount)(button);
  } else {
    output = (0, _enzyme.mount)(Component(_defaultValues.defaultValues.isChecked, _defaultValues.defaultValues.isDefaultChecked, _defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value));
  }
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJtb2NrQ2xpY2siLCJqZXN0IiwiZm4iLCJDb21wb25lbnQiLCJpc0NoZWNrZWQiLCJpc0RlZmF1bHRDaGVja2VkIiwiaXNEaXNhYmxlZCIsImlzRnVsbFdpZHRoIiwiaXNSb3VuZCIsInNpemUiLCJ0eXBlIiwidmFsdWUiLCJvdXRwdXQiLCJ0ZXN0cyIsImJ1dHRvbiIsImRlZmF1bHRWYWx1ZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7QUFFQSxNQUFNQSxTQUFTLEdBQUdDLElBQUksQ0FBQ0MsRUFBTCxFQUFsQjs7QUFDTyxNQUFNQyxTQUFTLEdBQUcsQ0FDdkJDLFNBRHVCLEVBRXZCQyxnQkFGdUIsRUFHdkJDLFVBSHVCLEVBSXZCQyxXQUp1QixFQUt2QkMsT0FMdUIsRUFNdkJDLElBTnVCLEVBT3ZCQyxJQVB1QixFQVF2QkMsS0FSdUIsS0FTcEI7QUFDSCxTQUNFLDZCQUFDLGNBQUQ7QUFDRSxJQUFBLFVBQVUsRUFBRUwsVUFEZDtBQUVFLElBQUEsV0FBVyxFQUFFQyxXQUZmO0FBR0UsSUFBQSxPQUFPLEVBQUVDLE9BSFg7QUFJRSxJQUFBLElBQUksRUFBRUMsSUFKUjtBQUtFLElBQUEsSUFBSSxFQUFFQyxJQUxSO0FBTUUsSUFBQSxPQUFPLEVBQUVWLFNBTlg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FRR1csS0FSSCxDQURGO0FBWUQsQ0F0Qk07OztBQXdCUCxJQUFJQyxNQUFKOztBQUVPLE1BQU1DLEtBQUssR0FBR0MsTUFBTSxJQUFJO0FBQzdCLE1BQUlBLE1BQUosRUFBWTtBQUNWRixJQUFBQSxNQUFNLEdBQUcsbUJBQU1FLE1BQU4sQ0FBVDtBQUNELEdBRkQsTUFFTztBQUNMRixJQUFBQSxNQUFNLEdBQUcsbUJBQ1BULFNBQVMsQ0FDUFksNkJBQWNYLFNBRFAsRUFFUFcsNkJBQWNWLGdCQUZQLEVBR1BVLDZCQUFjVCxVQUhQLEVBSVBTLDZCQUFjUixXQUpQLEVBS1BRLDZCQUFjUCxPQUxQLEVBTVBPLDZCQUFjTixJQU5QLEVBT1BNLDZCQUFjTCxJQVBQLEVBUVBLLDZCQUFjSixLQVJQLENBREYsQ0FBVDtBQVlEO0FBR0YsQ0FuQk07OztBQXFCUEUsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1vdW50IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBkZWZhdWx0VmFsdWVzIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL2RlZmF1bHRWYWx1ZXMnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi9CdXR0b24nO1xuXG5jb25zdCBtb2NrQ2xpY2sgPSBqZXN0LmZuKCk7XG5leHBvcnQgY29uc3QgQ29tcG9uZW50ID0gKFxuICBpc0NoZWNrZWQsXG4gIGlzRGVmYXVsdENoZWNrZWQsXG4gIGlzRGlzYWJsZWQsXG4gIGlzRnVsbFdpZHRoLFxuICBpc1JvdW5kLFxuICBzaXplLFxuICB0eXBlLFxuICB2YWx1ZVxuKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEJ1dHRvblxuICAgICAgaXNEaXNhYmxlZD17aXNEaXNhYmxlZH1cbiAgICAgIGlzRnVsbFdpZHRoPXtpc0Z1bGxXaWR0aH1cbiAgICAgIGlzUm91bmQ9e2lzUm91bmR9XG4gICAgICBzaXplPXtzaXplfVxuICAgICAgdHlwZT17dHlwZX1cbiAgICAgIG9uQ2xpY2s9e21vY2tDbGlja31cbiAgICA+XG4gICAgICB7dmFsdWV9XG4gICAgPC9CdXR0b24+XG4gICk7XG59O1xuXG5sZXQgb3V0cHV0O1xuXG5leHBvcnQgY29uc3QgdGVzdHMgPSBidXR0b24gPT4ge1xuICBpZiAoYnV0dG9uKSB7XG4gICAgb3V0cHV0ID0gbW91bnQoYnV0dG9uKTtcbiAgfSBlbHNlIHtcbiAgICBvdXRwdXQgPSBtb3VudChcbiAgICAgIENvbXBvbmVudChcbiAgICAgICAgZGVmYXVsdFZhbHVlcy5pc0NoZWNrZWQsXG4gICAgICAgIGRlZmF1bHRWYWx1ZXMuaXNEZWZhdWx0Q2hlY2tlZCxcbiAgICAgICAgZGVmYXVsdFZhbHVlcy5pc0Rpc2FibGVkLFxuICAgICAgICBkZWZhdWx0VmFsdWVzLmlzRnVsbFdpZHRoLFxuICAgICAgICBkZWZhdWx0VmFsdWVzLmlzUm91bmQsXG4gICAgICAgIGRlZmF1bHRWYWx1ZXMuc2l6ZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlcy50eXBlLFxuICAgICAgICBkZWZhdWx0VmFsdWVzLnZhbHVlXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG5cbn07XG5cbnRlc3RzKCk7XG4iXX0=