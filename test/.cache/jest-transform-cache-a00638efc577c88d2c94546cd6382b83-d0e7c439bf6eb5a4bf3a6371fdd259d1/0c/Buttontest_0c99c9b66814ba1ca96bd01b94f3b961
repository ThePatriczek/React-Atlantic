ba673a1b26a094aa9125067b48c1c742
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _storybookAddonSpecifications = require("storybook-addon-specifications");

var _expect = _interopRequireDefault(require("expect"));

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";

const Component = (isDisabled, isFullWidth, isRound, size, type, value, onClick) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: onClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    },
    __self: void 0
  }, value);
};

exports.Component = Component;
let output;
/*export const tests = (
  button = Component(
    defaultValues.isDisabled,
    defaultValues.isFullWidth,
    defaultValues.isRound,
    defaultValues.size,
    defaultValues.type,
    defaultValues.value
  )
) => {
  output = mount(button);

  return describe('Button', () => {
    it(`Should have the right text: ${button.props.value}`, () => {
      expect(output.props().value).toEqual(button.props.value);
    });

    /!* it(`onClick should have been called if Button is not disabled: `, () => {
      const mockClick = jest.fn();
      output.setProps({
        onClick: mockClick
      });
      output.simulate('click');

      if (!button.props.isDisabled) {
        expect(output.props().onClick).toHaveBeenCalled();
      } else {
        expect(output.props().onClick).not.toHaveBeenCalled();
      }
    });

    it(`Should have isDisabled: ${button.props.isDisabled}`, () => {
      expect(output.prop('isDisabled')).toEqual(button.props.isDisabled);
    });

    it(`Should have isRound: ${button.props.isRound}`, () => {
      expect(output.prop('isRound')).toEqual(button.props.isRound);
    });

    it(`Should have isFullWidth: ${button.props.isFullWidth}`, () => {
      expect(output.prop('isFullWidth')).toEqual(button.props.isFullWidth);
    });

    it(`Should have type: ${button.props.type}`, () => {
      expect(output.prop('type')).toEqual(button.props.type);
    });

    it(`Should have size: ${button.props.size}`, () => {
      expect(output.prop('size')).toEqual(button.props.size);
    });*!/
  });
};

tests();*/

const tests = (button = Component(_defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value)) => {
  output = (0, _enzyme.mount)(button);
  return (0, _storybookAddonSpecifications.describe)('Checkbox', () => {
    (0, _storybookAddonSpecifications.it)(`Should have isDefaultChecked: ${checkbox.props.isDefaultChecked}`, () => {
      (0, _expect.default)(output.props().isDefaultChecked).toEqual(checkbox.props.isDefaultChecked);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isChecked: ${checkbox.props.isChecked}`, () => {
      (0, _expect.default)(output.props().isChecked).toEqual(checkbox.props.isChecked);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {
      (0, _expect.default)(output.props().isDisabled).toEqual(checkbox.props.isDisabled);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {
      (0, _expect.default)(output.props().isPartiallyChecked).toEqual(checkbox.props.isPartiallyChecked);
    });
    (0, _storybookAddonSpecifications.it)(`Should have position: ${checkbox.props.position}`, () => {
      (0, _expect.default)(output.props().position).toEqual(checkbox.props.position);
    });
    (0, _storybookAddonSpecifications.it)(`Should have children: ${checkbox.props.children}`, () => {
      (0, _expect.default)(output.props().children).toEqual(checkbox.props.children);
    });
  });
};

exports.tests = tests;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJDb21wb25lbnQiLCJpc0Rpc2FibGVkIiwiaXNGdWxsV2lkdGgiLCJpc1JvdW5kIiwic2l6ZSIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2xpY2siLCJvdXRwdXQiLCJ0ZXN0cyIsImJ1dHRvbiIsImRlZmF1bHRWYWx1ZXMiLCJjaGVja2JveCIsInByb3BzIiwiaXNEZWZhdWx0Q2hlY2tlZCIsInRvRXF1YWwiLCJpc0NoZWNrZWQiLCJpc1BhcnRpYWxseUNoZWNrZWQiLCJwb3NpdGlvbiIsImNoaWxkcmVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLFNBQVMsR0FBRyxDQUN2QkMsVUFEdUIsRUFFdkJDLFdBRnVCLEVBR3ZCQyxPQUh1QixFQUl2QkMsSUFKdUIsRUFLdkJDLElBTHVCLEVBTXZCQyxLQU51QixFQU92QkMsT0FQdUIsS0FRcEI7QUFDSCxTQUNFLDZCQUFDLGNBQUQ7QUFDRSxJQUFBLFVBQVUsRUFBRU4sVUFEZDtBQUVFLElBQUEsV0FBVyxFQUFFQyxXQUZmO0FBR0UsSUFBQSxPQUFPLEVBQUVDLE9BSFg7QUFJRSxJQUFBLElBQUksRUFBRUMsSUFKUjtBQUtFLElBQUEsSUFBSSxFQUFFQyxJQUxSO0FBTUUsSUFBQSxPQUFPLEVBQUVFLE9BTlg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FRR0QsS0FSSCxDQURGO0FBWUQsQ0FyQk07OztBQXVCUCxJQUFJRSxNQUFKO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1RE8sTUFBTUMsS0FBSyxHQUFHLENBQ25CQyxNQUFNLEdBQUdWLFNBQVMsQ0FDaEJXLDZCQUFjVixVQURFLEVBRWhCVSw2QkFBY1QsV0FGRSxFQUdoQlMsNkJBQWNSLE9BSEUsRUFJaEJRLDZCQUFjUCxJQUpFLEVBS2hCTyw2QkFBY04sSUFMRSxFQU1oQk0sNkJBQWNMLEtBTkUsQ0FEQyxLQVNoQjtBQUNIRSxFQUFBQSxNQUFNLEdBQUcsbUJBQU1FLE1BQU4sQ0FBVDtBQUVBLFNBQU8sNENBQVMsVUFBVCxFQUFxQixNQUFNO0FBQ2hDLDBDQUFJLGlDQUFnQ0UsUUFBUSxDQUFDQyxLQUFULENBQWVDLGdCQUFpQixFQUFwRSxFQUF1RSxNQUFNO0FBQzNFLDJCQUFPTixNQUFNLENBQUNLLEtBQVAsR0FBZUMsZ0JBQXRCLEVBQXdDQyxPQUF4QyxDQUNFSCxRQUFRLENBQUNDLEtBQVQsQ0FBZUMsZ0JBRGpCO0FBR0QsS0FKRDtBQUtBLDBDQUFJLDBCQUF5QkYsUUFBUSxDQUFDQyxLQUFULENBQWVHLFNBQVUsRUFBdEQsRUFBeUQsTUFBTTtBQUM3RCwyQkFBT1IsTUFBTSxDQUFDSyxLQUFQLEdBQWVHLFNBQXRCLEVBQWlDRCxPQUFqQyxDQUF5Q0gsUUFBUSxDQUFDQyxLQUFULENBQWVHLFNBQXhEO0FBQ0QsS0FGRDtBQUdBLDBDQUFJLDJCQUEwQkosUUFBUSxDQUFDQyxLQUFULENBQWVaLFVBQVcsRUFBeEQsRUFBMkQsTUFBTTtBQUMvRCwyQkFBT08sTUFBTSxDQUFDSyxLQUFQLEdBQWVaLFVBQXRCLEVBQWtDYyxPQUFsQyxDQUEwQ0gsUUFBUSxDQUFDQyxLQUFULENBQWVaLFVBQXpEO0FBQ0QsS0FGRDtBQUdBLDBDQUFJLG1DQUFrQ1csUUFBUSxDQUFDQyxLQUFULENBQWVJLGtCQUFtQixFQUF4RSxFQUEyRSxNQUFNO0FBQy9FLDJCQUFPVCxNQUFNLENBQUNLLEtBQVAsR0FBZUksa0JBQXRCLEVBQTBDRixPQUExQyxDQUNFSCxRQUFRLENBQUNDLEtBQVQsQ0FBZUksa0JBRGpCO0FBR0QsS0FKRDtBQUtBLDBDQUFJLHlCQUF3QkwsUUFBUSxDQUFDQyxLQUFULENBQWVLLFFBQVMsRUFBcEQsRUFBdUQsTUFBTTtBQUMzRCwyQkFBT1YsTUFBTSxDQUFDSyxLQUFQLEdBQWVLLFFBQXRCLEVBQWdDSCxPQUFoQyxDQUF3Q0gsUUFBUSxDQUFDQyxLQUFULENBQWVLLFFBQXZEO0FBQ0QsS0FGRDtBQUdBLDBDQUFJLHlCQUF3Qk4sUUFBUSxDQUFDQyxLQUFULENBQWVNLFFBQVMsRUFBcEQsRUFBdUQsTUFBTTtBQUMzRCwyQkFBT1gsTUFBTSxDQUFDSyxLQUFQLEdBQWVNLFFBQXRCLEVBQWdDSixPQUFoQyxDQUF3Q0gsUUFBUSxDQUFDQyxLQUFULENBQWVNLFFBQXZEO0FBQ0QsS0FGRDtBQUdELEdBdkJNLENBQVA7QUF3QkQsQ0FwQ00iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZGVmYXVsdFZhbHVlcyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9kZWZhdWx0VmFsdWVzJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB7IGRlc2NyaWJlLCBpdCB9IGZyb20gJ3N0b3J5Ym9vay1hZGRvbi1zcGVjaWZpY2F0aW9ucyc7XG5pbXBvcnQgZXhwZWN0IGZyb20gJ2V4cGVjdCc7XG5cbmV4cG9ydCBjb25zdCBDb21wb25lbnQgPSAoXG4gIGlzRGlzYWJsZWQsXG4gIGlzRnVsbFdpZHRoLFxuICBpc1JvdW5kLFxuICBzaXplLFxuICB0eXBlLFxuICB2YWx1ZSxcbiAgb25DbGlja1xuKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEJ1dHRvblxuICAgICAgaXNEaXNhYmxlZD17aXNEaXNhYmxlZH1cbiAgICAgIGlzRnVsbFdpZHRoPXtpc0Z1bGxXaWR0aH1cbiAgICAgIGlzUm91bmQ9e2lzUm91bmR9XG4gICAgICBzaXplPXtzaXplfVxuICAgICAgdHlwZT17dHlwZX1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgPlxuICAgICAge3ZhbHVlfVxuICAgIDwvQnV0dG9uPlxuICApO1xufTtcblxubGV0IG91dHB1dDtcbi8qZXhwb3J0IGNvbnN0IHRlc3RzID0gKFxuICBidXR0b24gPSBDb21wb25lbnQoXG4gICAgZGVmYXVsdFZhbHVlcy5pc0Rpc2FibGVkLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNGdWxsV2lkdGgsXG4gICAgZGVmYXVsdFZhbHVlcy5pc1JvdW5kLFxuICAgIGRlZmF1bHRWYWx1ZXMuc2l6ZSxcbiAgICBkZWZhdWx0VmFsdWVzLnR5cGUsXG4gICAgZGVmYXVsdFZhbHVlcy52YWx1ZVxuICApXG4pID0+IHtcbiAgb3V0cHV0ID0gbW91bnQoYnV0dG9uKTtcblxuICByZXR1cm4gZGVzY3JpYmUoJ0J1dHRvbicsICgpID0+IHtcbiAgICBpdChgU2hvdWxkIGhhdmUgdGhlIHJpZ2h0IHRleHQ6ICR7YnV0dG9uLnByb3BzLnZhbHVlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS52YWx1ZSkudG9FcXVhbChidXR0b24ucHJvcHMudmFsdWUpO1xuICAgIH0pO1xuXG4gICAgLyEqIGl0KGBvbkNsaWNrIHNob3VsZCBoYXZlIGJlZW4gY2FsbGVkIGlmIEJ1dHRvbiBpcyBub3QgZGlzYWJsZWQ6IGAsICgpID0+IHtcbiAgICAgIGNvbnN0IG1vY2tDbGljayA9IGplc3QuZm4oKTtcbiAgICAgIG91dHB1dC5zZXRQcm9wcyh7XG4gICAgICAgIG9uQ2xpY2s6IG1vY2tDbGlja1xuICAgICAgfSk7XG4gICAgICBvdXRwdXQuc2ltdWxhdGUoJ2NsaWNrJyk7XG5cbiAgICAgIGlmICghYnV0dG9uLnByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wcygpLm9uQ2xpY2spLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5vbkNsaWNrKS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGlzYWJsZWQ6ICR7YnV0dG9uLnByb3BzLmlzRGlzYWJsZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0Rpc2FibGVkJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzRGlzYWJsZWQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzUm91bmQ6ICR7YnV0dG9uLnByb3BzLmlzUm91bmR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc1JvdW5kJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzUm91bmQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRnVsbFdpZHRoOiAke2J1dHRvbi5wcm9wcy5pc0Z1bGxXaWR0aH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRnVsbFdpZHRoJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzRnVsbFdpZHRoKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSB0eXBlOiAke2J1dHRvbi5wcm9wcy50eXBlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgndHlwZScpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy50eXBlKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBzaXplOiAke2J1dHRvbi5wcm9wcy5zaXplfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnc2l6ZScpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy5zaXplKTtcbiAgICB9KTsqIS9cbiAgfSk7XG59O1xuXG50ZXN0cygpOyovXG5cbmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgYnV0dG9uID0gQ29tcG9uZW50KFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNEaXNhYmxlZCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzRnVsbFdpZHRoLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNSb3VuZCxcbiAgICBkZWZhdWx0VmFsdWVzLnNpemUsXG4gICAgZGVmYXVsdFZhbHVlcy50eXBlLFxuICAgIGRlZmF1bHRWYWx1ZXMudmFsdWVcbiAgKVxuKSA9PiB7XG4gIG91dHB1dCA9IG1vdW50KGJ1dHRvbik7XG5cbiAgcmV0dXJuIGRlc2NyaWJlKCdDaGVja2JveCcsICgpID0+IHtcbiAgICBpdChgU2hvdWxkIGhhdmUgaXNEZWZhdWx0Q2hlY2tlZDogJHtjaGVja2JveC5wcm9wcy5pc0RlZmF1bHRDaGVja2VkfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5pc0RlZmF1bHRDaGVja2VkKS50b0VxdWFsKFxuICAgICAgICBjaGVja2JveC5wcm9wcy5pc0RlZmF1bHRDaGVja2VkXG4gICAgICApO1xuICAgIH0pO1xuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0NoZWNrZWQ6ICR7Y2hlY2tib3gucHJvcHMuaXNDaGVja2VkfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5pc0NoZWNrZWQpLnRvRXF1YWwoY2hlY2tib3gucHJvcHMuaXNDaGVja2VkKTtcbiAgICB9KTtcbiAgICBpdChgU2hvdWxkIGhhdmUgaXNEaXNhYmxlZDogJHtjaGVja2JveC5wcm9wcy5pc0Rpc2FibGVkfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5pc0Rpc2FibGVkKS50b0VxdWFsKGNoZWNrYm94LnByb3BzLmlzRGlzYWJsZWQpO1xuICAgIH0pO1xuICAgIGl0KGBTaG91bGQgaGF2ZSBpc1BhcnRpYWxseUNoZWNrZWQ6ICR7Y2hlY2tib3gucHJvcHMuaXNQYXJ0aWFsbHlDaGVja2VkfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5pc1BhcnRpYWxseUNoZWNrZWQpLnRvRXF1YWwoXG4gICAgICAgIGNoZWNrYm94LnByb3BzLmlzUGFydGlhbGx5Q2hlY2tlZFxuICAgICAgKTtcbiAgICB9KTtcbiAgICBpdChgU2hvdWxkIGhhdmUgcG9zaXRpb246ICR7Y2hlY2tib3gucHJvcHMucG9zaXRpb259YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wcygpLnBvc2l0aW9uKS50b0VxdWFsKGNoZWNrYm94LnByb3BzLnBvc2l0aW9uKTtcbiAgICB9KTtcbiAgICBpdChgU2hvdWxkIGhhdmUgY2hpbGRyZW46ICR7Y2hlY2tib3gucHJvcHMuY2hpbGRyZW59YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wcygpLmNoaWxkcmVuKS50b0VxdWFsKGNoZWNrYm94LnByb3BzLmNoaWxkcmVuKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuIl19