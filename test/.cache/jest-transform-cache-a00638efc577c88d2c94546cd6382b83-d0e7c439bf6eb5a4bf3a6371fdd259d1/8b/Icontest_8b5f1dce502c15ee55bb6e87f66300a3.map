{"version":3,"sources":["Icon.test.jsx"],"names":["Component","name","isRotating","output","tests","icon","defaultValues","iconName","describe","it","checkbox","props","isDefaultChecked","expect","toEqual","isChecked","isDisabled","isPartiallyChecked","position","children"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AAC7C,SAAO,6BAAC,UAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,UAAU,EAAEC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFM;;;AAIP,IAAIC,MAAJ;;AAEO,MAAMC,KAAK,GAAG,CACnBC,IAAI,GAAGL,SAAS,CAACM,6BAAcC,QAAf,EAAyBD,6BAAcJ,UAAvC,CADG,KAEhB;AACHC,EAAAA,MAAM,GAAG,mBAAME,IAAN,CAAT;AAEA,SAAOG,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,iCAAgCC,QAAQ,CAACC,KAAT,CAAeC,gBAAiB,EAAlE,EAAqE,MAAM;AAC3EC,MAAAA,MAAM,CAACV,MAAM,CAACQ,KAAP,GAAeC,gBAAhB,CAAN,CAAwCE,OAAxC,CACEJ,QAAQ,CAACC,KAAT,CAAeC,gBADjB;AAGD,KAJC,CAAF;AAKAH,IAAAA,EAAE,CAAE,0BAAyBC,QAAQ,CAACC,KAAT,CAAeI,SAAU,EAApD,EAAuD,MAAM;AAC7DF,MAAAA,MAAM,CAACV,MAAM,CAACQ,KAAP,GAAeI,SAAhB,CAAN,CAAiCD,OAAjC,CAAyCJ,QAAQ,CAACC,KAAT,CAAeI,SAAxD;AACD,KAFC,CAAF;AAGAN,IAAAA,EAAE,CAAE,2BAA0BC,QAAQ,CAACC,KAAT,CAAeK,UAAW,EAAtD,EAAyD,MAAM;AAC/DH,MAAAA,MAAM,CAACV,MAAM,CAACQ,KAAP,GAAeK,UAAhB,CAAN,CAAkCF,OAAlC,CAA0CJ,QAAQ,CAACC,KAAT,CAAeK,UAAzD;AACD,KAFC,CAAF;AAGAP,IAAAA,EAAE,CAAE,mCAAkCC,QAAQ,CAACC,KAAT,CAAeM,kBAAmB,EAAtE,EAAyE,MAAM;AAC/EJ,MAAAA,MAAM,CAACV,MAAM,CAACQ,KAAP,GAAeM,kBAAhB,CAAN,CAA0CH,OAA1C,CACEJ,QAAQ,CAACC,KAAT,CAAeM,kBADjB;AAGD,KAJC,CAAF;AAKAR,IAAAA,EAAE,CAAE,yBAAwBC,QAAQ,CAACC,KAAT,CAAeO,QAAS,EAAlD,EAAqD,MAAM;AAC3DL,MAAAA,MAAM,CAACV,MAAM,CAACQ,KAAP,GAAeO,QAAhB,CAAN,CAAgCJ,OAAhC,CAAwCJ,QAAQ,CAACC,KAAT,CAAeO,QAAvD;AACD,KAFC,CAAF;AAGAT,IAAAA,EAAE,CAAE,yBAAwBC,QAAQ,CAACC,KAAT,CAAeQ,QAAS,EAAlD,EAAqD,MAAM;AAC3DN,MAAAA,MAAM,CAACV,MAAM,CAACQ,KAAP,GAAeQ,QAAhB,CAAN,CAAgCL,OAAhC,CAAwCJ,QAAQ,CAACC,KAAT,CAAeQ,QAAvD;AACD,KAFC,CAAF;AAGD,GAvBc,CAAf;AAwBD,CA7BM;;;AA+BPf,KAAK","sourcesContent":["import { mount } from 'enzyme';\nimport React from 'react';\nimport { Icon } from './Icon';\nimport { defaultValues } from '../../constants/defaultValues';\n\nexport const Component = (name, isRotating) => {\n  return <Icon name={name} isRotating={isRotating} />;\n};\n\nlet output;\n\nexport const tests = (\n  icon = Component(defaultValues.iconName, defaultValues.isRotating)\n) => {\n  output = mount(icon);\n\n  return describe('Checkbox', () => {\n    it(`Should have isDefaultChecked: ${checkbox.props.isDefaultChecked}`, () => {\n      expect(output.props().isDefaultChecked).toEqual(\n        checkbox.props.isDefaultChecked\n      );\n    });\n    it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {\n      expect(output.props().isChecked).toEqual(checkbox.props.isChecked);\n    });\n    it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {\n      expect(output.props().isDisabled).toEqual(checkbox.props.isDisabled);\n    });\n    it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {\n      expect(output.props().isPartiallyChecked).toEqual(\n        checkbox.props.isPartiallyChecked\n      );\n    });\n    it(`Should have position: ${checkbox.props.position}`, () => {\n      expect(output.props().position).toEqual(checkbox.props.position);\n    });\n    it(`Should have children: ${checkbox.props.children}`, () => {\n      expect(output.props().children).toEqual(checkbox.props.children);\n    });\n  });\n};\n\ntests();\n"]}