f65b1f99f140634a616695f73a577f48
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Icon = require("./Icon");

var _defaultValues = require("../../constants/defaultValues");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Icon/Icon.test.jsx";

const Component = (name, isRotating) => {
  return _react.default.createElement(_Icon.Icon, {
    name: name,
    isRotating: isRotating,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 7
    },
    __self: void 0
  });
};

exports.Component = Component;
let output;

const tests = (icon = Component(_defaultValues.defaultValues.iconName, _defaultValues.defaultValues.isRotating)) => {
  output = (0, _enzyme.mount)(icon);
  return describe('Checkbox', () => {
    it(`Should have isDefaultChecked: ${checkbox.props.isDefaultChecked}`, () => {
      expect(output.props().isDefaultChecked).toEqual(checkbox.props.isDefaultChecked);
    });
    it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {
      expect(output.props().isChecked).toEqual(checkbox.props.isChecked);
    });
    it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {
      expect(output.props().isDisabled).toEqual(checkbox.props.isDisabled);
    });
    it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {
      expect(output.props().isPartiallyChecked).toEqual(checkbox.props.isPartiallyChecked);
    });
    it(`Should have position: ${checkbox.props.position}`, () => {
      expect(output.props().position).toEqual(checkbox.props.position);
    });
    it(`Should have children: ${checkbox.props.children}`, () => {
      expect(output.props().children).toEqual(checkbox.props.children);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkljb24udGVzdC5qc3giXSwibmFtZXMiOlsiQ29tcG9uZW50IiwibmFtZSIsImlzUm90YXRpbmciLCJvdXRwdXQiLCJ0ZXN0cyIsImljb24iLCJkZWZhdWx0VmFsdWVzIiwiaWNvbk5hbWUiLCJkZXNjcmliZSIsIml0IiwiY2hlY2tib3giLCJwcm9wcyIsImlzRGVmYXVsdENoZWNrZWQiLCJleHBlY3QiLCJ0b0VxdWFsIiwiaXNDaGVja2VkIiwiaXNEaXNhYmxlZCIsImlzUGFydGlhbGx5Q2hlY2tlZCIsInBvc2l0aW9uIiwiY2hpbGRyZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRU8sTUFBTUEsU0FBUyxHQUFHLENBQUNDLElBQUQsRUFBT0MsVUFBUCxLQUFzQjtBQUM3QyxTQUFPLDZCQUFDLFVBQUQ7QUFBTSxJQUFBLElBQUksRUFBRUQsSUFBWjtBQUFrQixJQUFBLFVBQVUsRUFBRUMsVUFBOUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFBUDtBQUNELENBRk07OztBQUlQLElBQUlDLE1BQUo7O0FBRU8sTUFBTUMsS0FBSyxHQUFHLENBQ25CQyxJQUFJLEdBQUdMLFNBQVMsQ0FBQ00sNkJBQWNDLFFBQWYsRUFBeUJELDZCQUFjSixVQUF2QyxDQURHLEtBRWhCO0FBQ0hDLEVBQUFBLE1BQU0sR0FBRyxtQkFBTUUsSUFBTixDQUFUO0FBRUEsU0FBT0csUUFBUSxDQUFDLFVBQUQsRUFBYSxNQUFNO0FBQ2hDQyxJQUFBQSxFQUFFLENBQUUsaUNBQWdDQyxRQUFRLENBQUNDLEtBQVQsQ0FBZUMsZ0JBQWlCLEVBQWxFLEVBQXFFLE1BQU07QUFDM0VDLE1BQUFBLE1BQU0sQ0FBQ1YsTUFBTSxDQUFDUSxLQUFQLEdBQWVDLGdCQUFoQixDQUFOLENBQXdDRSxPQUF4QyxDQUNFSixRQUFRLENBQUNDLEtBQVQsQ0FBZUMsZ0JBRGpCO0FBR0QsS0FKQyxDQUFGO0FBS0FILElBQUFBLEVBQUUsQ0FBRSwwQkFBeUJDLFFBQVEsQ0FBQ0MsS0FBVCxDQUFlSSxTQUFVLEVBQXBELEVBQXVELE1BQU07QUFDN0RGLE1BQUFBLE1BQU0sQ0FBQ1YsTUFBTSxDQUFDUSxLQUFQLEdBQWVJLFNBQWhCLENBQU4sQ0FBaUNELE9BQWpDLENBQXlDSixRQUFRLENBQUNDLEtBQVQsQ0FBZUksU0FBeEQ7QUFDRCxLQUZDLENBQUY7QUFHQU4sSUFBQUEsRUFBRSxDQUFFLDJCQUEwQkMsUUFBUSxDQUFDQyxLQUFULENBQWVLLFVBQVcsRUFBdEQsRUFBeUQsTUFBTTtBQUMvREgsTUFBQUEsTUFBTSxDQUFDVixNQUFNLENBQUNRLEtBQVAsR0FBZUssVUFBaEIsQ0FBTixDQUFrQ0YsT0FBbEMsQ0FBMENKLFFBQVEsQ0FBQ0MsS0FBVCxDQUFlSyxVQUF6RDtBQUNELEtBRkMsQ0FBRjtBQUdBUCxJQUFBQSxFQUFFLENBQUUsbUNBQWtDQyxRQUFRLENBQUNDLEtBQVQsQ0FBZU0sa0JBQW1CLEVBQXRFLEVBQXlFLE1BQU07QUFDL0VKLE1BQUFBLE1BQU0sQ0FBQ1YsTUFBTSxDQUFDUSxLQUFQLEdBQWVNLGtCQUFoQixDQUFOLENBQTBDSCxPQUExQyxDQUNFSixRQUFRLENBQUNDLEtBQVQsQ0FBZU0sa0JBRGpCO0FBR0QsS0FKQyxDQUFGO0FBS0FSLElBQUFBLEVBQUUsQ0FBRSx5QkFBd0JDLFFBQVEsQ0FBQ0MsS0FBVCxDQUFlTyxRQUFTLEVBQWxELEVBQXFELE1BQU07QUFDM0RMLE1BQUFBLE1BQU0sQ0FBQ1YsTUFBTSxDQUFDUSxLQUFQLEdBQWVPLFFBQWhCLENBQU4sQ0FBZ0NKLE9BQWhDLENBQXdDSixRQUFRLENBQUNDLEtBQVQsQ0FBZU8sUUFBdkQ7QUFDRCxLQUZDLENBQUY7QUFHQVQsSUFBQUEsRUFBRSxDQUFFLHlCQUF3QkMsUUFBUSxDQUFDQyxLQUFULENBQWVRLFFBQVMsRUFBbEQsRUFBcUQsTUFBTTtBQUMzRE4sTUFBQUEsTUFBTSxDQUFDVixNQUFNLENBQUNRLEtBQVAsR0FBZVEsUUFBaEIsQ0FBTixDQUFnQ0wsT0FBaEMsQ0FBd0NKLFFBQVEsQ0FBQ0MsS0FBVCxDQUFlUSxRQUF2RDtBQUNELEtBRkMsQ0FBRjtBQUdELEdBdkJjLENBQWY7QUF3QkQsQ0E3Qk07OztBQStCUGYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1vdW50IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBJY29uIH0gZnJvbSAnLi9JY29uJztcbmltcG9ydCB7IGRlZmF1bHRWYWx1ZXMgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvZGVmYXVsdFZhbHVlcyc7XG5cbmV4cG9ydCBjb25zdCBDb21wb25lbnQgPSAobmFtZSwgaXNSb3RhdGluZykgPT4ge1xuICByZXR1cm4gPEljb24gbmFtZT17bmFtZX0gaXNSb3RhdGluZz17aXNSb3RhdGluZ30gLz47XG59O1xuXG5sZXQgb3V0cHV0O1xuXG5leHBvcnQgY29uc3QgdGVzdHMgPSAoXG4gIGljb24gPSBDb21wb25lbnQoZGVmYXVsdFZhbHVlcy5pY29uTmFtZSwgZGVmYXVsdFZhbHVlcy5pc1JvdGF0aW5nKVxuKSA9PiB7XG4gIG91dHB1dCA9IG1vdW50KGljb24pO1xuXG4gIHJldHVybiBkZXNjcmliZSgnQ2hlY2tib3gnLCAoKSA9PiB7XG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGVmYXVsdENoZWNrZWQ6ICR7Y2hlY2tib3gucHJvcHMuaXNEZWZhdWx0Q2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkuaXNEZWZhdWx0Q2hlY2tlZCkudG9FcXVhbChcbiAgICAgICAgY2hlY2tib3gucHJvcHMuaXNEZWZhdWx0Q2hlY2tlZFxuICAgICAgKTtcbiAgICB9KTtcbiAgICBpdChgU2hvdWxkIGhhdmUgaXNDaGVja2VkOiAke2NoZWNrYm94LnByb3BzLmlzQ2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkuaXNDaGVja2VkKS50b0VxdWFsKGNoZWNrYm94LnByb3BzLmlzQ2hlY2tlZCk7XG4gICAgfSk7XG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGlzYWJsZWQ6ICR7Y2hlY2tib3gucHJvcHMuaXNEaXNhYmxlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkuaXNEaXNhYmxlZCkudG9FcXVhbChjaGVja2JveC5wcm9wcy5pc0Rpc2FibGVkKTtcbiAgICB9KTtcbiAgICBpdChgU2hvdWxkIGhhdmUgaXNQYXJ0aWFsbHlDaGVja2VkOiAke2NoZWNrYm94LnByb3BzLmlzUGFydGlhbGx5Q2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkuaXNQYXJ0aWFsbHlDaGVja2VkKS50b0VxdWFsKFxuICAgICAgICBjaGVja2JveC5wcm9wcy5pc1BhcnRpYWxseUNoZWNrZWRcbiAgICAgICk7XG4gICAgfSk7XG4gICAgaXQoYFNob3VsZCBoYXZlIHBvc2l0aW9uOiAke2NoZWNrYm94LnByb3BzLnBvc2l0aW9ufWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5wb3NpdGlvbikudG9FcXVhbChjaGVja2JveC5wcm9wcy5wb3NpdGlvbik7XG4gICAgfSk7XG4gICAgaXQoYFNob3VsZCBoYXZlIGNoaWxkcmVuOiAke2NoZWNrYm94LnByb3BzLmNoaWxkcmVufWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS5jaGlsZHJlbikudG9FcXVhbChjaGVja2JveC5wcm9wcy5jaGlsZHJlbik7XG4gICAgfSk7XG4gIH0pO1xufTtcblxudGVzdHMoKTtcbiJdfQ==