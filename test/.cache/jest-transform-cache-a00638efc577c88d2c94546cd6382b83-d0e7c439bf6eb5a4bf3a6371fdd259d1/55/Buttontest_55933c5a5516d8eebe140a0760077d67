376dcf2f76cd4fb5ef411440f806034e
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _storybookAddonSpecifications = require("storybook-addon-specifications");

var _expect = _interopRequireDefault(require("expect"));

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";

const Component = (isDisabled, isFullWidth, isRound, size, type, value, onClick) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: onClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    },
    __self: void 0
  }, value);
};

exports.Component = Component;
let output;

const tests = (button = Component(_defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value)) => {
  output = (0, _enzyme.mount)(button);
  return (0, _storybookAddonSpecifications.describe)('Button', () => {
    (0, _storybookAddonSpecifications.it)(`Should have the right text: ${button.props.value}`, () => {
      (0, _expect.default)(output.props().value).toEqual(button.props.value);
    });
    (0, _storybookAddonSpecifications.it)(`onClick should have been called if Button is not disabled: `, () => {
      const mockClick = jest.fn();
      output.setProps({
        onClick: mockClick
      });
      output.simulate('click');

      if (!button.props.isDisabled) {
        (0, _expect.default)(output.props().onClick).toHaveBeenCalled();
      } else {
        (0, _expect.default)(output.props().onClick).not.toHaveBeenCalled();
      }
    });
    (0, _storybookAddonSpecifications.it)(`Should have isDisabled: ${button.props.isDisabled}`, () => {
      (0, _expect.default)(output.prop('isDisabled')).toEqual(button.props.isDisabled);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isRound: ${button.props.isRound}`, () => {
      (0, _expect.default)(output.prop('isRound')).toEqual(button.props.isRound);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isFullWidth: ${button.props.isFullWidth}`, () => {
      (0, _expect.default)(output.prop('isFullWidth')).toEqual(button.props.isFullWidth);
    });
    (0, _storybookAddonSpecifications.it)(`Should have type: ${button.props.type}`, () => {
      (0, _expect.default)(output.prop('type')).toEqual(button.props.type);
    });
    (0, _storybookAddonSpecifications.it)(`Should have size: ${button.props.size}`, () => {
      (0, _expect.default)(output.prop('size')).toEqual(button.props.size);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJDb21wb25lbnQiLCJpc0Rpc2FibGVkIiwiaXNGdWxsV2lkdGgiLCJpc1JvdW5kIiwic2l6ZSIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2xpY2siLCJvdXRwdXQiLCJ0ZXN0cyIsImJ1dHRvbiIsImRlZmF1bHRWYWx1ZXMiLCJwcm9wcyIsInRvRXF1YWwiLCJtb2NrQ2xpY2siLCJqZXN0IiwiZm4iLCJzZXRQcm9wcyIsInNpbXVsYXRlIiwidG9IYXZlQmVlbkNhbGxlZCIsIm5vdCIsInByb3AiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRU8sTUFBTUEsU0FBUyxHQUFHLENBQ3ZCQyxVQUR1QixFQUV2QkMsV0FGdUIsRUFHdkJDLE9BSHVCLEVBSXZCQyxJQUp1QixFQUt2QkMsSUFMdUIsRUFNdkJDLEtBTnVCLEVBT3ZCQyxPQVB1QixLQVFwQjtBQUNILFNBQ0UsNkJBQUMsY0FBRDtBQUNFLElBQUEsVUFBVSxFQUFFTixVQURkO0FBRUUsSUFBQSxXQUFXLEVBQUVDLFdBRmY7QUFHRSxJQUFBLE9BQU8sRUFBRUMsT0FIWDtBQUlFLElBQUEsSUFBSSxFQUFFQyxJQUpSO0FBS0UsSUFBQSxJQUFJLEVBQUVDLElBTFI7QUFNRSxJQUFBLE9BQU8sRUFBRUUsT0FOWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQVFHRCxLQVJILENBREY7QUFZRCxDQXJCTTs7O0FBdUJQLElBQUlFLE1BQUo7O0FBQ08sTUFBTUMsS0FBSyxHQUFHLENBQ25CQyxNQUFNLEdBQUdWLFNBQVMsQ0FDaEJXLDZCQUFjVixVQURFLEVBRWhCVSw2QkFBY1QsV0FGRSxFQUdoQlMsNkJBQWNSLE9BSEUsRUFJaEJRLDZCQUFjUCxJQUpFLEVBS2hCTyw2QkFBY04sSUFMRSxFQU1oQk0sNkJBQWNMLEtBTkUsQ0FEQyxLQVNoQjtBQUNIRSxFQUFBQSxNQUFNLEdBQUcsbUJBQU1FLE1BQU4sQ0FBVDtBQUVBLFNBQU8sNENBQVMsUUFBVCxFQUFtQixNQUFNO0FBQzlCLDBDQUFJLCtCQUE4QkEsTUFBTSxDQUFDRSxLQUFQLENBQWFOLEtBQU0sRUFBckQsRUFBd0QsTUFBTTtBQUM1RCwyQkFBT0UsTUFBTSxDQUFDSSxLQUFQLEdBQWVOLEtBQXRCLEVBQTZCTyxPQUE3QixDQUFxQ0gsTUFBTSxDQUFDRSxLQUFQLENBQWFOLEtBQWxEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLDZEQUFKLEVBQWtFLE1BQU07QUFDdEUsWUFBTVEsU0FBUyxHQUFHQyxJQUFJLENBQUNDLEVBQUwsRUFBbEI7QUFDQVIsTUFBQUEsTUFBTSxDQUFDUyxRQUFQLENBQWdCO0FBQ2RWLFFBQUFBLE9BQU8sRUFBRU87QUFESyxPQUFoQjtBQUdBTixNQUFBQSxNQUFNLENBQUNVLFFBQVAsQ0FBZ0IsT0FBaEI7O0FBRUEsVUFBSSxDQUFDUixNQUFNLENBQUNFLEtBQVAsQ0FBYVgsVUFBbEIsRUFBOEI7QUFDNUIsNkJBQU9PLE1BQU0sQ0FBQ0ksS0FBUCxHQUFlTCxPQUF0QixFQUErQlksZ0JBQS9CO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsNkJBQU9YLE1BQU0sQ0FBQ0ksS0FBUCxHQUFlTCxPQUF0QixFQUErQmEsR0FBL0IsQ0FBbUNELGdCQUFuQztBQUNEO0FBQ0YsS0FaRDtBQWNBLDBDQUFJLDJCQUEwQlQsTUFBTSxDQUFDRSxLQUFQLENBQWFYLFVBQVcsRUFBdEQsRUFBeUQsTUFBTTtBQUM3RCwyQkFBT08sTUFBTSxDQUFDYSxJQUFQLENBQVksWUFBWixDQUFQLEVBQWtDUixPQUFsQyxDQUEwQ0gsTUFBTSxDQUFDRSxLQUFQLENBQWFYLFVBQXZEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHdCQUF1QlMsTUFBTSxDQUFDRSxLQUFQLENBQWFULE9BQVEsRUFBaEQsRUFBbUQsTUFBTTtBQUN2RCwyQkFBT0ssTUFBTSxDQUFDYSxJQUFQLENBQVksU0FBWixDQUFQLEVBQStCUixPQUEvQixDQUF1Q0gsTUFBTSxDQUFDRSxLQUFQLENBQWFULE9BQXBEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLDRCQUEyQk8sTUFBTSxDQUFDRSxLQUFQLENBQWFWLFdBQVksRUFBeEQsRUFBMkQsTUFBTTtBQUMvRCwyQkFBT00sTUFBTSxDQUFDYSxJQUFQLENBQVksYUFBWixDQUFQLEVBQW1DUixPQUFuQyxDQUEyQ0gsTUFBTSxDQUFDRSxLQUFQLENBQWFWLFdBQXhEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHFCQUFvQlEsTUFBTSxDQUFDRSxLQUFQLENBQWFQLElBQUssRUFBMUMsRUFBNkMsTUFBTTtBQUNqRCwyQkFBT0csTUFBTSxDQUFDYSxJQUFQLENBQVksTUFBWixDQUFQLEVBQTRCUixPQUE1QixDQUFvQ0gsTUFBTSxDQUFDRSxLQUFQLENBQWFQLElBQWpEO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHFCQUFvQkssTUFBTSxDQUFDRSxLQUFQLENBQWFSLElBQUssRUFBMUMsRUFBNkMsTUFBTTtBQUNqRCwyQkFBT0ksTUFBTSxDQUFDYSxJQUFQLENBQVksTUFBWixDQUFQLEVBQTRCUixPQUE1QixDQUFvQ0gsTUFBTSxDQUFDRSxLQUFQLENBQWFSLElBQWpEO0FBQ0QsS0FGRDtBQUdELEdBdENNLENBQVA7QUF1Q0QsQ0FuRE07OztBQXFEUEssS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1vdW50IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBkZWZhdWx0VmFsdWVzIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL2RlZmF1bHRWYWx1ZXMnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi9CdXR0b24nO1xuaW1wb3J0IHsgZGVzY3JpYmUsIGl0IH0gZnJvbSAnc3Rvcnlib29rLWFkZG9uLXNwZWNpZmljYXRpb25zJztcbmltcG9ydCBleHBlY3QgZnJvbSAnZXhwZWN0JztcblxuZXhwb3J0IGNvbnN0IENvbXBvbmVudCA9IChcbiAgaXNEaXNhYmxlZCxcbiAgaXNGdWxsV2lkdGgsXG4gIGlzUm91bmQsXG4gIHNpemUsXG4gIHR5cGUsXG4gIHZhbHVlLFxuICBvbkNsaWNrXG4pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBpc0Rpc2FibGVkPXtpc0Rpc2FibGVkfVxuICAgICAgaXNGdWxsV2lkdGg9e2lzRnVsbFdpZHRofVxuICAgICAgaXNSb3VuZD17aXNSb3VuZH1cbiAgICAgIHNpemU9e3NpemV9XG4gICAgICB0eXBlPXt0eXBlfVxuICAgICAgb25DbGljaz17b25DbGlja31cbiAgICA+XG4gICAgICB7dmFsdWV9XG4gICAgPC9CdXR0b24+XG4gICk7XG59O1xuXG5sZXQgb3V0cHV0O1xuZXhwb3J0IGNvbnN0IHRlc3RzID0gKFxuICBidXR0b24gPSBDb21wb25lbnQoXG4gICAgZGVmYXVsdFZhbHVlcy5pc0Rpc2FibGVkLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNGdWxsV2lkdGgsXG4gICAgZGVmYXVsdFZhbHVlcy5pc1JvdW5kLFxuICAgIGRlZmF1bHRWYWx1ZXMuc2l6ZSxcbiAgICBkZWZhdWx0VmFsdWVzLnR5cGUsXG4gICAgZGVmYXVsdFZhbHVlcy52YWx1ZVxuICApXG4pID0+IHtcbiAgb3V0cHV0ID0gbW91bnQoYnV0dG9uKTtcblxuICByZXR1cm4gZGVzY3JpYmUoJ0J1dHRvbicsICgpID0+IHtcbiAgICBpdChgU2hvdWxkIGhhdmUgdGhlIHJpZ2h0IHRleHQ6ICR7YnV0dG9uLnByb3BzLnZhbHVlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcHMoKS52YWx1ZSkudG9FcXVhbChidXR0b24ucHJvcHMudmFsdWUpO1xuICAgIH0pO1xuXG4gICAgaXQoYG9uQ2xpY2sgc2hvdWxkIGhhdmUgYmVlbiBjYWxsZWQgaWYgQnV0dG9uIGlzIG5vdCBkaXNhYmxlZDogYCwgKCkgPT4ge1xuICAgICAgY29uc3QgbW9ja0NsaWNrID0gamVzdC5mbigpO1xuICAgICAgb3V0cHV0LnNldFByb3BzKHtcbiAgICAgICAgb25DbGljazogbW9ja0NsaWNrXG4gICAgICB9KTtcbiAgICAgIG91dHB1dC5zaW11bGF0ZSgnY2xpY2snKTtcblxuICAgICAgaWYgKCFidXR0b24ucHJvcHMuaXNEaXNhYmxlZCkge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkub25DbGljaykudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wcygpLm9uQ2xpY2spLm5vdC50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNEaXNhYmxlZDogJHtidXR0b24ucHJvcHMuaXNEaXNhYmxlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRGlzYWJsZWQnKSkudG9FcXVhbChidXR0b24ucHJvcHMuaXNEaXNhYmxlZCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNSb3VuZDogJHtidXR0b24ucHJvcHMuaXNSb3VuZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzUm91bmQnKSkudG9FcXVhbChidXR0b24ucHJvcHMuaXNSb3VuZCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNGdWxsV2lkdGg6ICR7YnV0dG9uLnByb3BzLmlzRnVsbFdpZHRofWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNGdWxsV2lkdGgnKSkudG9FcXVhbChidXR0b24ucHJvcHMuaXNGdWxsV2lkdGgpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIHR5cGU6ICR7YnV0dG9uLnByb3BzLnR5cGV9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCd0eXBlJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLnR5cGUpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIHNpemU6ICR7YnV0dG9uLnByb3BzLnNpemV9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdzaXplJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLnNpemUpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbnRlc3RzKCk7Il19