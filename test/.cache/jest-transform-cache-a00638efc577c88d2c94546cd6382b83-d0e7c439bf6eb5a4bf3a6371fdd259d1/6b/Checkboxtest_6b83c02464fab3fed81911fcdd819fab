652d82734b52ca751f2e6984ef159907
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Checkbox = require("./Checkbox");

var _defaultValues = require("./defaultValues");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Checkbox/Checkbox.test.jsx";

const Component = (isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children) => {
  return _react.default.createElement(_Checkbox.Checkbox, {
    isChecked: isChecked,
    isPartiallyChecked: isPartiallyChecked,
    isDefaultChecked: isDefaultChecked,
    isDisabled: isDisabled,
    position: position,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15
    },
    __self: void 0
  }, children);
};

exports.Component = Component;
let output = (0, _enzyme.shallow)(Component());

const tests = (checkbox = Component(), props = {
  isChecked: _defaultValues.defaultValues.isChecked,
  isDefaultChecked: _defaultValues.defaultValues.isDefaultChecked,
  isDisabled: _defaultValues.defaultValues.isDisabled,
  isPartiallyChecked: _defaultValues.defaultValues.isPartiallyChecked,
  position: _defaultValues.defaultValues.position,
  children: _defaultValues.defaultValues.children
}) => {
  output = (0, _enzyme.shallow)(checkbox(props));
  console.log(checkbox);
  return describe('Checkbox', () => {
    it(`Should have isChecked: ${props.isChecked}`, () => {
      expect(output.prop('isChecked')).toEqual(props.isChecked);
    });
    it(`Should have isDefaultChecked: ${props.isDefaultChecked}`, () => {
      expect(output.prop('isDefaultChecked')).toEqual(props.isDefaultChecked);
    });
    it(`Should have isDisabled: ${props.isDisabled}`, () => {
      expect(output.prop('isDisabled')).toEqual(props.isDisabled);
    });
    it(`Should have isPartiallyChecked: ${props.isPartiallyChecked}`, () => {
      expect(output.prop('isPartiallyChecked')).toEqual(props.isPartiallyChecked);
    });
    it(`Should have position: ${props.position}`, () => {
      expect(output.prop('position')).toEqual(props.position);
    });
    it(`Should have children: ${props.children}`, () => {
      expect(output.prop('children')).toEqual(props.children);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrYm94LnRlc3QuanN4Il0sIm5hbWVzIjpbIkNvbXBvbmVudCIsImlzQ2hlY2tlZCIsImlzRGVmYXVsdENoZWNrZWQiLCJpc0Rpc2FibGVkIiwiaXNQYXJ0aWFsbHlDaGVja2VkIiwicG9zaXRpb24iLCJjaGlsZHJlbiIsIm91dHB1dCIsInRlc3RzIiwiY2hlY2tib3giLCJwcm9wcyIsImRlZmF1bHRWYWx1ZXMiLCJjb25zb2xlIiwibG9nIiwiZGVzY3JpYmUiLCJpdCIsImV4cGVjdCIsInByb3AiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLFNBQVMsR0FBRyxDQUN2QkMsU0FEdUIsRUFFdkJDLGdCQUZ1QixFQUd2QkMsVUFIdUIsRUFJdkJDLGtCQUp1QixFQUt2QkMsUUFMdUIsRUFNdkJDLFFBTnVCLEtBT3BCO0FBQ0gsU0FDRSw2QkFBQyxrQkFBRDtBQUNFLElBQUEsU0FBUyxFQUFFTCxTQURiO0FBRUUsSUFBQSxrQkFBa0IsRUFBRUcsa0JBRnRCO0FBR0UsSUFBQSxnQkFBZ0IsRUFBRUYsZ0JBSHBCO0FBSUUsSUFBQSxVQUFVLEVBQUVDLFVBSmQ7QUFLRSxJQUFBLFFBQVEsRUFBRUUsUUFMWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQU9HQyxRQVBILENBREY7QUFXRCxDQW5CTTs7O0FBcUJQLElBQUlDLE1BQU0sR0FBRyxxQkFBUVAsU0FBUyxFQUFqQixDQUFiOztBQUVPLE1BQU1RLEtBQUssR0FBRyxDQUNuQkMsUUFBUSxHQUFHVCxTQUFTLEVBREQsRUFFbkJVLEtBQUssR0FBRztBQUNOVCxFQUFBQSxTQUFTLEVBQUVVLDZCQUFjVixTQURuQjtBQUVOQyxFQUFBQSxnQkFBZ0IsRUFBRVMsNkJBQWNULGdCQUYxQjtBQUdOQyxFQUFBQSxVQUFVLEVBQUVRLDZCQUFjUixVQUhwQjtBQUlOQyxFQUFBQSxrQkFBa0IsRUFBRU8sNkJBQWNQLGtCQUo1QjtBQUtOQyxFQUFBQSxRQUFRLEVBQUVNLDZCQUFjTixRQUxsQjtBQU1OQyxFQUFBQSxRQUFRLEVBQUVLLDZCQUFjTDtBQU5sQixDQUZXLEtBVWhCO0FBQ0hDLEVBQUFBLE1BQU0sR0FBRyxxQkFBUUUsUUFBUSxDQUFDQyxLQUFELENBQWhCLENBQVQ7QUFFQUUsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLFFBQVo7QUFFQSxTQUFPSyxRQUFRLENBQUMsVUFBRCxFQUFhLE1BQU07QUFDaENDLElBQUFBLEVBQUUsQ0FBRSwwQkFBeUJMLEtBQUssQ0FBQ1QsU0FBVSxFQUEzQyxFQUE4QyxNQUFNO0FBQ3BEZSxNQUFBQSxNQUFNLENBQUNULE1BQU0sQ0FBQ1UsSUFBUCxDQUFZLFdBQVosQ0FBRCxDQUFOLENBQWlDQyxPQUFqQyxDQUF5Q1IsS0FBSyxDQUFDVCxTQUEvQztBQUNELEtBRkMsQ0FBRjtBQUlBYyxJQUFBQSxFQUFFLENBQUUsaUNBQWdDTCxLQUFLLENBQUNSLGdCQUFpQixFQUF6RCxFQUE0RCxNQUFNO0FBQ2xFYyxNQUFBQSxNQUFNLENBQUNULE1BQU0sQ0FBQ1UsSUFBUCxDQUFZLGtCQUFaLENBQUQsQ0FBTixDQUF3Q0MsT0FBeEMsQ0FBZ0RSLEtBQUssQ0FBQ1IsZ0JBQXREO0FBQ0QsS0FGQyxDQUFGO0FBSUFhLElBQUFBLEVBQUUsQ0FBRSwyQkFBMEJMLEtBQUssQ0FBQ1AsVUFBVyxFQUE3QyxFQUFnRCxNQUFNO0FBQ3REYSxNQUFBQSxNQUFNLENBQUNULE1BQU0sQ0FBQ1UsSUFBUCxDQUFZLFlBQVosQ0FBRCxDQUFOLENBQWtDQyxPQUFsQyxDQUEwQ1IsS0FBSyxDQUFDUCxVQUFoRDtBQUNELEtBRkMsQ0FBRjtBQUlBWSxJQUFBQSxFQUFFLENBQUUsbUNBQWtDTCxLQUFLLENBQUNOLGtCQUFtQixFQUE3RCxFQUFnRSxNQUFNO0FBQ3RFWSxNQUFBQSxNQUFNLENBQUNULE1BQU0sQ0FBQ1UsSUFBUCxDQUFZLG9CQUFaLENBQUQsQ0FBTixDQUEwQ0MsT0FBMUMsQ0FDRVIsS0FBSyxDQUFDTixrQkFEUjtBQUdELEtBSkMsQ0FBRjtBQU1BVyxJQUFBQSxFQUFFLENBQUUseUJBQXdCTCxLQUFLLENBQUNMLFFBQVMsRUFBekMsRUFBNEMsTUFBTTtBQUNsRFcsTUFBQUEsTUFBTSxDQUFDVCxNQUFNLENBQUNVLElBQVAsQ0FBWSxVQUFaLENBQUQsQ0FBTixDQUFnQ0MsT0FBaEMsQ0FBd0NSLEtBQUssQ0FBQ0wsUUFBOUM7QUFDRCxLQUZDLENBQUY7QUFJQVUsSUFBQUEsRUFBRSxDQUFFLHlCQUF3QkwsS0FBSyxDQUFDSixRQUFTLEVBQXpDLEVBQTRDLE1BQU07QUFDbERVLE1BQUFBLE1BQU0sQ0FBQ1QsTUFBTSxDQUFDVSxJQUFQLENBQVksVUFBWixDQUFELENBQU4sQ0FBZ0NDLE9BQWhDLENBQXdDUixLQUFLLENBQUNKLFFBQTlDO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0ExQmMsQ0FBZjtBQTJCRCxDQTFDTTs7O0FBNENQRSxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2hhbGxvdyB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICcuL0NoZWNrYm94JztcbmltcG9ydCB7IGRlZmF1bHRWYWx1ZXMgfSBmcm9tICcuL2RlZmF1bHRWYWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgQ29tcG9uZW50ID0gKFxuICBpc0NoZWNrZWQsXG4gIGlzRGVmYXVsdENoZWNrZWQsXG4gIGlzRGlzYWJsZWQsXG4gIGlzUGFydGlhbGx5Q2hlY2tlZCxcbiAgcG9zaXRpb24sXG4gIGNoaWxkcmVuXG4pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Q2hlY2tib3hcbiAgICAgIGlzQ2hlY2tlZD17aXNDaGVja2VkfVxuICAgICAgaXNQYXJ0aWFsbHlDaGVja2VkPXtpc1BhcnRpYWxseUNoZWNrZWR9XG4gICAgICBpc0RlZmF1bHRDaGVja2VkPXtpc0RlZmF1bHRDaGVja2VkfVxuICAgICAgaXNEaXNhYmxlZD17aXNEaXNhYmxlZH1cbiAgICAgIHBvc2l0aW9uPXtwb3NpdGlvbn1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9DaGVja2JveD5cbiAgKTtcbn07XG5cbmxldCBvdXRwdXQgPSBzaGFsbG93KENvbXBvbmVudCgpKTtcblxuZXhwb3J0IGNvbnN0IHRlc3RzID0gKFxuICBjaGVja2JveCA9IENvbXBvbmVudCgpLFxuICBwcm9wcyA9IHtcbiAgICBpc0NoZWNrZWQ6IGRlZmF1bHRWYWx1ZXMuaXNDaGVja2VkLFxuICAgIGlzRGVmYXVsdENoZWNrZWQ6IGRlZmF1bHRWYWx1ZXMuaXNEZWZhdWx0Q2hlY2tlZCxcbiAgICBpc0Rpc2FibGVkOiBkZWZhdWx0VmFsdWVzLmlzRGlzYWJsZWQsXG4gICAgaXNQYXJ0aWFsbHlDaGVja2VkOiBkZWZhdWx0VmFsdWVzLmlzUGFydGlhbGx5Q2hlY2tlZCxcbiAgICBwb3NpdGlvbjogZGVmYXVsdFZhbHVlcy5wb3NpdGlvbixcbiAgICBjaGlsZHJlbjogZGVmYXVsdFZhbHVlcy5jaGlsZHJlblxuICB9XG4pID0+IHtcbiAgb3V0cHV0ID0gc2hhbGxvdyhjaGVja2JveChwcm9wcykpO1xuXG4gIGNvbnNvbGUubG9nKGNoZWNrYm94KTtcblxuICByZXR1cm4gZGVzY3JpYmUoJ0NoZWNrYm94JywgKCkgPT4ge1xuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0NoZWNrZWQ6ICR7cHJvcHMuaXNDaGVja2VkfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNDaGVja2VkJykpLnRvRXF1YWwocHJvcHMuaXNDaGVja2VkKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0RlZmF1bHRDaGVja2VkOiAke3Byb3BzLmlzRGVmYXVsdENoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0RlZmF1bHRDaGVja2VkJykpLnRvRXF1YWwocHJvcHMuaXNEZWZhdWx0Q2hlY2tlZCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNEaXNhYmxlZDogJHtwcm9wcy5pc0Rpc2FibGVkfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNEaXNhYmxlZCcpKS50b0VxdWFsKHByb3BzLmlzRGlzYWJsZWQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzUGFydGlhbGx5Q2hlY2tlZDogJHtwcm9wcy5pc1BhcnRpYWxseUNoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc1BhcnRpYWxseUNoZWNrZWQnKSkudG9FcXVhbChcbiAgICAgICAgcHJvcHMuaXNQYXJ0aWFsbHlDaGVja2VkXG4gICAgICApO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIHBvc2l0aW9uOiAke3Byb3BzLnBvc2l0aW9ufWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgncG9zaXRpb24nKSkudG9FcXVhbChwcm9wcy5wb3NpdGlvbik7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgY2hpbGRyZW46ICR7cHJvcHMuY2hpbGRyZW59YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdjaGlsZHJlbicpKS50b0VxdWFsKHByb3BzLmNoaWxkcmVuKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG50ZXN0cygpO1xuIl19