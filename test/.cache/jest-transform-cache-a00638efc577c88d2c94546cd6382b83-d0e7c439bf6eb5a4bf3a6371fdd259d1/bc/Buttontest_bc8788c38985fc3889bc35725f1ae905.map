{"version":3,"sources":["Button.test.jsx"],"names":["Component","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","tests","button","defaultValues","describe","it","props","value","expect","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,GAAG,CACvBC,SADuB,EAEvBC,gBAFuB,EAGvBC,UAHuB,EAIvBC,kBAJuB,EAKvBC,QALuB,EAMvBC,QANuB,KAOpB;AACH,SACE,6BAAC,cAAD;AACE,IAAA,SAAS,EAAEL,SADb;AAEE,IAAA,kBAAkB,EAAEG,kBAFtB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGC,QAPH,CADF;AAWD,CAnBM;;;AAqBP,IAAIC,MAAJ;;AAEO,MAAMC,KAAK,GAAG,CACnBC,MAAM,GAAGT,SAAS,CAChBU,6BAAcT,SADE,EAEhBS,6BAAcR,gBAFE,EAGhBQ,6BAAcP,UAHE,EAIhBO,6BAAcN,kBAJE,EAKhBM,6BAAcL,QALE,EAMhBK,6BAAcJ,QANE,CADC,KAShB;AACHC,EAAAA,MAAM,GAAG,mBAAME,MAAN,CAAT;AAEA,SAAOE,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,iCAAgCH,MAAM,CAACI,KAAP,CAAaC,KAAM,EAArD,EAAwD,MAAM;AAC9DC,MAAAA,MAAM,CAACR,MAAM,CAACM,KAAP,GAAeX,gBAAhB,CAAN,CAAwCc,OAAxC,CAAgDP,MAAM,CAACI,KAAP,CAAaC,KAA7D;AACD,KAFC,CAAF;AAGD,GAJc,CAAf;AAKD,CAjBM;;;AAmBPN,KAAK","sourcesContent":["import { mount } from 'enzyme';\nimport React from 'react';\nimport { Button } from './Button';\nimport { defaultValues } from '../../constants/defaultValues';\n\nexport const Component = (\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  return (\n    <Button\n      isChecked={isChecked}\n      isPartiallyChecked={isPartiallyChecked}\n      isDefaultChecked={isDefaultChecked}\n      isDisabled={isDisabled}\n      position={position}\n    >\n      {children}\n    </Button>\n  );\n};\n\nlet output;\n\nexport const tests = (\n  button = Component(\n    defaultValues.isChecked,\n    defaultValues.isDefaultChecked,\n    defaultValues.isDisabled,\n    defaultValues.isPartiallyChecked,\n    defaultValues.position,\n    defaultValues.children\n  )\n) => {\n  output = mount(button);\n\n  return describe('Checkbox', () => {\n    it(`Should have isDefaultChecked: ${button.props.value}`, () => {\n      expect(output.props().isDefaultChecked).toEqual(button.props.value);\n    });\n  });\n};\n\ntests();\n"]}