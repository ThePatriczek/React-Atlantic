{"version":3,"sources":["Button.test.jsx"],"names":["Component","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","isFullWidth","isRound","size","type","value","output","tests","checkbox","defaultValues","describe","it","props","expect","toEqual","prop"],"mappings":"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","sourcesContent":["import { mount } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport { defaultValues } from '../defaultValues';\nimport { Button } from './Button';\nimport { action } from '@storybook/addon-actions';\n\nexport const Component = (\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  return (\n    <Button\n      isDisabled={isDisabled}\n      isFullWidth={isFullWidth}\n      isRound={isRound}\n      size={size}\n      type={type}\n      onClick={action(`onClick`)}\n    >\n      {value}\n    </Button>\n  );\n};\n\nlet output;\n\nexport const tests = checkbox => {\n  if (checkbox) {\n    output = mount(checkbox);\n  } else {\n    output = mount(\n      Component(\n        defaultValues.isChecked,\n        defaultValues.isDefaultChecked,\n        defaultValues.isDisabled,\n        defaultValues.isPartiallyChecked,\n        defaultValues.position,\n        defaultValues.children\n      )\n    );\n  }\n\n  return describe('Checkbox', () => {\n    if (checkbox) {\n      it(`Should have isDefaultChecked: ${checkbox.props.isDefaultChecked}`, () => {\n        expect(output.props().isDefaultChecked).toEqual(\n          checkbox.props.isDefaultChecked\n        );\n      });\n      it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {\n        expect(output.prop('isChecked')).toEqual(checkbox.props.isChecked);\n      });\n      it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {\n        expect(output.prop('isDisabled')).toEqual(checkbox.props.isDisabled);\n      });\n      it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {\n        expect(output.prop('isPartiallyChecked')).toEqual(\n          checkbox.props.isPartiallyChecked\n        );\n      });\n      it(`Should have position: ${checkbox.props.position}`, () => {\n        expect(output.prop('position')).toEqual(checkbox.props.position);\n      });\n      it(`Should have children: ${checkbox.props.children}`, () => {\n        expect(output.prop('children')).toEqual(checkbox.props.children);\n      });\n    } else {\n      it(`Should have isDefaultChecked: ${defaultValues.isDefaultChecked}`, () => {\n        expect(output.props().isDefaultChecked).toEqual(\n          defaultValues.isDefaultChecked\n        );\n      });\n      it(`Should have isChecked: ${defaultValues.isChecked}`, () => {\n        expect(output.prop('isChecked')).toEqual(defaultValues.isChecked);\n      });\n\n      it(`Should have isDisabled: ${defaultValues.isDisabled}`, () => {\n        expect(output.prop('isDisabled')).toEqual(defaultValues.isDisabled);\n      });\n      it(`Should have isPartiallyChecked: ${defaultValues.isPartiallyChecked}`, () => {\n        expect(output.prop('isPartiallyChecked')).toEqual(\n          defaultValues.isPartiallyChecked\n        );\n      });\n      it(`Should have position: ${defaultValues.position}`, () => {\n        expect(output.prop('position')).toEqual(defaultValues.position);\n      });\n      it(`Should have children: ${defaultValues.children}`, () => {\n        expect(output.prop('children')).toEqual(defaultValues.children);\n      });\n    }\n  });\n};\n\ntests();\n"]}