325a79a6ef97a00b87e2d5fab2710657
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _storybookAddonSpecifications = require("storybook-addon-specifications");

var _expect = _interopRequireDefault(require("expect"));

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";
const mockClick = jest.fn();

const Component = (isChecked, isDefaultChecked, isDisabled, isFullWidth, isRound, size, type, value) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: mockClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20
    },
    __self: void 0
  }, value);
};

exports.Component = Component;
let output;

const tests = (button = Component(_defaultValues.defaultValues.isChecked, _defaultValues.defaultValues.isDefaultChecked, _defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value)) => {
  output = (0, _enzyme.mount)(button);
  return (0, _storybookAddonSpecifications.describe)('Button', () => {
    (0, _storybookAddonSpecifications.it)(`Should have the right text: ${button.props.value}`, () => (0, _expect.default)(output.text()).toEqual(value));
    (0, _storybookAddonSpecifications.it)(`onClick should have been called if Button is not disabled`, () => {
      const mockClick = jest.fn();
      output.setProps({
        onClick: mockClick
      });
      output.simulate('click');

      if (!isDisabled) {
        (0, _expect.default)(mockClick).toHaveBeenCalled();
      } else {
        (0, _expect.default)(mockClick).not.toHaveBeenCalled();
      }
    });
    (0, _storybookAddonSpecifications.it)(`Should have isDisabled: ${isDisabled}`, () => {
      (0, _expect.default)(output.prop('isDisabled')).toEqual(isDisabled);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isRound: ${isRound}`, () => {
      (0, _expect.default)(output.prop('isRound')).toEqual(isRound);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isFullWidth: ${isFullWidth}`, () => {
      (0, _expect.default)(output.prop('isFullWidth')).toEqual(isFullWidth);
    });
    (0, _storybookAddonSpecifications.it)(`Should have type: ${type}`, () => {
      (0, _expect.default)(output.prop('type')).toEqual(type);
    });
    (0, _storybookAddonSpecifications.it)(`Should have size: ${size}`, () => {
      (0, _expect.default)(output.prop('size')).toEqual(size);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJtb2NrQ2xpY2siLCJqZXN0IiwiZm4iLCJDb21wb25lbnQiLCJpc0NoZWNrZWQiLCJpc0RlZmF1bHRDaGVja2VkIiwiaXNEaXNhYmxlZCIsImlzRnVsbFdpZHRoIiwiaXNSb3VuZCIsInNpemUiLCJ0eXBlIiwidmFsdWUiLCJvdXRwdXQiLCJ0ZXN0cyIsImJ1dHRvbiIsImRlZmF1bHRWYWx1ZXMiLCJwcm9wcyIsInRleHQiLCJ0b0VxdWFsIiwic2V0UHJvcHMiLCJvbkNsaWNrIiwic2ltdWxhdGUiLCJ0b0hhdmVCZWVuQ2FsbGVkIiwibm90IiwicHJvcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7OztBQUVBLE1BQU1BLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxFQUFMLEVBQWxCOztBQUNPLE1BQU1DLFNBQVMsR0FBRyxDQUN2QkMsU0FEdUIsRUFFdkJDLGdCQUZ1QixFQUd2QkMsVUFIdUIsRUFJdkJDLFdBSnVCLEVBS3ZCQyxPQUx1QixFQU12QkMsSUFOdUIsRUFPdkJDLElBUHVCLEVBUXZCQyxLQVJ1QixLQVNwQjtBQUNILFNBQ0UsNkJBQUMsY0FBRDtBQUNFLElBQUEsVUFBVSxFQUFFTCxVQURkO0FBRUUsSUFBQSxXQUFXLEVBQUVDLFdBRmY7QUFHRSxJQUFBLE9BQU8sRUFBRUMsT0FIWDtBQUlFLElBQUEsSUFBSSxFQUFFQyxJQUpSO0FBS0UsSUFBQSxJQUFJLEVBQUVDLElBTFI7QUFNRSxJQUFBLE9BQU8sRUFBRVYsU0FOWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQVFHVyxLQVJILENBREY7QUFZRCxDQXRCTTs7O0FBd0JQLElBQUlDLE1BQUo7O0FBRU8sTUFBTUMsS0FBSyxHQUFHLENBQ25CQyxNQUFNLEdBQUdYLFNBQVMsQ0FDaEJZLDZCQUFjWCxTQURFLEVBRWhCVyw2QkFBY1YsZ0JBRkUsRUFHaEJVLDZCQUFjVCxVQUhFLEVBSWhCUyw2QkFBY1IsV0FKRSxFQUtoQlEsNkJBQWNQLE9BTEUsRUFNaEJPLDZCQUFjTixJQU5FLEVBT2hCTSw2QkFBY0wsSUFQRSxFQVFoQkssNkJBQWNKLEtBUkUsQ0FEQyxLQVdoQjtBQUNIQyxFQUFBQSxNQUFNLEdBQUcsbUJBQU1FLE1BQU4sQ0FBVDtBQUVBLFNBQU8sNENBQVMsUUFBVCxFQUFtQixNQUFNO0FBQzlCLDBDQUFJLCtCQUE4QkEsTUFBTSxDQUFDRSxLQUFQLENBQWFMLEtBQU0sRUFBckQsRUFBd0QsTUFDdEQscUJBQU9DLE1BQU0sQ0FBQ0ssSUFBUCxFQUFQLEVBQXNCQyxPQUF0QixDQUE4QlAsS0FBOUIsQ0FERjtBQUdBLDBDQUFJLDJEQUFKLEVBQWdFLE1BQU07QUFDcEUsWUFBTVgsU0FBUyxHQUFHQyxJQUFJLENBQUNDLEVBQUwsRUFBbEI7QUFFQVUsTUFBQUEsTUFBTSxDQUFDTyxRQUFQLENBQWdCO0FBQ2RDLFFBQUFBLE9BQU8sRUFBRXBCO0FBREssT0FBaEI7QUFJQVksTUFBQUEsTUFBTSxDQUFDUyxRQUFQLENBQWdCLE9BQWhCOztBQUVBLFVBQUksQ0FBQ2YsVUFBTCxFQUFpQjtBQUNmLDZCQUFPTixTQUFQLEVBQWtCc0IsZ0JBQWxCO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsNkJBQU90QixTQUFQLEVBQWtCdUIsR0FBbEIsQ0FBc0JELGdCQUF0QjtBQUNEO0FBQ0YsS0FkRDtBQWdCQSwwQ0FBSSwyQkFBMEJoQixVQUFXLEVBQXpDLEVBQTRDLE1BQU07QUFDaEQsMkJBQU9NLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZLFlBQVosQ0FBUCxFQUFrQ04sT0FBbEMsQ0FBMENaLFVBQTFDO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHdCQUF1QkUsT0FBUSxFQUFuQyxFQUFzQyxNQUFNO0FBQzFDLDJCQUFPSSxNQUFNLENBQUNZLElBQVAsQ0FBWSxTQUFaLENBQVAsRUFBK0JOLE9BQS9CLENBQXVDVixPQUF2QztBQUNELEtBRkQ7QUFJQSwwQ0FBSSw0QkFBMkJELFdBQVksRUFBM0MsRUFBOEMsTUFBTTtBQUNsRCwyQkFBT0ssTUFBTSxDQUFDWSxJQUFQLENBQVksYUFBWixDQUFQLEVBQW1DTixPQUFuQyxDQUEyQ1gsV0FBM0M7QUFDRCxLQUZEO0FBSUEsMENBQUkscUJBQW9CRyxJQUFLLEVBQTdCLEVBQWdDLE1BQU07QUFDcEMsMkJBQU9FLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZLE1BQVosQ0FBUCxFQUE0Qk4sT0FBNUIsQ0FBb0NSLElBQXBDO0FBQ0QsS0FGRDtBQUlBLDBDQUFJLHFCQUFvQkQsSUFBSyxFQUE3QixFQUFnQyxNQUFNO0FBQ3BDLDJCQUFPRyxNQUFNLENBQUNZLElBQVAsQ0FBWSxNQUFaLENBQVAsRUFBNEJOLE9BQTVCLENBQW9DVCxJQUFwQztBQUNELEtBRkQ7QUFHRCxHQXZDTSxDQUFQO0FBd0NELENBdERNOzs7QUF3RFBJLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZGVmYXVsdFZhbHVlcyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9kZWZhdWx0VmFsdWVzJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB7IGRlc2NyaWJlLCBpdCB9IGZyb20gJ3N0b3J5Ym9vay1hZGRvbi1zcGVjaWZpY2F0aW9ucyc7XG5pbXBvcnQgZXhwZWN0IGZyb20gJ2V4cGVjdCc7XG5cbmNvbnN0IG1vY2tDbGljayA9IGplc3QuZm4oKTtcbmV4cG9ydCBjb25zdCBDb21wb25lbnQgPSAoXG4gIGlzQ2hlY2tlZCxcbiAgaXNEZWZhdWx0Q2hlY2tlZCxcbiAgaXNEaXNhYmxlZCxcbiAgaXNGdWxsV2lkdGgsXG4gIGlzUm91bmQsXG4gIHNpemUsXG4gIHR5cGUsXG4gIHZhbHVlXG4pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBpc0Rpc2FibGVkPXtpc0Rpc2FibGVkfVxuICAgICAgaXNGdWxsV2lkdGg9e2lzRnVsbFdpZHRofVxuICAgICAgaXNSb3VuZD17aXNSb3VuZH1cbiAgICAgIHNpemU9e3NpemV9XG4gICAgICB0eXBlPXt0eXBlfVxuICAgICAgb25DbGljaz17bW9ja0NsaWNrfVxuICAgID5cbiAgICAgIHt2YWx1ZX1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn07XG5cbmxldCBvdXRwdXQ7XG5cbmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgYnV0dG9uID0gQ29tcG9uZW50KFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNDaGVja2VkLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNEZWZhdWx0Q2hlY2tlZCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzRGlzYWJsZWQsXG4gICAgZGVmYXVsdFZhbHVlcy5pc0Z1bGxXaWR0aCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzUm91bmQsXG4gICAgZGVmYXVsdFZhbHVlcy5zaXplLFxuICAgIGRlZmF1bHRWYWx1ZXMudHlwZSxcbiAgICBkZWZhdWx0VmFsdWVzLnZhbHVlXG4gIClcbikgPT4ge1xuICBvdXRwdXQgPSBtb3VudChidXR0b24pO1xuXG4gIHJldHVybiBkZXNjcmliZSgnQnV0dG9uJywgKCkgPT4ge1xuICAgIGl0KGBTaG91bGQgaGF2ZSB0aGUgcmlnaHQgdGV4dDogJHtidXR0b24ucHJvcHMudmFsdWV9YCwgKCkgPT5cbiAgICAgIGV4cGVjdChvdXRwdXQudGV4dCgpKS50b0VxdWFsKHZhbHVlKSk7XG5cbiAgICBpdChgb25DbGljayBzaG91bGQgaGF2ZSBiZWVuIGNhbGxlZCBpZiBCdXR0b24gaXMgbm90IGRpc2FibGVkYCwgKCkgPT4ge1xuICAgICAgY29uc3QgbW9ja0NsaWNrID0gamVzdC5mbigpO1xuXG4gICAgICBvdXRwdXQuc2V0UHJvcHMoe1xuICAgICAgICBvbkNsaWNrOiBtb2NrQ2xpY2tcbiAgICAgIH0pO1xuXG4gICAgICBvdXRwdXQuc2ltdWxhdGUoJ2NsaWNrJyk7XG5cbiAgICAgIGlmICghaXNEaXNhYmxlZCkge1xuICAgICAgICBleHBlY3QobW9ja0NsaWNrKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QobW9ja0NsaWNrKS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGlzYWJsZWQ6ICR7aXNEaXNhYmxlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRGlzYWJsZWQnKSkudG9FcXVhbChpc0Rpc2FibGVkKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBpc1JvdW5kOiAke2lzUm91bmR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc1JvdW5kJykpLnRvRXF1YWwoaXNSb3VuZCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNGdWxsV2lkdGg6ICR7aXNGdWxsV2lkdGh9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0Z1bGxXaWR0aCcpKS50b0VxdWFsKGlzRnVsbFdpZHRoKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSB0eXBlOiAke3R5cGV9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCd0eXBlJykpLnRvRXF1YWwodHlwZSk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgc2l6ZTogJHtzaXplfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnc2l6ZScpKS50b0VxdWFsKHNpemUpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbnRlc3RzKCk7XG4iXX0=