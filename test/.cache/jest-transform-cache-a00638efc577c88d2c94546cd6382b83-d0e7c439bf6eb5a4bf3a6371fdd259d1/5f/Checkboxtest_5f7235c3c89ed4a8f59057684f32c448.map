{"version":3,"sources":["Checkbox.test.jsx"],"names":["defaultValues","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","Component","output","tests","checkbox","describe","it","expect","prop","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;AAEO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA,SAAS,EAAE,KADgB;AAE3BC,EAAAA,gBAAgB,EAAE,KAFS;AAG3BC,EAAAA,UAAU,EAAE,KAHe;AAI3BC,EAAAA,kBAAkB,EAAE,KAJO;AAK3BC,EAAAA,QAAQ,EAAE,MALiB;AAM3BC,EAAAA,QAAQ,EAAE;AANiB,CAAtB;;;AASA,MAAMC,SAAS,GAAGN,SAAS,IAAI;AACpC,SAAO,6BAAC,kBAAD;AAAU,IAAA,SAAS,EAAEA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFM;;;AAIP,IAAIO,MAAM,GAAG,qBAAQD,SAAS,EAAjB,CAAb;;AAEO,MAAME,KAAK,GAAG,CAACC,QAAQ,GAAGH,SAAZ,EAAuBN,SAAS,GAAG,KAAnC,KAA6C;AAChEO,EAAAA,MAAM,GAAG,qBAAQE,QAAR,CAAT;AAEA,SAAOC,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,0BAAyBX,SAAU,EAArC,EAAwC,MAAM;AAC9CY,MAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyCd,SAAzC;AACD,KAFC,CAAF;AAIAW,IAAAA,EAAE,CAAE,iCAAgCV,gBAAiB,EAAnD,EAAsD,MAAM;AAC5DW,MAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,kBAAZ,CAAD,CAAN,CAAwCC,OAAxC,CAAgDb,gBAAhD;AACD,KAFC,CAAF;AAIAU,IAAAA,EAAE,CAAE,2BAA0BT,UAAW,EAAvC,EAA0C,MAAM;AAChDU,MAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,YAAZ,CAAD,CAAN,CAAkCC,OAAlC,CAA0CZ,UAA1C;AACD,KAFC,CAAF;AAIAS,IAAAA,EAAE,CAAE,mCAAkCR,kBAAmB,EAAvD,EAA0D,MAAM;AAChES,MAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,oBAAZ,CAAD,CAAN,CAA0CC,OAA1C,CAAkDX,kBAAlD;AACD,KAFC,CAAF;AAIAQ,IAAAA,EAAE,CAAE,yBAAwBP,QAAS,EAAnC,EAAsC,MAAM;AAC5CQ,MAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCV,QAAxC;AACD,KAFC,CAAF;AAIAO,IAAAA,EAAE,CAAE,yBAAwBN,QAAS,EAAnC,EAAsC,MAAM;AAC5CO,MAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCT,QAAxC;AACD,KAFC,CAAF;AAGD,GAxBc,CAAf;AAyBD,CA5BM;;;AA8BPG,KAAK;AAEL","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport const defaultValues = {\n  isChecked: false,\n  isDefaultChecked: false,\n  isDisabled: false,\n  isPartiallyChecked: false,\n  position: 'left',\n  children: 'Change me, please ðŸ¥º'\n};\n\nexport const Component = isChecked => {\n  return <Checkbox isChecked={isChecked} />;\n};\n\nlet output = shallow(Component());\n\nexport const tests = (checkbox = Component, isChecked = false) => {\n  output = shallow(checkbox);\n\n  return describe('Checkbox', () => {\n    it(`Should have isChecked: ${isChecked}`, () => {\n      expect(output.prop('isChecked')).toEqual(isChecked);\n    });\n\n    it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n      expect(output.prop('isDefaultChecked')).toEqual(isDefaultChecked);\n    });\n\n    it(`Should have isDisabled: ${isDisabled}`, () => {\n      expect(output.prop('isDisabled')).toEqual(isDisabled);\n    });\n\n    it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {\n      expect(output.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);\n    });\n\n    it(`Should have position: ${position}`, () => {\n      expect(output.prop('position')).toEqual(position);\n    });\n\n    it(`Should have children: ${children}`, () => {\n      expect(output.prop('children')).toEqual(children);\n    });\n  });\n};\n\ntests();\n\n/*\nimport { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport const defaultValues = {\n  isChecked: false,\n  isDefaultChecked: false,\n  isDisabled: false,\n  isPartiallyChecked: false,\n  position: 'left',\n  children: 'Change me, please ðŸ¥º'\n};\n\nexport const Component = isChecked => {\n  return <Checkbox isChecked={isChecked} />;\n};\n\nlet output = shallow(Component());\n\nexport const tests = (checkbox = Component, isChecked = false) => {\n  output = shallow(checkbox);\n\n  return describe('Checkbox', () => {\n    it(`Should have isChecked: ${isChecked}`, () => {\n      expect(output.prop('isChecked')).toEqual(isChecked);\n    });\n\n    /!*it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n      expect(output.prop('isDefaultChecked')).toEqual(isDefaultChecked);\n    });\n\n    it(`Should have isDisabled: ${isDisabled}`, () => {\n      expect(output.prop('isDisabled')).toEqual(isDisabled);\n    });\n\n    it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {\n      expect(output.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);\n    });\n\n    it(`Should have position: ${position}`, () => {\n      expect(output.prop('position')).toEqual(position);\n    });\n\n    it(`Should have children: ${children}`, () => {\n      expect(output.prop('children')).toEqual(children);\n    });*!/\n  });\n};\n\ntests();*/\n"]}