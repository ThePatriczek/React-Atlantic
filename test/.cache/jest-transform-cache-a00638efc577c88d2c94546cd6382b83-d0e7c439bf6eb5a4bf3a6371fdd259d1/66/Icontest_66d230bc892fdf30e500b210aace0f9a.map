{"version":3,"sources":["Icon.test.jsx"],"names":["Component","name","isRotating","children","output","tests","checkbox","defaultValues","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","describe","it","props","expect","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AAC7C,SACE,6BAAC,UAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,UAAU,EAAEC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CADF;AAKD,CANM;;;AAQP,IAAIC,MAAJ;;AAEO,MAAMC,KAAK,GAAG,CACnBC,QAAQ,GAAGN,SAAS,CAClBO,6BAAcC,SADI,EAElBD,6BAAcE,gBAFI,EAGlBF,6BAAcG,UAHI,EAIlBH,6BAAcI,kBAJI,EAKlBJ,6BAAcK,QALI,EAMlBL,6BAAcJ,QANI,CADD,KAShB;AACHC,EAAAA,MAAM,GAAG,mBAAME,QAAN,CAAT;AAEA,SAAOO,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,iCAAgCR,QAAQ,CAACS,KAAT,CAAeN,gBAAiB,EAAlE,EAAqE,MAAM;AAC3EO,MAAAA,MAAM,CAACZ,MAAM,CAACW,KAAP,GAAeN,gBAAhB,CAAN,CAAwCQ,OAAxC,CACEX,QAAQ,CAACS,KAAT,CAAeN,gBADjB;AAGD,KAJC,CAAF;AAKAK,IAAAA,EAAE,CAAE,0BAAyBR,QAAQ,CAACS,KAAT,CAAeP,SAAU,EAApD,EAAuD,MAAM;AAC7DQ,MAAAA,MAAM,CAACZ,MAAM,CAACW,KAAP,GAAeP,SAAhB,CAAN,CAAiCS,OAAjC,CAAyCX,QAAQ,CAACS,KAAT,CAAeP,SAAxD;AACD,KAFC,CAAF;AAGAM,IAAAA,EAAE,CAAE,2BAA0BR,QAAQ,CAACS,KAAT,CAAeL,UAAW,EAAtD,EAAyD,MAAM;AAC/DM,MAAAA,MAAM,CAACZ,MAAM,CAACW,KAAP,GAAeL,UAAhB,CAAN,CAAkCO,OAAlC,CAA0CX,QAAQ,CAACS,KAAT,CAAeL,UAAzD;AACD,KAFC,CAAF;AAGAI,IAAAA,EAAE,CAAE,mCAAkCR,QAAQ,CAACS,KAAT,CAAeJ,kBAAmB,EAAtE,EAAyE,MAAM;AAC/EK,MAAAA,MAAM,CAACZ,MAAM,CAACW,KAAP,GAAeJ,kBAAhB,CAAN,CAA0CM,OAA1C,CACEX,QAAQ,CAACS,KAAT,CAAeJ,kBADjB;AAGD,KAJC,CAAF;AAKAG,IAAAA,EAAE,CAAE,yBAAwBR,QAAQ,CAACS,KAAT,CAAeH,QAAS,EAAlD,EAAqD,MAAM;AAC3DI,MAAAA,MAAM,CAACZ,MAAM,CAACW,KAAP,GAAeH,QAAhB,CAAN,CAAgCK,OAAhC,CAAwCX,QAAQ,CAACS,KAAT,CAAeH,QAAvD;AACD,KAFC,CAAF;AAGAE,IAAAA,EAAE,CAAE,yBAAwBR,QAAQ,CAACS,KAAT,CAAeZ,QAAS,EAAlD,EAAqD,MAAM;AAC3Da,MAAAA,MAAM,CAACZ,MAAM,CAACW,KAAP,GAAeZ,QAAhB,CAAN,CAAgCc,OAAhC,CAAwCX,QAAQ,CAACS,KAAT,CAAeZ,QAAvD;AACD,KAFC,CAAF;AAGD,GAvBc,CAAf;AAwBD,CApCM;;;AAsCPE,KAAK","sourcesContent":["import { mount } from 'enzyme';\nimport React from 'react';\nimport { Icon } from './Icon';\nimport { defaultValues } from '../../constants/defaultValues';\n\nexport const Component = (name, isRotating) => {\n  return (\n    <Icon name={name} isRotating={isRotating}>\n      {children}\n    </Icon>\n  );\n};\n\nlet output;\n\nexport const tests = (\n  checkbox = Component(\n    defaultValues.isChecked,\n    defaultValues.isDefaultChecked,\n    defaultValues.isDisabled,\n    defaultValues.isPartiallyChecked,\n    defaultValues.position,\n    defaultValues.children\n  )\n) => {\n  output = mount(checkbox);\n\n  return describe('Checkbox', () => {\n    it(`Should have isDefaultChecked: ${checkbox.props.isDefaultChecked}`, () => {\n      expect(output.props().isDefaultChecked).toEqual(\n        checkbox.props.isDefaultChecked\n      );\n    });\n    it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {\n      expect(output.props().isChecked).toEqual(checkbox.props.isChecked);\n    });\n    it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {\n      expect(output.props().isDisabled).toEqual(checkbox.props.isDisabled);\n    });\n    it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {\n      expect(output.props().isPartiallyChecked).toEqual(\n        checkbox.props.isPartiallyChecked\n      );\n    });\n    it(`Should have position: ${checkbox.props.position}`, () => {\n      expect(output.props().position).toEqual(checkbox.props.position);\n    });\n    it(`Should have children: ${checkbox.props.children}`, () => {\n      expect(output.props().children).toEqual(checkbox.props.children);\n    });\n  });\n};\n\ntests();\n"]}