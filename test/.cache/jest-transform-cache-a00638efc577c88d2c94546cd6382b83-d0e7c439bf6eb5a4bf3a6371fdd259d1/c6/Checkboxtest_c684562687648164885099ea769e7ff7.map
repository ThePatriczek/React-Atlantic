{"version":3,"sources":["Checkbox.test.jsx"],"names":["Component","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","tests","checkbox","defaultValues","undefined","console","log","describe","props","it","expect","toEqual","prop"],"mappings":"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","sourcesContent":["import { mount, shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport { defaultValues } from './defaultValues';\n\nexport const Component = (\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  return (\n    <Checkbox\n      isChecked={isChecked}\n      isPartiallyChecked={isPartiallyChecked}\n      isDefaultChecked={isDefaultChecked}\n      isDisabled={isDisabled}\n      position={position}\n    >\n      {children}\n    </Checkbox>\n  );\n};\n\nlet output;\n\nexport const tests = (\n  checkbox,\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  output = mount(\n    Component(\n      defaultValues.isChecked,\n      defaultValues.isDefaultChecked,\n      defaultValues.isDisabled,\n      defaultValues.isPartiallyChecked,\n      defaultValues.position,\n      defaultValues.children\n    )\n  );\n  if (isDefaultChecked !== undefined) {\n    output = mount(\n      /* Component(\n        isChecked,\n        isDefaultChecked,\n        isDisabled,\n        isPartiallyChecked,\n        position,\n        children\n      )*/ checkbox\n    );\n  }\n  console.log('DefaultChecked: ', isDefaultChecked);\n  return describe('Checkbox', () => {\n    if (checkbox.props.isDefaultChecked !== undefined) {\n      it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n        expect(output.props().isDefaultChecked).toEqual(isDefaultChecked);\n      });\n    } else {\n      it(`Should have isDefaultChecked: ${defaultValues.isDefaultChecked}`, () => {\n        console.log(output.props());\n        expect(output.props().isDefaultChecked).toEqual(\n          defaultValues.isDefaultChecked\n        );\n      });\n    }\n    if (checkbox.props.isChecked) {\n      it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {\n        expect(output.prop('isChecked')).toEqual(checkbox.props.isChecked);\n      });\n    } else\n      it(`Should have isChecked: ${defaultValues.isChecked}`, () => {\n        expect(output.prop('isChecked')).toEqual(defaultValues.isChecked);\n      });\n\n    if (checkbox.props.isDisabled) {\n      it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {\n        expect(output.prop('isDisabled')).toEqual(checkbox.props.isDisabled);\n      });\n    } else\n      it(`Should have isDisabled: ${defaultValues.isDisabled}`, () => {\n        expect(output.prop('isDisabled')).toEqual(defaultValues.isDisabled);\n      });\n\n    if (checkbox.props.isPartiallyChecked) {\n      it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {\n        expect(output.prop('isPartiallyChecked')).toEqual(\n          checkbox.props.isPartiallyChecked\n        );\n      });\n    } else\n      it(`Should have isPartiallyChecked: ${defaultValues.isPartiallyChecked}`, () => {\n        expect(output.prop('isPartiallyChecked')).toEqual(\n          defaultValues.isPartiallyChecked\n        );\n      });\n\n    if (checkbox.props.position) {\n      it(`Should have position: ${checkbox.props.position}`, () => {\n        expect(output.prop('position')).toEqual(checkbox.props.position);\n      });\n    } else\n      it(`Should have position: ${defaultValues.position}`, () => {\n        expect(output.prop('position')).toEqual(defaultValues.position);\n      });\n\n    if (checkbox.props.children) {\n      it(`Should have children: ${checkbox.props.children}`, () => {\n        expect(output.prop('children')).toEqual(checkbox.props.children);\n      });\n    } else\n      it(`Should have children: ${defaultValues.children}`, () => {\n        expect(output.prop('children')).toEqual(defaultValues.children);\n      });\n  });\n};\n\ntests();\n"]}