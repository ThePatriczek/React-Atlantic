6a5ca17b4987d7ddd732c3e266ed3381
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Checkbox = require("./Checkbox");

var _defaultValues = require("./defaultValues");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Checkbox/Checkbox.test.jsx";

const Component = (isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children) => {
  return _react.default.createElement(_Checkbox.Checkbox, {
    isChecked: isChecked,
    isPartiallyChecked: isPartiallyChecked,
    isDefaultChecked: isDefaultChecked,
    isDisabled: isDisabled,
    position: position,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15
    },
    __self: void 0
  }, children);
};

exports.Component = Component;
let output = (0, _enzyme.shallow)(Component());

const tests = (checkbox = Component(), props = {
  isChecked: _defaultValues.defaultValues.isChecked,
  isDefaultChecked: _defaultValues.defaultValues.isDefaultChecked,
  isDisabled: _defaultValues.defaultValues.isDisabled,
  isPartiallyChecked: _defaultValues.defaultValues.isPartiallyChecked,
  position: _defaultValues.defaultValues.position,
  children: _defaultValues.defaultValues.children
}) => {
  output = (0, _enzyme.shallow)(checkbox);
  return describe('Checkbox', () => {
    it(`Should have isChecked: ${props.isChecked}`, () => {
      expect(output.prop('isChecked')).toEqual(props.isChecked);
    });
    it(`Should have isDefaultChecked: ${props.isDefaultChecked}`, () => {
      expect(output.prop('isDefaultChecked')).toEqual(props.isDefaultChecked);
    });
    it(`Should have isDisabled: ${props.isDisabled}`, () => {
      expect(output.prop('isDisabled')).toEqual(props.isDisabled);
    });
    it(`Should have isPartiallyChecked: ${props.isPartiallyChecked}`, () => {
      expect(output.prop('isPartiallyChecked')).toEqual(props.isPartiallyChecked);
      console.log(props.position);
    });
    it(`Should have position: ${props.position}`, () => {
      expect(output.prop('position')).toEqual(props.position);
    });
    it(`Should have children: ${props.children}`, () => {
      expect(output.prop('children')).toEqual(props.children);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrYm94LnRlc3QuanN4Il0sIm5hbWVzIjpbIkNvbXBvbmVudCIsImlzQ2hlY2tlZCIsImlzRGVmYXVsdENoZWNrZWQiLCJpc0Rpc2FibGVkIiwiaXNQYXJ0aWFsbHlDaGVja2VkIiwicG9zaXRpb24iLCJjaGlsZHJlbiIsIm91dHB1dCIsInRlc3RzIiwiY2hlY2tib3giLCJwcm9wcyIsImRlZmF1bHRWYWx1ZXMiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwicHJvcCIsInRvRXF1YWwiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLFNBQVMsR0FBRyxDQUN2QkMsU0FEdUIsRUFFdkJDLGdCQUZ1QixFQUd2QkMsVUFIdUIsRUFJdkJDLGtCQUp1QixFQUt2QkMsUUFMdUIsRUFNdkJDLFFBTnVCLEtBT3BCO0FBQ0gsU0FDRSw2QkFBQyxrQkFBRDtBQUNFLElBQUEsU0FBUyxFQUFFTCxTQURiO0FBRUUsSUFBQSxrQkFBa0IsRUFBRUcsa0JBRnRCO0FBR0UsSUFBQSxnQkFBZ0IsRUFBRUYsZ0JBSHBCO0FBSUUsSUFBQSxVQUFVLEVBQUVDLFVBSmQ7QUFLRSxJQUFBLFFBQVEsRUFBRUUsUUFMWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQU9HQyxRQVBILENBREY7QUFXRCxDQW5CTTs7O0FBcUJQLElBQUlDLE1BQU0sR0FBRyxxQkFBUVAsU0FBUyxFQUFqQixDQUFiOztBQUVPLE1BQU1RLEtBQUssR0FBRyxDQUNuQkMsUUFBUSxHQUFHVCxTQUFTLEVBREQsRUFFbkJVLEtBQUssR0FBRztBQUNOVCxFQUFBQSxTQUFTLEVBQUVVLDZCQUFjVixTQURuQjtBQUVOQyxFQUFBQSxnQkFBZ0IsRUFBRVMsNkJBQWNULGdCQUYxQjtBQUdOQyxFQUFBQSxVQUFVLEVBQUVRLDZCQUFjUixVQUhwQjtBQUlOQyxFQUFBQSxrQkFBa0IsRUFBRU8sNkJBQWNQLGtCQUo1QjtBQUtOQyxFQUFBQSxRQUFRLEVBQUVNLDZCQUFjTixRQUxsQjtBQU1OQyxFQUFBQSxRQUFRLEVBQUVLLDZCQUFjTDtBQU5sQixDQUZXLEtBVWhCO0FBQ0hDLEVBQUFBLE1BQU0sR0FBRyxxQkFBUUUsUUFBUixDQUFUO0FBRUEsU0FBT0csUUFBUSxDQUFDLFVBQUQsRUFBYSxNQUFNO0FBQ2hDQyxJQUFBQSxFQUFFLENBQUUsMEJBQXlCSCxLQUFLLENBQUNULFNBQVUsRUFBM0MsRUFBOEMsTUFBTTtBQUNwRGEsTUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNRLElBQVAsQ0FBWSxXQUFaLENBQUQsQ0FBTixDQUFpQ0MsT0FBakMsQ0FBeUNOLEtBQUssQ0FBQ1QsU0FBL0M7QUFDRCxLQUZDLENBQUY7QUFJQVksSUFBQUEsRUFBRSxDQUFFLGlDQUFnQ0gsS0FBSyxDQUFDUixnQkFBaUIsRUFBekQsRUFBNEQsTUFBTTtBQUNsRVksTUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNRLElBQVAsQ0FBWSxrQkFBWixDQUFELENBQU4sQ0FBd0NDLE9BQXhDLENBQWdETixLQUFLLENBQUNSLGdCQUF0RDtBQUNELEtBRkMsQ0FBRjtBQUlBVyxJQUFBQSxFQUFFLENBQUUsMkJBQTBCSCxLQUFLLENBQUNQLFVBQVcsRUFBN0MsRUFBZ0QsTUFBTTtBQUN0RFcsTUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNRLElBQVAsQ0FBWSxZQUFaLENBQUQsQ0FBTixDQUFrQ0MsT0FBbEMsQ0FBMENOLEtBQUssQ0FBQ1AsVUFBaEQ7QUFDRCxLQUZDLENBQUY7QUFJQVUsSUFBQUEsRUFBRSxDQUFFLG1DQUFrQ0gsS0FBSyxDQUFDTixrQkFBbUIsRUFBN0QsRUFBZ0UsTUFBTTtBQUN0RVUsTUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNRLElBQVAsQ0FBWSxvQkFBWixDQUFELENBQU4sQ0FBMENDLE9BQTFDLENBQ0VOLEtBQUssQ0FBQ04sa0JBRFI7QUFHQWEsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlSLEtBQUssQ0FBQ0wsUUFBbEI7QUFDRCxLQUxDLENBQUY7QUFPQVEsSUFBQUEsRUFBRSxDQUFFLHlCQUF3QkgsS0FBSyxDQUFDTCxRQUFTLEVBQXpDLEVBQTRDLE1BQU07QUFDbERTLE1BQUFBLE1BQU0sQ0FBQ1AsTUFBTSxDQUFDUSxJQUFQLENBQVksVUFBWixDQUFELENBQU4sQ0FBZ0NDLE9BQWhDLENBQXdDTixLQUFLLENBQUNMLFFBQTlDO0FBQ0QsS0FGQyxDQUFGO0FBSUFRLElBQUFBLEVBQUUsQ0FBRSx5QkFBd0JILEtBQUssQ0FBQ0osUUFBUyxFQUF6QyxFQUE0QyxNQUFNO0FBQ2xEUSxNQUFBQSxNQUFNLENBQUNQLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLFVBQVosQ0FBRCxDQUFOLENBQWdDQyxPQUFoQyxDQUF3Q04sS0FBSyxDQUFDSixRQUE5QztBQUNELEtBRkMsQ0FBRjtBQUdELEdBM0JjLENBQWY7QUE0QkQsQ0F6Q007OztBQTJDUEUsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnLi9DaGVja2JveCc7XG5pbXBvcnQgeyBkZWZhdWx0VmFsdWVzIH0gZnJvbSAnLi9kZWZhdWx0VmFsdWVzJztcblxuZXhwb3J0IGNvbnN0IENvbXBvbmVudCA9IChcbiAgaXNDaGVja2VkLFxuICBpc0RlZmF1bHRDaGVja2VkLFxuICBpc0Rpc2FibGVkLFxuICBpc1BhcnRpYWxseUNoZWNrZWQsXG4gIHBvc2l0aW9uLFxuICBjaGlsZHJlblxuKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENoZWNrYm94XG4gICAgICBpc0NoZWNrZWQ9e2lzQ2hlY2tlZH1cbiAgICAgIGlzUGFydGlhbGx5Q2hlY2tlZD17aXNQYXJ0aWFsbHlDaGVja2VkfVxuICAgICAgaXNEZWZhdWx0Q2hlY2tlZD17aXNEZWZhdWx0Q2hlY2tlZH1cbiAgICAgIGlzRGlzYWJsZWQ9e2lzRGlzYWJsZWR9XG4gICAgICBwb3NpdGlvbj17cG9zaXRpb259XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ2hlY2tib3g+XG4gICk7XG59O1xuXG5sZXQgb3V0cHV0ID0gc2hhbGxvdyhDb21wb25lbnQoKSk7XG5cbmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgY2hlY2tib3ggPSBDb21wb25lbnQoKSxcbiAgcHJvcHMgPSB7XG4gICAgaXNDaGVja2VkOiBkZWZhdWx0VmFsdWVzLmlzQ2hlY2tlZCxcbiAgICBpc0RlZmF1bHRDaGVja2VkOiBkZWZhdWx0VmFsdWVzLmlzRGVmYXVsdENoZWNrZWQsXG4gICAgaXNEaXNhYmxlZDogZGVmYXVsdFZhbHVlcy5pc0Rpc2FibGVkLFxuICAgIGlzUGFydGlhbGx5Q2hlY2tlZDogZGVmYXVsdFZhbHVlcy5pc1BhcnRpYWxseUNoZWNrZWQsXG4gICAgcG9zaXRpb246IGRlZmF1bHRWYWx1ZXMucG9zaXRpb24sXG4gICAgY2hpbGRyZW46IGRlZmF1bHRWYWx1ZXMuY2hpbGRyZW5cbiAgfVxuKSA9PiB7XG4gIG91dHB1dCA9IHNoYWxsb3coY2hlY2tib3gpO1xuXG4gIHJldHVybiBkZXNjcmliZSgnQ2hlY2tib3gnLCAoKSA9PiB7XG4gICAgaXQoYFNob3VsZCBoYXZlIGlzQ2hlY2tlZDogJHtwcm9wcy5pc0NoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0NoZWNrZWQnKSkudG9FcXVhbChwcm9wcy5pc0NoZWNrZWQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGVmYXVsdENoZWNrZWQ6ICR7cHJvcHMuaXNEZWZhdWx0Q2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRGVmYXVsdENoZWNrZWQnKSkudG9FcXVhbChwcm9wcy5pc0RlZmF1bHRDaGVja2VkKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBpc0Rpc2FibGVkOiAke3Byb3BzLmlzRGlzYWJsZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0Rpc2FibGVkJykpLnRvRXF1YWwocHJvcHMuaXNEaXNhYmxlZCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNQYXJ0aWFsbHlDaGVja2VkOiAke3Byb3BzLmlzUGFydGlhbGx5Q2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzUGFydGlhbGx5Q2hlY2tlZCcpKS50b0VxdWFsKFxuICAgICAgICBwcm9wcy5pc1BhcnRpYWxseUNoZWNrZWRcbiAgICAgICk7XG4gICAgICBjb25zb2xlLmxvZyhwcm9wcy5wb3NpdGlvbik7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgcG9zaXRpb246ICR7cHJvcHMucG9zaXRpb259YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdwb3NpdGlvbicpKS50b0VxdWFsKHByb3BzLnBvc2l0aW9uKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBjaGlsZHJlbjogJHtwcm9wcy5jaGlsZHJlbn1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2NoaWxkcmVuJykpLnRvRXF1YWwocHJvcHMuY2hpbGRyZW4pO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbnRlc3RzKCk7XG4iXX0=