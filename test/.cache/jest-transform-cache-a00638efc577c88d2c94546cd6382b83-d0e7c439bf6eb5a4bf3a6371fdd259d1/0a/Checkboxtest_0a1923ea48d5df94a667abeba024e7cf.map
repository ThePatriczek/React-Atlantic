{"version":3,"sources":["Checkbox.test.jsx"],"names":["tests","describe","checkbox","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","it","expect","prop","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAQA;;;AAEO,MAAMA,KAAK,GAAGC,QAAQ,CAAC,UAAD,EAAa,MAAM;AAC9C,QAAMC,QAAQ,GACZ,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAEC,oBADb;AAEE,IAAA,gBAAgB,EAAEC,2BAFpB;AAGE,IAAA,UAAU,EAAEC,qBAHd;AAIE,IAAA,kBAAkB,EAAEC,6BAJtB;AAKE,IAAA,QAAQ,EAAEC,mBALZ;AAME,IAAA,QAAQ,EAAE,0BAAQ,UAAR,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,mBARH,CADF;;AAYA,QAAMC,MAAM,GAAG,qBAAQP,QAAR,CAAf;AAEAQ,EAAAA,EAAE,CAAE,0BAAyBP,oBAAU,EAArC,EAAwC,MAAM;AAC9CQ,IAAAA,MAAM,CAACF,MAAM,CAACG,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyCV,oBAAzC;AACD,GAFC,CAAF;AAIAO,EAAAA,EAAE,CAAE,iCAAgCN,2BAAiB,EAAnD,EAAsD,MAAM;AAC5DO,IAAAA,MAAM,CAACF,MAAM,CAACG,IAAP,CAAY,kBAAZ,CAAD,CAAN,CAAwCC,OAAxC,CAAgDT,2BAAhD;AACD,GAFC,CAAF;AAIAM,EAAAA,EAAE,CAAE,2BAA0BL,qBAAW,EAAvC,EAA0C,MAAM;AAChDM,IAAAA,MAAM,CAACF,MAAM,CAACG,IAAP,CAAY,YAAZ,CAAD,CAAN,CAAkCC,OAAlC,CAA0CR,qBAA1C;AACD,GAFC,CAAF;AAIAK,EAAAA,EAAE,CAAE,mCAAkCJ,6BAAmB,EAAvD,EAA0D,MAAM;AAChEK,IAAAA,MAAM,CAACF,MAAM,CAACG,IAAP,CAAY,oBAAZ,CAAD,CAAN,CAA0CC,OAA1C,CAAkDP,6BAAlD;AACD,GAFC,CAAF;AAIAI,EAAAA,EAAE,CAAE,yBAAwBH,mBAAS,EAAnC,EAAsC,MAAM;AAC5CI,IAAAA,MAAM,CAACF,MAAM,CAACG,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCN,mBAAxC;AACD,GAFC,CAAF;AAIAG,EAAAA,EAAE,CAAE,yBAAwBF,mBAAS,EAAnC,EAAsC,MAAM;AAC5CG,IAAAA,MAAM,CAACF,MAAM,CAACG,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCL,mBAAxC;AACD,GAFC,CAAF;AAGD,CAtC4B,CAAtB","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport {\n  isDefaultChecked,\n  isDisabled,\n  isChecked,\n  isPartiallyChecked,\n  position,\n  children\n} from '../../constants';\nimport { action } from '@storybook/addon-actions';\n\nexport const tests = describe('Checkbox', () => {\n  const checkbox = (\n    <Checkbox\n      isChecked={isChecked}\n      isDefaultChecked={isDefaultChecked}\n      isDisabled={isDisabled}\n      isPartiallyChecked={isPartiallyChecked}\n      position={position}\n      onChange={action(`onChange`)}\n    >\n      {children}\n    </Checkbox>\n  );\n  const output = shallow(checkbox);\n\n  it(`Should have isChecked: ${isChecked}`, () => {\n    expect(output.prop('isChecked')).toEqual(isChecked);\n  });\n\n  it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n    expect(output.prop('isDefaultChecked')).toEqual(isDefaultChecked);\n  });\n\n  it(`Should have isDisabled: ${isDisabled}`, () => {\n    expect(output.prop('isDisabled')).toEqual(isDisabled);\n  });\n\n  it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {\n    expect(output.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);\n  });\n\n  it(`Should have position: ${position}`, () => {\n    expect(output.prop('position')).toEqual(position);\n  });\n\n  it(`Should have children: ${children}`, () => {\n    expect(output.prop('children')).toEqual(children);\n  });\n});\n"]}