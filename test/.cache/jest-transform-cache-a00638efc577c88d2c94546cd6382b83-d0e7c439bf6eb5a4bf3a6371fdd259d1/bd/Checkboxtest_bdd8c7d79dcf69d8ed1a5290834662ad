20f60f4df62942be032c1cdd269db931
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Checkbox = require("./Checkbox");

var _defaultValues = require("./defaultValues");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Checkbox/Checkbox.test.jsx";

const Component = (isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children) => {
  return _react.default.createElement(_Checkbox.Checkbox, {
    isChecked: isChecked,
    isPartiallyChecked: isPartiallyChecked,
    isDefaultChecked: isDefaultChecked,
    isDisabled: isDisabled,
    position: position,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15
    },
    __self: void 0
  }, children);
};

exports.Component = Component;
let output = (0, _enzyme.shallow)(Component(_defaultValues.defaultValues.isChecked, _defaultValues.defaultValues.isDefaultChecked, _defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isPartiallyChecked, _defaultValues.defaultValues.position, _defaultValues.defaultValues.children));

const tests = (isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children) => {
  if (isDefaultChecked) {
    output = (0, _enzyme.shallow)(Component(isChecked, isDefaultChecked, isDisabled, isPartiallyChecked, position, children));
  }

  console.log(Component(_defaultValues.defaultValues.isChecked, _defaultValues.defaultValues.isDefaultChecked, _defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isPartiallyChecked, _defaultValues.defaultValues.position, _defaultValues.defaultValues.children));
  return describe('Checkbox', () => {
    if (isDefaultChecked !== undefined) {
      it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {
        expect(output.props().isDefaultChecked).toEqual(isDefaultChecked);
      });
    } else {
      it(`Should have isDefaultChecked: ${_defaultValues.defaultValues.isDefaultChecked}`, () => {
        expect(output.prop('isDefaultChecked')).toEqual(_defaultValues.defaultValues.isDefaultChecked);
      });
    }
    /* if (checkbox.props.isChecked) {
      it(`Should have isChecked: ${checkbox.props.isChecked}`, () => {
        expect(output.prop('isChecked')).toEqual(checkbox.props.isChecked);
      });
    } else
      it(`Should have isChecked: ${defaultValues.isChecked}`, () => {
        expect(output.prop('isChecked')).toEqual(defaultValues.isChecked);
      });
     if (checkbox.props.isDisabled) {
      it(`Should have isDisabled: ${checkbox.props.isDisabled}`, () => {
        expect(output.prop('isDisabled')).toEqual(checkbox.props.isDisabled);
      });
    } else
      it(`Should have isDisabled: ${defaultValues.isDisabled}`, () => {
        expect(output.prop('isDisabled')).toEqual(defaultValues.isDisabled);
      });
     if (checkbox.props.isPartiallyChecked) {
      it(`Should have isPartiallyChecked: ${checkbox.props.isPartiallyChecked}`, () => {
        expect(output.prop('isPartiallyChecked')).toEqual(
          checkbox.props.isPartiallyChecked
        );
      });
    } else
      it(`Should have isPartiallyChecked: ${defaultValues.isPartiallyChecked}`, () => {
        expect(output.prop('isPartiallyChecked')).toEqual(
          defaultValues.isPartiallyChecked
        );
      });
     if (checkbox.props.position) {
      it(`Should have position: ${checkbox.props.position}`, () => {
        expect(output.prop('position')).toEqual(checkbox.props.position);
      });
    } else
      it(`Should have position: ${defaultValues.position}`, () => {
        expect(output.prop('position')).toEqual(defaultValues.position);
      });
     if (checkbox.props.children) {
      it(`Should have children: ${checkbox.props.children}`, () => {
        expect(output.prop('children')).toEqual(checkbox.props.children);
      });
    } else
      it(`Should have children: ${defaultValues.children}`, () => {
        expect(output.prop('children')).toEqual(defaultValues.children);
      });*/

  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrYm94LnRlc3QuanN4Il0sIm5hbWVzIjpbIkNvbXBvbmVudCIsImlzQ2hlY2tlZCIsImlzRGVmYXVsdENoZWNrZWQiLCJpc0Rpc2FibGVkIiwiaXNQYXJ0aWFsbHlDaGVja2VkIiwicG9zaXRpb24iLCJjaGlsZHJlbiIsIm91dHB1dCIsImRlZmF1bHRWYWx1ZXMiLCJ0ZXN0cyIsImNvbnNvbGUiLCJsb2ciLCJkZXNjcmliZSIsInVuZGVmaW5lZCIsIml0IiwiZXhwZWN0IiwicHJvcHMiLCJ0b0VxdWFsIiwicHJvcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFTyxNQUFNQSxTQUFTLEdBQUcsQ0FDdkJDLFNBRHVCLEVBRXZCQyxnQkFGdUIsRUFHdkJDLFVBSHVCLEVBSXZCQyxrQkFKdUIsRUFLdkJDLFFBTHVCLEVBTXZCQyxRQU51QixLQU9wQjtBQUNILFNBQ0UsNkJBQUMsa0JBQUQ7QUFDRSxJQUFBLFNBQVMsRUFBRUwsU0FEYjtBQUVFLElBQUEsa0JBQWtCLEVBQUVHLGtCQUZ0QjtBQUdFLElBQUEsZ0JBQWdCLEVBQUVGLGdCQUhwQjtBQUlFLElBQUEsVUFBVSxFQUFFQyxVQUpkO0FBS0UsSUFBQSxRQUFRLEVBQUVFLFFBTFo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FPR0MsUUFQSCxDQURGO0FBV0QsQ0FuQk07OztBQXFCUCxJQUFJQyxNQUFNLEdBQUcscUJBQ1hQLFNBQVMsQ0FDUFEsNkJBQWNQLFNBRFAsRUFFUE8sNkJBQWNOLGdCQUZQLEVBR1BNLDZCQUFjTCxVQUhQLEVBSVBLLDZCQUFjSixrQkFKUCxFQUtQSSw2QkFBY0gsUUFMUCxFQU1QRyw2QkFBY0YsUUFOUCxDQURFLENBQWI7O0FBV08sTUFBTUcsS0FBSyxHQUFHLENBQ25CUixTQURtQixFQUVuQkMsZ0JBRm1CLEVBR25CQyxVQUhtQixFQUluQkMsa0JBSm1CLEVBS25CQyxRQUxtQixFQU1uQkMsUUFObUIsS0FPaEI7QUFDSCxNQUFJSixnQkFBSixFQUFzQjtBQUNwQkssSUFBQUEsTUFBTSxHQUFHLHFCQUNQUCxTQUFTLENBQ1BDLFNBRE8sRUFFUEMsZ0JBRk8sRUFHUEMsVUFITyxFQUlQQyxrQkFKTyxFQUtQQyxRQUxPLEVBTVBDLFFBTk8sQ0FERixDQUFUO0FBVUQ7O0FBQ0RJLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUNFWCxTQUFTLENBQ1BRLDZCQUFjUCxTQURQLEVBRVBPLDZCQUFjTixnQkFGUCxFQUdQTSw2QkFBY0wsVUFIUCxFQUlQSyw2QkFBY0osa0JBSlAsRUFLUEksNkJBQWNILFFBTFAsRUFNUEcsNkJBQWNGLFFBTlAsQ0FEWDtBQVVBLFNBQU9NLFFBQVEsQ0FBQyxVQUFELEVBQWEsTUFBTTtBQUNoQyxRQUFJVixnQkFBZ0IsS0FBS1csU0FBekIsRUFBb0M7QUFDbENDLE1BQUFBLEVBQUUsQ0FBRSxpQ0FBZ0NaLGdCQUFpQixFQUFuRCxFQUFzRCxNQUFNO0FBQzVEYSxRQUFBQSxNQUFNLENBQUNSLE1BQU0sQ0FBQ1MsS0FBUCxHQUFlZCxnQkFBaEIsQ0FBTixDQUF3Q2UsT0FBeEMsQ0FBZ0RmLGdCQUFoRDtBQUNELE9BRkMsQ0FBRjtBQUdELEtBSkQsTUFJTztBQUNMWSxNQUFBQSxFQUFFLENBQUUsaUNBQWdDTiw2QkFBY04sZ0JBQWlCLEVBQWpFLEVBQW9FLE1BQU07QUFDMUVhLFFBQUFBLE1BQU0sQ0FBQ1IsTUFBTSxDQUFDVyxJQUFQLENBQVksa0JBQVosQ0FBRCxDQUFOLENBQXdDRCxPQUF4QyxDQUNFVCw2QkFBY04sZ0JBRGhCO0FBR0QsT0FKQyxDQUFGO0FBS0Q7QUFDRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0RELEdBNURjLENBQWY7QUE2REQsQ0EzRk07OztBQTZGUE8sS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnLi9DaGVja2JveCc7XG5pbXBvcnQgeyBkZWZhdWx0VmFsdWVzIH0gZnJvbSAnLi9kZWZhdWx0VmFsdWVzJztcblxuZXhwb3J0IGNvbnN0IENvbXBvbmVudCA9IChcbiAgaXNDaGVja2VkLFxuICBpc0RlZmF1bHRDaGVja2VkLFxuICBpc0Rpc2FibGVkLFxuICBpc1BhcnRpYWxseUNoZWNrZWQsXG4gIHBvc2l0aW9uLFxuICBjaGlsZHJlblxuKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENoZWNrYm94XG4gICAgICBpc0NoZWNrZWQ9e2lzQ2hlY2tlZH1cbiAgICAgIGlzUGFydGlhbGx5Q2hlY2tlZD17aXNQYXJ0aWFsbHlDaGVja2VkfVxuICAgICAgaXNEZWZhdWx0Q2hlY2tlZD17aXNEZWZhdWx0Q2hlY2tlZH1cbiAgICAgIGlzRGlzYWJsZWQ9e2lzRGlzYWJsZWR9XG4gICAgICBwb3NpdGlvbj17cG9zaXRpb259XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ2hlY2tib3g+XG4gICk7XG59O1xuXG5sZXQgb3V0cHV0ID0gc2hhbGxvdyhcbiAgQ29tcG9uZW50KFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNDaGVja2VkLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNEZWZhdWx0Q2hlY2tlZCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzRGlzYWJsZWQsXG4gICAgZGVmYXVsdFZhbHVlcy5pc1BhcnRpYWxseUNoZWNrZWQsXG4gICAgZGVmYXVsdFZhbHVlcy5wb3NpdGlvbixcbiAgICBkZWZhdWx0VmFsdWVzLmNoaWxkcmVuXG4gIClcbik7XG5cbmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgaXNDaGVja2VkLFxuICBpc0RlZmF1bHRDaGVja2VkLFxuICBpc0Rpc2FibGVkLFxuICBpc1BhcnRpYWxseUNoZWNrZWQsXG4gIHBvc2l0aW9uLFxuICBjaGlsZHJlblxuKSA9PiB7XG4gIGlmIChpc0RlZmF1bHRDaGVja2VkKSB7XG4gICAgb3V0cHV0ID0gc2hhbGxvdyhcbiAgICAgIENvbXBvbmVudChcbiAgICAgICAgaXNDaGVja2VkLFxuICAgICAgICBpc0RlZmF1bHRDaGVja2VkLFxuICAgICAgICBpc0Rpc2FibGVkLFxuICAgICAgICBpc1BhcnRpYWxseUNoZWNrZWQsXG4gICAgICAgIHBvc2l0aW9uLFxuICAgICAgICBjaGlsZHJlblxuICAgICAgKVxuICAgICk7XG4gIH1cbiAgY29uc29sZS5sb2coXG4gICAgQ29tcG9uZW50KFxuICAgICAgZGVmYXVsdFZhbHVlcy5pc0NoZWNrZWQsXG4gICAgICBkZWZhdWx0VmFsdWVzLmlzRGVmYXVsdENoZWNrZWQsXG4gICAgICBkZWZhdWx0VmFsdWVzLmlzRGlzYWJsZWQsXG4gICAgICBkZWZhdWx0VmFsdWVzLmlzUGFydGlhbGx5Q2hlY2tlZCxcbiAgICAgIGRlZmF1bHRWYWx1ZXMucG9zaXRpb24sXG4gICAgICBkZWZhdWx0VmFsdWVzLmNoaWxkcmVuXG4gICAgKVxuICApO1xuICByZXR1cm4gZGVzY3JpYmUoJ0NoZWNrYm94JywgKCkgPT4ge1xuICAgIGlmIChpc0RlZmF1bHRDaGVja2VkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGl0KGBTaG91bGQgaGF2ZSBpc0RlZmF1bHRDaGVja2VkOiAke2lzRGVmYXVsdENoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3BzKCkuaXNEZWZhdWx0Q2hlY2tlZCkudG9FcXVhbChpc0RlZmF1bHRDaGVja2VkKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBpdChgU2hvdWxkIGhhdmUgaXNEZWZhdWx0Q2hlY2tlZDogJHtkZWZhdWx0VmFsdWVzLmlzRGVmYXVsdENoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRGVmYXVsdENoZWNrZWQnKSkudG9FcXVhbChcbiAgICAgICAgICBkZWZhdWx0VmFsdWVzLmlzRGVmYXVsdENoZWNrZWRcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICAvKiBpZiAoY2hlY2tib3gucHJvcHMuaXNDaGVja2VkKSB7XG4gICAgICBpdChgU2hvdWxkIGhhdmUgaXNDaGVja2VkOiAke2NoZWNrYm94LnByb3BzLmlzQ2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNDaGVja2VkJykpLnRvRXF1YWwoY2hlY2tib3gucHJvcHMuaXNDaGVja2VkKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZVxuICAgICAgaXQoYFNob3VsZCBoYXZlIGlzQ2hlY2tlZDogJHtkZWZhdWx0VmFsdWVzLmlzQ2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNDaGVja2VkJykpLnRvRXF1YWwoZGVmYXVsdFZhbHVlcy5pc0NoZWNrZWQpO1xuICAgICAgfSk7XG5cbiAgICBpZiAoY2hlY2tib3gucHJvcHMuaXNEaXNhYmxlZCkge1xuICAgICAgaXQoYFNob3VsZCBoYXZlIGlzRGlzYWJsZWQ6ICR7Y2hlY2tib3gucHJvcHMuaXNEaXNhYmxlZH1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNEaXNhYmxlZCcpKS50b0VxdWFsKGNoZWNrYm94LnByb3BzLmlzRGlzYWJsZWQpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlXG4gICAgICBpdChgU2hvdWxkIGhhdmUgaXNEaXNhYmxlZDogJHtkZWZhdWx0VmFsdWVzLmlzRGlzYWJsZWR9YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRGlzYWJsZWQnKSkudG9FcXVhbChkZWZhdWx0VmFsdWVzLmlzRGlzYWJsZWQpO1xuICAgICAgfSk7XG5cbiAgICBpZiAoY2hlY2tib3gucHJvcHMuaXNQYXJ0aWFsbHlDaGVja2VkKSB7XG4gICAgICBpdChgU2hvdWxkIGhhdmUgaXNQYXJ0aWFsbHlDaGVja2VkOiAke2NoZWNrYm94LnByb3BzLmlzUGFydGlhbGx5Q2hlY2tlZH1gLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNQYXJ0aWFsbHlDaGVja2VkJykpLnRvRXF1YWwoXG4gICAgICAgICAgY2hlY2tib3gucHJvcHMuaXNQYXJ0aWFsbHlDaGVja2VkXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9IGVsc2VcbiAgICAgIGl0KGBTaG91bGQgaGF2ZSBpc1BhcnRpYWxseUNoZWNrZWQ6ICR7ZGVmYXVsdFZhbHVlcy5pc1BhcnRpYWxseUNoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzUGFydGlhbGx5Q2hlY2tlZCcpKS50b0VxdWFsKFxuICAgICAgICAgIGRlZmF1bHRWYWx1ZXMuaXNQYXJ0aWFsbHlDaGVja2VkXG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgIGlmIChjaGVja2JveC5wcm9wcy5wb3NpdGlvbikge1xuICAgICAgaXQoYFNob3VsZCBoYXZlIHBvc2l0aW9uOiAke2NoZWNrYm94LnByb3BzLnBvc2l0aW9ufWAsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdwb3NpdGlvbicpKS50b0VxdWFsKGNoZWNrYm94LnByb3BzLnBvc2l0aW9uKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZVxuICAgICAgaXQoYFNob3VsZCBoYXZlIHBvc2l0aW9uOiAke2RlZmF1bHRWYWx1ZXMucG9zaXRpb259YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ3Bvc2l0aW9uJykpLnRvRXF1YWwoZGVmYXVsdFZhbHVlcy5wb3NpdGlvbik7XG4gICAgICB9KTtcblxuICAgIGlmIChjaGVja2JveC5wcm9wcy5jaGlsZHJlbikge1xuICAgICAgaXQoYFNob3VsZCBoYXZlIGNoaWxkcmVuOiAke2NoZWNrYm94LnByb3BzLmNoaWxkcmVufWAsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdjaGlsZHJlbicpKS50b0VxdWFsKGNoZWNrYm94LnByb3BzLmNoaWxkcmVuKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZVxuICAgICAgaXQoYFNob3VsZCBoYXZlIGNoaWxkcmVuOiAke2RlZmF1bHRWYWx1ZXMuY2hpbGRyZW59YCwgKCkgPT4ge1xuICAgICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2NoaWxkcmVuJykpLnRvRXF1YWwoZGVmYXVsdFZhbHVlcy5jaGlsZHJlbik7XG4gICAgICB9KTsqL1xuICB9KTtcbn07XG5cbnRlc3RzKCk7XG4iXX0=