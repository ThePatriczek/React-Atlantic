{"version":3,"sources":["Checkbox.test.jsx"],"names":["Component","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","tests","checkbox","props","defaultValues","console","log","describe","it","expect","prop","toEqual"],"mappings":"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","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport { defaultValues } from './defaultValues';\n\nexport const Component = (\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  return (\n    <Checkbox\n      isChecked={isChecked}\n      isPartiallyChecked={isPartiallyChecked}\n      isDefaultChecked={isDefaultChecked}\n      isDisabled={isDisabled}\n      position={position}\n    >\n      {children}\n    </Checkbox>\n  );\n};\n\nlet output = shallow(Component());\n\nexport const tests = (\n  checkbox = Component(),\n  props = {\n    isChecked: defaultValues.isChecked,\n    isDefaultChecked: defaultValues.isDefaultChecked,\n    isDisabled: defaultValues.isDisabled,\n    isPartiallyChecked: defaultValues.isPartiallyChecked,\n    position: defaultValues.position,\n    children: defaultValues.children\n  }\n) => {\n  output = shallow(checkbox);\n\n  console.log(checkbox.props);\n\n  return describe('Checkbox', () => {\n    it(`Should have isChecked: ${props.isChecked}`, () => {\n      expect(output.prop('isChecked')).toEqual(\n        props.isChecked || defaultValues.isChecked\n      );\n    });\n\n    it(`Should have isDefaultChecked: ${props.isDefaultChecked}`, () => {\n      expect(output.prop('isDefaultChecked')).toEqual(\n         defaultValues.isDefaultChecked\n      );\n    });\n\n    it(`Should have isDisabled: ${props.isDisabled}`, () => {\n      expect(output.prop('isDisabled')).toEqual(\n        props.isDisabled || defaultValues.isDisabled\n      );\n    });\n\n    it(`Should have isPartiallyChecked: ${props.isPartiallyChecked}`, () => {\n      expect(output.prop('isPartiallyChecked')).toEqual(\n        props.isPartiallyChecked || defaultValues.isPartiallyChecked\n      );\n    });\n\n    it(`Should have position: ${props.position}`, () => {\n      expect(output.prop('position')).toEqual(\n        props.position || defaultValues.position\n      );\n    });\n\n    it(`Should have children: ${props.children}`, () => {\n      expect(output.prop('children')).toEqual(\n        props.children || defaultValues.children\n      );\n    });\n  });\n};\n\ntests();\n"]}