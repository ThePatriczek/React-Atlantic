d3fd10d9668febe402055d7685cc2e4f
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _storybookAddonSpecifications = require("storybook-addon-specifications");

var _expect = _interopRequireDefault(require("expect"));

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";

const Component = (isChecked, isDefaultChecked, isDisabled, isFullWidth, isRound, size, type, value, onClick) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20
    },
    __self: void 0
  }, value);
};

exports.Component = Component;
let output;

const tests = (button = Component(_defaultValues.defaultValues.isChecked, _defaultValues.defaultValues.isDefaultChecked, _defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value)) => {
  output = (0, _enzyme.mount)(button);
  return (0, _storybookAddonSpecifications.describe)('Button', () => {
    (0, _storybookAddonSpecifications.it)(`Should have the right text: ${button.props.value}`, () => (0, _expect.default)(output.text()).toEqual(button.props.value));
    (0, _storybookAddonSpecifications.it)(`onClick should have been called if Button is not disabled: `, () => {
      const mockClick = jest.fn();
      output.setProps({
        onClick: mockClick
      });
      output.simulate('click');

      if (!button.props.isDisabled) {
        (0, _expect.default)(button.props.onClick).toHaveBeenCalled();
      } else {
        (0, _expect.default)(button.props.onClick).not.toHaveBeenCalled();
      }
    });
    (0, _storybookAddonSpecifications.it)(`Should have isDisabled: ${button.props.isDisabled}`, () => {
      (0, _expect.default)(output.prop('isDisabled')).toEqual(button.props.isDisabled);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isRound: ${button.props.isRound}`, () => {
      (0, _expect.default)(output.prop('isRound')).toEqual(button.props.isRound);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isFullWidth: ${button.props.isFullWidth}`, () => {
      (0, _expect.default)(output.prop('isFullWidth')).toEqual(button.props.isFullWidth);
    });
    (0, _storybookAddonSpecifications.it)(`Should have type: ${button.props.type}`, () => {
      (0, _expect.default)(output.prop('type')).toEqual(button.props.type);
    });
    (0, _storybookAddonSpecifications.it)(`Should have size: ${button.props.size}`, () => {
      (0, _expect.default)(output.prop('size')).toEqual(button.props.size);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJDb21wb25lbnQiLCJpc0NoZWNrZWQiLCJpc0RlZmF1bHRDaGVja2VkIiwiaXNEaXNhYmxlZCIsImlzRnVsbFdpZHRoIiwiaXNSb3VuZCIsInNpemUiLCJ0eXBlIiwidmFsdWUiLCJvbkNsaWNrIiwib3V0cHV0IiwidGVzdHMiLCJidXR0b24iLCJkZWZhdWx0VmFsdWVzIiwicHJvcHMiLCJ0ZXh0IiwidG9FcXVhbCIsIm1vY2tDbGljayIsImplc3QiLCJmbiIsInNldFByb3BzIiwic2ltdWxhdGUiLCJ0b0hhdmVCZWVuQ2FsbGVkIiwibm90IiwicHJvcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFTyxNQUFNQSxTQUFTLEdBQUcsQ0FDdkJDLFNBRHVCLEVBRXZCQyxnQkFGdUIsRUFHdkJDLFVBSHVCLEVBSXZCQyxXQUp1QixFQUt2QkMsT0FMdUIsRUFNdkJDLElBTnVCLEVBT3ZCQyxJQVB1QixFQVF2QkMsS0FSdUIsRUFTdkJDLE9BVHVCLEtBVXBCO0FBQ0gsU0FDRSw2QkFBQyxjQUFEO0FBQ0UsSUFBQSxVQUFVLEVBQUVOLFVBRGQ7QUFFRSxJQUFBLFdBQVcsRUFBRUMsV0FGZjtBQUdFLElBQUEsT0FBTyxFQUFFQyxPQUhYO0FBSUUsSUFBQSxJQUFJLEVBQUVDLElBSlI7QUFLRSxJQUFBLElBQUksRUFBRUMsSUFMUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQU9HQyxLQVBILENBREY7QUFXRCxDQXRCTTs7O0FBd0JQLElBQUlFLE1BQUo7O0FBRU8sTUFBTUMsS0FBSyxHQUFHLENBQ25CQyxNQUFNLEdBQUdaLFNBQVMsQ0FDaEJhLDZCQUFjWixTQURFLEVBRWhCWSw2QkFBY1gsZ0JBRkUsRUFHaEJXLDZCQUFjVixVQUhFLEVBSWhCVSw2QkFBY1QsV0FKRSxFQUtoQlMsNkJBQWNSLE9BTEUsRUFNaEJRLDZCQUFjUCxJQU5FLEVBT2hCTyw2QkFBY04sSUFQRSxFQVFoQk0sNkJBQWNMLEtBUkUsQ0FEQyxLQVdoQjtBQUNIRSxFQUFBQSxNQUFNLEdBQUcsbUJBQU1FLE1BQU4sQ0FBVDtBQUVBLFNBQU8sNENBQVMsUUFBVCxFQUFtQixNQUFNO0FBQzlCLDBDQUFJLCtCQUE4QkEsTUFBTSxDQUFDRSxLQUFQLENBQWFOLEtBQU0sRUFBckQsRUFBd0QsTUFDdEQscUJBQU9FLE1BQU0sQ0FBQ0ssSUFBUCxFQUFQLEVBQXNCQyxPQUF0QixDQUE4QkosTUFBTSxDQUFDRSxLQUFQLENBQWFOLEtBQTNDLENBREY7QUFHQSwwQ0FBSSw2REFBSixFQUFrRSxNQUFNO0FBQ3RFLFlBQU1TLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxFQUFMLEVBQWxCO0FBQ0FULE1BQUFBLE1BQU0sQ0FBQ1UsUUFBUCxDQUFnQjtBQUNkWCxRQUFBQSxPQUFPLEVBQUVRO0FBREssT0FBaEI7QUFJQVAsTUFBQUEsTUFBTSxDQUFDVyxRQUFQLENBQWdCLE9BQWhCOztBQUVBLFVBQUksQ0FBQ1QsTUFBTSxDQUFDRSxLQUFQLENBQWFYLFVBQWxCLEVBQThCO0FBQzVCLDZCQUFPUyxNQUFNLENBQUNFLEtBQVAsQ0FBYUwsT0FBcEIsRUFBNkJhLGdCQUE3QjtBQUNELE9BRkQsTUFFTztBQUNMLDZCQUFPVixNQUFNLENBQUNFLEtBQVAsQ0FBYUwsT0FBcEIsRUFBNkJjLEdBQTdCLENBQWlDRCxnQkFBakM7QUFDRDtBQUNGLEtBYkQ7QUFlQSwwQ0FBSSwyQkFBMEJWLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhWCxVQUFXLEVBQXRELEVBQXlELE1BQU07QUFDN0QsMkJBQU9PLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLFlBQVosQ0FBUCxFQUFrQ1IsT0FBbEMsQ0FBMENKLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhWCxVQUF2RDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSx3QkFBdUJTLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhVCxPQUFRLEVBQWhELEVBQW1ELE1BQU07QUFDdkQsMkJBQU9LLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLFNBQVosQ0FBUCxFQUErQlIsT0FBL0IsQ0FBdUNKLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhVCxPQUFwRDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSw0QkFBMkJPLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhVixXQUFZLEVBQXhELEVBQTJELE1BQU07QUFDL0QsMkJBQU9NLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLGFBQVosQ0FBUCxFQUFtQ1IsT0FBbkMsQ0FBMkNKLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhVixXQUF4RDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSxxQkFBb0JRLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhUCxJQUFLLEVBQTFDLEVBQTZDLE1BQU07QUFDakQsMkJBQU9HLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLE1BQVosQ0FBUCxFQUE0QlIsT0FBNUIsQ0FBb0NKLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhUCxJQUFqRDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSxxQkFBb0JLLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhUixJQUFLLEVBQTFDLEVBQTZDLE1BQU07QUFDakQsMkJBQU9JLE1BQU0sQ0FBQ2MsSUFBUCxDQUFZLE1BQVosQ0FBUCxFQUE0QlIsT0FBNUIsQ0FBb0NKLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhUixJQUFqRDtBQUNELEtBRkQ7QUFHRCxHQXRDTSxDQUFQO0FBdUNELENBckRNOzs7QUF1RFBLLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZGVmYXVsdFZhbHVlcyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9kZWZhdWx0VmFsdWVzJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB7IGRlc2NyaWJlLCBpdCB9IGZyb20gJ3N0b3J5Ym9vay1hZGRvbi1zcGVjaWZpY2F0aW9ucyc7XG5pbXBvcnQgZXhwZWN0IGZyb20gJ2V4cGVjdCc7XG5cbmV4cG9ydCBjb25zdCBDb21wb25lbnQgPSAoXG4gIGlzQ2hlY2tlZCxcbiAgaXNEZWZhdWx0Q2hlY2tlZCxcbiAgaXNEaXNhYmxlZCxcbiAgaXNGdWxsV2lkdGgsXG4gIGlzUm91bmQsXG4gIHNpemUsXG4gIHR5cGUsXG4gIHZhbHVlLFxuICBvbkNsaWNrXG4pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBpc0Rpc2FibGVkPXtpc0Rpc2FibGVkfVxuICAgICAgaXNGdWxsV2lkdGg9e2lzRnVsbFdpZHRofVxuICAgICAgaXNSb3VuZD17aXNSb3VuZH1cbiAgICAgIHNpemU9e3NpemV9XG4gICAgICB0eXBlPXt0eXBlfVxuICAgID5cbiAgICAgIHt2YWx1ZX1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn07XG5cbmxldCBvdXRwdXQ7XG5cbmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgYnV0dG9uID0gQ29tcG9uZW50KFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNDaGVja2VkLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNEZWZhdWx0Q2hlY2tlZCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzRGlzYWJsZWQsXG4gICAgZGVmYXVsdFZhbHVlcy5pc0Z1bGxXaWR0aCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzUm91bmQsXG4gICAgZGVmYXVsdFZhbHVlcy5zaXplLFxuICAgIGRlZmF1bHRWYWx1ZXMudHlwZSxcbiAgICBkZWZhdWx0VmFsdWVzLnZhbHVlXG4gIClcbikgPT4ge1xuICBvdXRwdXQgPSBtb3VudChidXR0b24pO1xuXG4gIHJldHVybiBkZXNjcmliZSgnQnV0dG9uJywgKCkgPT4ge1xuICAgIGl0KGBTaG91bGQgaGF2ZSB0aGUgcmlnaHQgdGV4dDogJHtidXR0b24ucHJvcHMudmFsdWV9YCwgKCkgPT5cbiAgICAgIGV4cGVjdChvdXRwdXQudGV4dCgpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy52YWx1ZSkpO1xuXG4gICAgaXQoYG9uQ2xpY2sgc2hvdWxkIGhhdmUgYmVlbiBjYWxsZWQgaWYgQnV0dG9uIGlzIG5vdCBkaXNhYmxlZDogYCwgKCkgPT4ge1xuICAgICAgY29uc3QgbW9ja0NsaWNrID0gamVzdC5mbigpO1xuICAgICAgb3V0cHV0LnNldFByb3BzKHtcbiAgICAgICAgb25DbGljazogbW9ja0NsaWNrXG4gICAgICB9KTtcblxuICAgICAgb3V0cHV0LnNpbXVsYXRlKCdjbGljaycpO1xuXG4gICAgICBpZiAoIWJ1dHRvbi5wcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgICAgIGV4cGVjdChidXR0b24ucHJvcHMub25DbGljaykudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXhwZWN0KGJ1dHRvbi5wcm9wcy5vbkNsaWNrKS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRGlzYWJsZWQ6ICR7YnV0dG9uLnByb3BzLmlzRGlzYWJsZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0Rpc2FibGVkJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzRGlzYWJsZWQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzUm91bmQ6ICR7YnV0dG9uLnByb3BzLmlzUm91bmR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc1JvdW5kJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzUm91bmQpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIGlzRnVsbFdpZHRoOiAke2J1dHRvbi5wcm9wcy5pc0Z1bGxXaWR0aH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRnVsbFdpZHRoJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLmlzRnVsbFdpZHRoKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSB0eXBlOiAke2J1dHRvbi5wcm9wcy50eXBlfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgndHlwZScpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy50eXBlKTtcbiAgICB9KTtcblxuICAgIGl0KGBTaG91bGQgaGF2ZSBzaXplOiAke2J1dHRvbi5wcm9wcy5zaXplfWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnc2l6ZScpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy5zaXplKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG50ZXN0cygpO1xuIl19