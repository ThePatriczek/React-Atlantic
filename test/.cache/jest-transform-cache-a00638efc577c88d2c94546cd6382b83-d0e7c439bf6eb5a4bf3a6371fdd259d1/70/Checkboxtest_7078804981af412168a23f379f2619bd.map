{"version":3,"sources":["Checkbox.test.jsx"],"names":["Component","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","tests","checkbox","console","log","props","describe","it","expect","prop","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,GAAG,CACvBC,SADuB,EAEvBC,gBAFuB,EAGvBC,UAHuB,EAIvBC,kBAJuB,EAKvBC,QALuB,EAMvBC,QANuB,KAOpB;AACH,SACE,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAEL,SADb;AAEE,IAAA,kBAAkB,EAAEG,kBAFtB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGC,QAPH,CADF;AAWD,CAnBM;;;AAqBP,IAAIC,MAAM,GAAG,qBAAQP,SAAS,EAAjB,CAAb;;AAEO,MAAMQ,KAAK,GAAG,CACnBC,QAAQ,GAAGT,SAAS;AACpB;;;;;;;;AAFmB,KAUhB;AACHO,EAAAA,MAAM,GAAG,qBAAQE,QAAQ,EAAhB,CAAT;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,KAArB;AAEA,SAAOC,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,0BAAyBF,KAAK,CAACX,SAAU,EAA3C,EAA8C,MAAM;AACpDc,MAAAA,MAAM,CAACR,MAAM,CAACS,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyCL,KAAK,CAACX,SAA/C;AACD,KAFC,CAAF;AAIAa,IAAAA,EAAE,CAAE,iCAAgCF,KAAK,CAACV,gBAAiB,EAAzD,EAA4D,MAAM;AAClEa,MAAAA,MAAM,CAACR,MAAM,CAACS,IAAP,CAAY,kBAAZ,CAAD,CAAN,CAAwCC,OAAxC,CAAgDL,KAAK,CAACV,gBAAtD;AACD,KAFC,CAAF;AAIAY,IAAAA,EAAE,CAAE,2BAA0BF,KAAK,CAACT,UAAW,EAA7C,EAAgD,MAAM;AACtDY,MAAAA,MAAM,CAACR,MAAM,CAACS,IAAP,CAAY,YAAZ,CAAD,CAAN,CAAkCC,OAAlC,CAA0CL,KAAK,CAACT,UAAhD;AACD,KAFC,CAAF;AAIAW,IAAAA,EAAE,CAAE,mCAAkCF,KAAK,CAACR,kBAAmB,EAA7D,EAAgE,MAAM;AACtEW,MAAAA,MAAM,CAACR,MAAM,CAACS,IAAP,CAAY,oBAAZ,CAAD,CAAN,CAA0CC,OAA1C,CACEL,KAAK,CAACR,kBADR;AAGD,KAJC,CAAF;AAMAU,IAAAA,EAAE,CAAE,yBAAwBF,KAAK,CAACP,QAAS,EAAzC,EAA4C,MAAM;AAClDU,MAAAA,MAAM,CAACR,MAAM,CAACS,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCL,KAAK,CAACP,QAA9C;AACD,KAFC,CAAF;AAIAS,IAAAA,EAAE,CAAE,yBAAwBF,KAAK,CAACN,QAAS,EAAzC,EAA4C,MAAM;AAClDS,MAAAA,MAAM,CAACR,MAAM,CAACS,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCL,KAAK,CAACN,QAA9C;AACD,KAFC,CAAF;AAGD,GA1Bc,CAAf;AA2BD,CA1CM;;;AA4CPE,KAAK","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport { defaultValues } from './defaultValues';\n\nexport const Component = (\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  return (\n    <Checkbox\n      isChecked={isChecked}\n      isPartiallyChecked={isPartiallyChecked}\n      isDefaultChecked={isDefaultChecked}\n      isDisabled={isDisabled}\n      position={position}\n    >\n      {children}\n    </Checkbox>\n  );\n};\n\nlet output = shallow(Component());\n\nexport const tests = (\n  checkbox = Component()\n  /*props = {\n    isChecked: defaultValues.isChecked,\n    isDefaultChecked: defaultValues.isDefaultChecked,\n    isDisabled: defaultValues.isDisabled,\n    isPartiallyChecked: defaultValues.isPartiallyChecked,\n    position: defaultValues.position,\n    children: defaultValues.children\n  }*/\n) => {\n  output = shallow(checkbox());\n\n  console.log(checkbox.props);\n\n  return describe('Checkbox', () => {\n    it(`Should have isChecked: ${props.isChecked}`, () => {\n      expect(output.prop('isChecked')).toEqual(props.isChecked);\n    });\n\n    it(`Should have isDefaultChecked: ${props.isDefaultChecked}`, () => {\n      expect(output.prop('isDefaultChecked')).toEqual(props.isDefaultChecked);\n    });\n\n    it(`Should have isDisabled: ${props.isDisabled}`, () => {\n      expect(output.prop('isDisabled')).toEqual(props.isDisabled);\n    });\n\n    it(`Should have isPartiallyChecked: ${props.isPartiallyChecked}`, () => {\n      expect(output.prop('isPartiallyChecked')).toEqual(\n        props.isPartiallyChecked\n      );\n    });\n\n    it(`Should have position: ${props.position}`, () => {\n      expect(output.prop('position')).toEqual(props.position);\n    });\n\n    it(`Should have children: ${props.children}`, () => {\n      expect(output.prop('children')).toEqual(props.children);\n    });\n  });\n};\n\ntests();\n"]}