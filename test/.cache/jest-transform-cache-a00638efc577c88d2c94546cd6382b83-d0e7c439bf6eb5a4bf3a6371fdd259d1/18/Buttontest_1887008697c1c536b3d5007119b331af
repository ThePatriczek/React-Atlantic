53cb9a9d69dd886bdada014a7c1b82a6
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _defaultValues = require("../../constants/defaultValues");

var _Button = require("./Button");

var _storybookAddonSpecifications = require("storybook-addon-specifications");

var _expect = _interopRequireDefault(require("expect"));

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Button/Button.test.jsx";
const onClick = jest.fn();

const Component = (isDisabled, isFullWidth, isRound, size, type, value) => {
  return _react.default.createElement(_Button.Button, {
    isDisabled: isDisabled,
    isFullWidth: isFullWidth,
    isRound: isRound,
    size: size,
    type: type,
    onClick: onClick,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    },
    __self: void 0
  }, value);
};

exports.Component = Component;

const tests = (button = Component(_defaultValues.defaultValues.isDisabled, _defaultValues.defaultValues.isFullWidth, _defaultValues.defaultValues.isRound, _defaultValues.defaultValues.size, _defaultValues.defaultValues.type, _defaultValues.defaultValues.value)) => {
  let output = (0, _enzyme.mount)(button);
  return (0, _storybookAddonSpecifications.describe)('Button', () => {
    (0, _storybookAddonSpecifications.it)(`Should have the right text: ${button.props.value}`, () => (0, _expect.default)(output.text()).toEqual(button.props.value));
    (0, _storybookAddonSpecifications.it)(`onClick should have been called if Button is not disabled: `, () => {
      const mockClick = jest.fn();
      output.setProps({
        onClick: mockClick
      });
      output.simulate('click');

      if (!button.props.isDisabled) {
        (0, _expect.default)(button.props.onClick).toHaveBeenCalled();
      } else {
        (0, _expect.default)(button.props.onClick).not.toHaveBeenCalled();
      }
    });
    (0, _storybookAddonSpecifications.it)(`Should have isDisabled: ${button.props.isDisabled}`, () => {
      (0, _expect.default)(output.prop('isDisabled')).toEqual(button.props.isDisabled);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isRound: ${button.props.isRound}`, () => {
      (0, _expect.default)(output.prop('isRound')).toEqual(button.props.isRound);
    });
    (0, _storybookAddonSpecifications.it)(`Should have isFullWidth: ${button.props.isFullWidth}`, () => {
      (0, _expect.default)(output.prop('isFullWidth')).toEqual(button.props.isFullWidth);
    });
    (0, _storybookAddonSpecifications.it)(`Should have type: ${button.props.type}`, () => {
      (0, _expect.default)(output.prop('type')).toEqual(button.props.type);
    });
    (0, _storybookAddonSpecifications.it)(`Should have size: ${button.props.size}`, () => {
      (0, _expect.default)(output.prop('size')).toEqual(button.props.size);
    });
  });
};

exports.tests = tests;
tests();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LmpzeCJdLCJuYW1lcyI6WyJvbkNsaWNrIiwiamVzdCIsImZuIiwiQ29tcG9uZW50IiwiaXNEaXNhYmxlZCIsImlzRnVsbFdpZHRoIiwiaXNSb3VuZCIsInNpemUiLCJ0eXBlIiwidmFsdWUiLCJ0ZXN0cyIsImJ1dHRvbiIsImRlZmF1bHRWYWx1ZXMiLCJvdXRwdXQiLCJwcm9wcyIsInRleHQiLCJ0b0VxdWFsIiwibW9ja0NsaWNrIiwic2V0UHJvcHMiLCJzaW11bGF0ZSIsInRvSGF2ZUJlZW5DYWxsZWQiLCJub3QiLCJwcm9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7O0FBRUEsTUFBTUEsT0FBTyxHQUFHQyxJQUFJLENBQUNDLEVBQUwsRUFBaEI7O0FBQ08sTUFBTUMsU0FBUyxHQUFHLENBQ3ZCQyxVQUR1QixFQUV2QkMsV0FGdUIsRUFHdkJDLE9BSHVCLEVBSXZCQyxJQUp1QixFQUt2QkMsSUFMdUIsRUFNdkJDLEtBTnVCLEtBT3BCO0FBQ0gsU0FDRSw2QkFBQyxjQUFEO0FBQ0UsSUFBQSxVQUFVLEVBQUVMLFVBRGQ7QUFFRSxJQUFBLFdBQVcsRUFBRUMsV0FGZjtBQUdFLElBQUEsT0FBTyxFQUFFQyxPQUhYO0FBSUUsSUFBQSxJQUFJLEVBQUVDLElBSlI7QUFLRSxJQUFBLElBQUksRUFBRUMsSUFMUjtBQU1FLElBQUEsT0FBTyxFQUFFUixPQU5YO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBUUdTLEtBUkgsQ0FERjtBQVlELENBcEJNOzs7O0FBc0JBLE1BQU1DLEtBQUssR0FBRyxDQUNuQkMsTUFBTSxHQUFHUixTQUFTLENBQ2hCUyw2QkFBY1IsVUFERSxFQUVoQlEsNkJBQWNQLFdBRkUsRUFHaEJPLDZCQUFjTixPQUhFLEVBSWhCTSw2QkFBY0wsSUFKRSxFQUtoQkssNkJBQWNKLElBTEUsRUFNaEJJLDZCQUFjSCxLQU5FLENBREMsS0FTaEI7QUFDSCxNQUFJSSxNQUFNLEdBQUcsbUJBQU1GLE1BQU4sQ0FBYjtBQUVBLFNBQU8sNENBQVMsUUFBVCxFQUFtQixNQUFNO0FBQzlCLDBDQUFJLCtCQUE4QkEsTUFBTSxDQUFDRyxLQUFQLENBQWFMLEtBQU0sRUFBckQsRUFBd0QsTUFDdEQscUJBQU9JLE1BQU0sQ0FBQ0UsSUFBUCxFQUFQLEVBQXNCQyxPQUF0QixDQUE4QkwsTUFBTSxDQUFDRyxLQUFQLENBQWFMLEtBQTNDLENBREY7QUFHQSwwQ0FBSSw2REFBSixFQUFrRSxNQUFNO0FBQ3RFLFlBQU1RLFNBQVMsR0FBR2hCLElBQUksQ0FBQ0MsRUFBTCxFQUFsQjtBQUVBVyxNQUFBQSxNQUFNLENBQUNLLFFBQVAsQ0FBZ0I7QUFDZGxCLFFBQUFBLE9BQU8sRUFBRWlCO0FBREssT0FBaEI7QUFJQUosTUFBQUEsTUFBTSxDQUFDTSxRQUFQLENBQWdCLE9BQWhCOztBQUVBLFVBQUksQ0FBQ1IsTUFBTSxDQUFDRyxLQUFQLENBQWFWLFVBQWxCLEVBQThCO0FBQzVCLDZCQUFPTyxNQUFNLENBQUNHLEtBQVAsQ0FBYWQsT0FBcEIsRUFBNkJvQixnQkFBN0I7QUFDRCxPQUZELE1BRU87QUFDTCw2QkFBT1QsTUFBTSxDQUFDRyxLQUFQLENBQWFkLE9BQXBCLEVBQTZCcUIsR0FBN0IsQ0FBaUNELGdCQUFqQztBQUNEO0FBQ0YsS0FkRDtBQWdCQSwwQ0FBSSwyQkFBMEJULE1BQU0sQ0FBQ0csS0FBUCxDQUFhVixVQUFXLEVBQXRELEVBQXlELE1BQU07QUFDN0QsMkJBQU9TLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZLFlBQVosQ0FBUCxFQUFrQ04sT0FBbEMsQ0FBMENMLE1BQU0sQ0FBQ0csS0FBUCxDQUFhVixVQUF2RDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSx3QkFBdUJPLE1BQU0sQ0FBQ0csS0FBUCxDQUFhUixPQUFRLEVBQWhELEVBQW1ELE1BQU07QUFDdkQsMkJBQU9PLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZLFNBQVosQ0FBUCxFQUErQk4sT0FBL0IsQ0FBdUNMLE1BQU0sQ0FBQ0csS0FBUCxDQUFhUixPQUFwRDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSw0QkFBMkJLLE1BQU0sQ0FBQ0csS0FBUCxDQUFhVCxXQUFZLEVBQXhELEVBQTJELE1BQU07QUFDL0QsMkJBQU9RLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZLGFBQVosQ0FBUCxFQUFtQ04sT0FBbkMsQ0FBMkNMLE1BQU0sQ0FBQ0csS0FBUCxDQUFhVCxXQUF4RDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSxxQkFBb0JNLE1BQU0sQ0FBQ0csS0FBUCxDQUFhTixJQUFLLEVBQTFDLEVBQTZDLE1BQU07QUFDakQsMkJBQU9LLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZLE1BQVosQ0FBUCxFQUE0Qk4sT0FBNUIsQ0FBb0NMLE1BQU0sQ0FBQ0csS0FBUCxDQUFhTixJQUFqRDtBQUNELEtBRkQ7QUFJQSwwQ0FBSSxxQkFBb0JHLE1BQU0sQ0FBQ0csS0FBUCxDQUFhUCxJQUFLLEVBQTFDLEVBQTZDLE1BQU07QUFDakQsMkJBQU9NLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZLE1BQVosQ0FBUCxFQUE0Qk4sT0FBNUIsQ0FBb0NMLE1BQU0sQ0FBQ0csS0FBUCxDQUFhUCxJQUFqRDtBQUNELEtBRkQ7QUFHRCxHQXZDTSxDQUFQO0FBd0NELENBcERNOzs7QUFzRFBHLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZGVmYXVsdFZhbHVlcyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9kZWZhdWx0VmFsdWVzJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCB7IGRlc2NyaWJlLCBpdCB9IGZyb20gJ3N0b3J5Ym9vay1hZGRvbi1zcGVjaWZpY2F0aW9ucyc7XG5pbXBvcnQgZXhwZWN0IGZyb20gJ2V4cGVjdCc7XG5cbmNvbnN0IG9uQ2xpY2sgPSBqZXN0LmZuKCk7XG5leHBvcnQgY29uc3QgQ29tcG9uZW50ID0gKFxuICBpc0Rpc2FibGVkLFxuICBpc0Z1bGxXaWR0aCxcbiAgaXNSb3VuZCxcbiAgc2l6ZSxcbiAgdHlwZSxcbiAgdmFsdWVcbikgPT4ge1xuICByZXR1cm4gKFxuICAgIDxCdXR0b25cbiAgICAgIGlzRGlzYWJsZWQ9e2lzRGlzYWJsZWR9XG4gICAgICBpc0Z1bGxXaWR0aD17aXNGdWxsV2lkdGh9XG4gICAgICBpc1JvdW5kPXtpc1JvdW5kfVxuICAgICAgc2l6ZT17c2l6ZX1cbiAgICAgIHR5cGU9e3R5cGV9XG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgID5cbiAgICAgIHt2YWx1ZX1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB0ZXN0cyA9IChcbiAgYnV0dG9uID0gQ29tcG9uZW50KFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNEaXNhYmxlZCxcbiAgICBkZWZhdWx0VmFsdWVzLmlzRnVsbFdpZHRoLFxuICAgIGRlZmF1bHRWYWx1ZXMuaXNSb3VuZCxcbiAgICBkZWZhdWx0VmFsdWVzLnNpemUsXG4gICAgZGVmYXVsdFZhbHVlcy50eXBlLFxuICAgIGRlZmF1bHRWYWx1ZXMudmFsdWVcbiAgKVxuKSA9PiB7XG4gIGxldCBvdXRwdXQgPSBtb3VudChidXR0b24pO1xuXG4gIHJldHVybiBkZXNjcmliZSgnQnV0dG9uJywgKCkgPT4ge1xuICAgIGl0KGBTaG91bGQgaGF2ZSB0aGUgcmlnaHQgdGV4dDogJHtidXR0b24ucHJvcHMudmFsdWV9YCwgKCkgPT5cbiAgICAgIGV4cGVjdChvdXRwdXQudGV4dCgpKS50b0VxdWFsKGJ1dHRvbi5wcm9wcy52YWx1ZSkpO1xuXG4gICAgaXQoYG9uQ2xpY2sgc2hvdWxkIGhhdmUgYmVlbiBjYWxsZWQgaWYgQnV0dG9uIGlzIG5vdCBkaXNhYmxlZDogYCwgKCkgPT4ge1xuICAgICAgY29uc3QgbW9ja0NsaWNrID0gamVzdC5mbigpO1xuXG4gICAgICBvdXRwdXQuc2V0UHJvcHMoe1xuICAgICAgICBvbkNsaWNrOiBtb2NrQ2xpY2tcbiAgICAgIH0pO1xuXG4gICAgICBvdXRwdXQuc2ltdWxhdGUoJ2NsaWNrJyk7XG5cbiAgICAgIGlmICghYnV0dG9uLnByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICAgICAgZXhwZWN0KGJ1dHRvbi5wcm9wcy5vbkNsaWNrKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBleHBlY3QoYnV0dG9uLnByb3BzLm9uQ2xpY2spLm5vdC50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNEaXNhYmxlZDogJHtidXR0b24ucHJvcHMuaXNEaXNhYmxlZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRGlzYWJsZWQnKSkudG9FcXVhbChidXR0b24ucHJvcHMuaXNEaXNhYmxlZCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNSb3VuZDogJHtidXR0b24ucHJvcHMuaXNSb3VuZH1gLCAoKSA9PiB7XG4gICAgICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzUm91bmQnKSkudG9FcXVhbChidXR0b24ucHJvcHMuaXNSb3VuZCk7XG4gICAgfSk7XG5cbiAgICBpdChgU2hvdWxkIGhhdmUgaXNGdWxsV2lkdGg6ICR7YnV0dG9uLnByb3BzLmlzRnVsbFdpZHRofWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNGdWxsV2lkdGgnKSkudG9FcXVhbChidXR0b24ucHJvcHMuaXNGdWxsV2lkdGgpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIHR5cGU6ICR7YnV0dG9uLnByb3BzLnR5cGV9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCd0eXBlJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLnR5cGUpO1xuICAgIH0pO1xuXG4gICAgaXQoYFNob3VsZCBoYXZlIHNpemU6ICR7YnV0dG9uLnByb3BzLnNpemV9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdzaXplJykpLnRvRXF1YWwoYnV0dG9uLnByb3BzLnNpemUpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbnRlc3RzKCk7XG4iXX0=