{"version":3,"sources":["Checkbox.style.ts"],"names":["HiddenCheckbox","styled","input","attrs","type","StyledCheckboxInputShown","div","className","props","parseInt","theme","padding","xs","radius","color","default","isDisabled","css","StyledCheckboxLabel","label","height","sm","font","family","primary","StyledCheckboxMark","width","isChecked","isPartiallyChecked","StyledCheckboxSpan","span","md","StyledCheckboxIcon","i","defaultProps"],"mappings":"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","sourcesContent":["import { darken } from 'polished';\nimport styled, { css } from 'styled-components';\nimport { theme } from '../../theme';\n\ninterface StyledCheckboxProps {\n  isChecked?: boolean;\n  isPartiallyChecked?: boolean;\n  isDisabled?: boolean;\n  isTextDotted?: boolean;\n  name?: string;\n  textPosition?: 'right' | 'left';\n}\n\nexport const HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  opacity: 0;\n  width: 0;\n  height: 0;\n  margin: 0;\n  position: absolute;\n  z-index: -1;\n`;\n\nexport const StyledCheckboxInputShown = styled.div.attrs({\n  className: `atlantic--checkbox`\n})<StyledCheckboxProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${props => parseInt(props.theme.padding.xs, 0) - 1}px;\n  background: white;\n  border-radius: ${props => parseInt(props.theme.radius, 0) - 1}px;\n  border: 1px solid ${props => darken(0.1, props.theme.color.default)};\n\n  ${props =>\n    props.isDisabled &&\n    css`\n      background-color: ${props.theme.color.default};\n      cursor: not-allowed;\n    `}\n`;\n\nexport const StyledCheckboxLabel = styled.label<StyledCheckboxProps>`\n  height: ${props => props.theme.height.sm};\n  font-size: 14px;\n  font-family: ${props => props.theme.font.family};\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n\n  ${props =>\n    !props.isDisabled &&\n    css`\n      :hover {\n        .atlantic--checkbox {\n          border: 1px solid ${props.theme.color.primary};\n        }\n      }\n    `};\n\n  ${props =>\n    props.isDisabled &&\n    css`\n      cursor: not-allowed;\n    `};\n`;\n\nexport const StyledCheckboxMark = styled.div<StyledCheckboxProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${props => props.theme.width.xs};\n  height: ${props => props.theme.width.xs};\n  border-radius: ${props => parseInt(props.theme.radius, 0) - 2}px;\n  \n  i{\n    height: 14px;\n  }\n\n  ${props =>\n    (props.isChecked || props.isPartiallyChecked) &&\n    css`\n      background-color: ${props.theme.color.primary};\n    `}\n\n  ${props =>\n    props.isDisabled &&\n    (props.isChecked || props.isPartiallyChecked) &&\n    css`\n      background-color: ${darken(0.2, props.theme.color.default)};\n    `}\n  \n    ${props =>\n      props.isDisabled &&\n      css`\n        color: transparent;\n        cursor: not-allowed;\n      `}\n`;\n\nexport const StyledCheckboxSpan = styled.span<StyledCheckboxProps>`\n  padding: 0 ${props => props.theme.padding.md};\n  user-select: none;\n  line-height: 1;\n\n  ${props =>\n    props.isDisabled &&\n    css`\n      cursor: not-allowed;\n    `}\n`;\n\nexport const StyledCheckboxIcon = styled.i<StyledCheckboxProps>`\n  transform: scale(0.8);\n  color: white;\n  ${props =>\n    (props.isPartiallyChecked || (!props.isChecked && props.isDisabled)) &&\n    css`\n      color: transparent;\n    `}\n\n  ${props =>\n    props.isDisabled &&\n    css`\n      cursor: not-allowed;\n    `}\n`;\n\nHiddenCheckbox.defaultProps = {\n  theme\n};\n\nStyledCheckboxInputShown.defaultProps = {\n  theme\n};\n\nStyledCheckboxLabel.defaultProps = {\n  theme\n};\n\nStyledCheckboxMark.defaultProps = {\n  theme\n};\nStyledCheckboxSpan.defaultProps = {\n  theme\n};\nStyledCheckboxIcon.defaultProps = {\n  theme\n};\n"]}