{"version":3,"sources":["Checkbox.test.jsx"],"names":["Component","isChecked","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","tests","checkbox","describe","it","expect","prop","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,GAAG,CACvBC,SADuB,EAEvBC,gBAFuB,EAGvBC,UAHuB,EAIvBC,kBAJuB,EAKvBC,QALuB,EAMvBC,QANuB,KAOpB;AACH,SAAO,6BAAC,kBAAD;AAAU,IAAA,SAAS,EAAEL,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CATM;;;AAWP,IAAIM,MAAM,GAAG,qBAAQP,SAAS,EAAjB,CAAb;;AAEO,MAAMQ,KAAK,GAAG,CAACC,QAAQ,GAAGT,SAAZ,EAAuBC,SAAvB,KAAqC;AACxDM,EAAAA,MAAM,GAAG,qBAAQE,QAAQ,EAAhB,CAAT;AAEA,SAAOC,QAAQ,CAAC,UAAD,EAAa,MAAM;AAChCC,IAAAA,EAAE,CAAE,0BAAyBV,SAAU,EAArC,EAAwC,MAAM;AAC9CW,MAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyCb,SAAzC;AACD,KAFC,CAAF;AAIA;;;;;;;;;;;;;;;AAmBD,GAxBc,CAAf;AAyBD,CA5BM;;;AA8BPO,KAAK","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport const Component = (\n  isChecked,\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n) => {\n  return <Checkbox isChecked={isChecked} />;\n};\n\nlet output = shallow(Component());\n\nexport const tests = (checkbox = Component, isChecked) => {\n  output = shallow(checkbox());\n\n  return describe('Checkbox', () => {\n    it(`Should have isChecked: ${isChecked}`, () => {\n      expect(output.prop('isChecked')).toEqual(isChecked);\n    });\n\n    /*it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n      expect(output.prop('isDefaultChecked')).toEqual(isDefaultChecked);\n    });\n\n    it(`Should have isDisabled: ${isDisabled}`, () => {\n      expect(output.prop('isDisabled')).toEqual(isDisabled);\n    });\n\n    it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {\n      expect(output.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);\n    });\n\n    it(`Should have position: ${position}`, () => {\n      expect(output.prop('position')).toEqual(position);\n    });\n\n    it(`Should have children: ${children}`, () => {\n      expect(output.prop('children')).toEqual(children);\n    });*/\n  });\n};\n\ntests();\n"]}