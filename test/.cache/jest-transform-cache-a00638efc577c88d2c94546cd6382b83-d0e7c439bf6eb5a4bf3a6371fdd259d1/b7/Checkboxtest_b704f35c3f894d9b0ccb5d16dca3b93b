55995cdbb93b7e58b2242d6ad5d6a281
"use strict";

var _interopRequireDefault = require("/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tests = exports.Component = void 0;

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Checkbox = require("./Checkbox");

var _constants = require("../../constants");

var _addonActions = require("@storybook/addon-actions");

var _jsxFileName = "/Users/patrikmeixner/WebstormProjects/ATLAS/React-Atlantic/src/components/Checkbox/Checkbox.test.jsx";

const Component = isChecked => _react.default.createElement(_Checkbox.Checkbox, {
  isChecked: isChecked,
  isDefaultChecked: false,
  isDisabled: false,
  isPartiallyChecked: false,
  position: 'left',
  onChange: (0, _addonActions.action)(`onChange`),
  __source: {
    fileName: _jsxFileName,
    lineNumber: 14
  },
  __self: void 0
}, _constants.children);

exports.Component = Component;
let output = (0, _enzyme.shallow)(Component());

function getDescribe(isChecked) {
  describe('Checkbox', () => {
    it(`Should have isChecked: ${isChecked}`, () => {
      expect(output.prop('isChecked')).toEqual(isChecked);
    });
  });
}

const tests = (checkbox, isChecked = false) => {
  output = (0, _enzyme.shallow)(checkbox);
  return getDescribe(isChecked); // it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {
  //   expect(output.prop('isDefaultChecked')).toEqual(isDefaultChecked);
  // });
  //
  // it(`Should have isDisabled: ${isDisabled}`, () => {
  //   expect(output.prop('isDisabled')).toEqual(isDisabled);
  // });
  //
  // it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {
  //   expect(output.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);
  // });
  //
  // it(`Should have position: ${position}`, () => {
  //   expect(output.prop('position')).toEqual(position);
  // });
  //
  // it(`Should have children: ${children}`, () => {
  //   expect(output.prop('children')).toEqual(children);
  // });
  // });
};

exports.tests = tests;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrYm94LnRlc3QuanN4Il0sIm5hbWVzIjpbIkNvbXBvbmVudCIsImlzQ2hlY2tlZCIsImNoaWxkcmVuIiwib3V0cHV0IiwiZ2V0RGVzY3JpYmUiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwicHJvcCIsInRvRXF1YWwiLCJ0ZXN0cyIsImNoZWNrYm94Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFPQTs7OztBQUVPLE1BQU1BLFNBQVMsR0FBR0MsU0FBUyxJQUNoQyw2QkFBQyxrQkFBRDtBQUNFLEVBQUEsU0FBUyxFQUFFQSxTQURiO0FBRUUsRUFBQSxnQkFBZ0IsRUFBRSxLQUZwQjtBQUdFLEVBQUEsVUFBVSxFQUFFLEtBSGQ7QUFJRSxFQUFBLGtCQUFrQixFQUFFLEtBSnRCO0FBS0UsRUFBQSxRQUFRLEVBQUUsTUFMWjtBQU1FLEVBQUEsUUFBUSxFQUFFLDBCQUFRLFVBQVIsQ0FOWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQVFHQyxtQkFSSCxDQURLOzs7QUFhUCxJQUFJQyxNQUFNLEdBQUcscUJBQVFILFNBQVMsRUFBakIsQ0FBYjs7QUFFQSxTQUFTSSxXQUFULENBQXFCSCxTQUFyQixFQUFnQztBQUM5QkksRUFBQUEsUUFBUSxDQUFDLFVBQUQsRUFBYSxNQUFNO0FBQ3pCQyxJQUFBQSxFQUFFLENBQUUsMEJBQXlCTCxTQUFVLEVBQXJDLEVBQXdDLE1BQU07QUFDOUNNLE1BQUFBLE1BQU0sQ0FBQ0osTUFBTSxDQUFDSyxJQUFQLENBQVksV0FBWixDQUFELENBQU4sQ0FBaUNDLE9BQWpDLENBQXlDUixTQUF6QztBQUNELEtBRkMsQ0FBRjtBQUdELEdBSk8sQ0FBUjtBQUtEOztBQUVNLE1BQU1TLEtBQUssR0FBRyxDQUFDQyxRQUFELEVBQVdWLFNBQVMsR0FBRyxLQUF2QixLQUFpQztBQUNwREUsRUFBQUEsTUFBTSxHQUFHLHFCQUFRUSxRQUFSLENBQVQ7QUFFQSxTQUFPUCxXQUFXLENBQUNILFNBQUQsQ0FBbEIsQ0FIb0QsQ0FLcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNELENBekJNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2hhbGxvdyB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICcuL0NoZWNrYm94JztcbmltcG9ydCB7XG4gIGlzRGVmYXVsdENoZWNrZWQsXG4gIGlzRGlzYWJsZWQsXG4gIGlzUGFydGlhbGx5Q2hlY2tlZCxcbiAgcG9zaXRpb24sXG4gIGNoaWxkcmVuXG59IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBhY3Rpb24gfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnO1xuXG5leHBvcnQgY29uc3QgQ29tcG9uZW50ID0gaXNDaGVja2VkID0+IChcbiAgPENoZWNrYm94XG4gICAgaXNDaGVja2VkPXtpc0NoZWNrZWR9XG4gICAgaXNEZWZhdWx0Q2hlY2tlZD17ZmFsc2V9XG4gICAgaXNEaXNhYmxlZD17ZmFsc2V9XG4gICAgaXNQYXJ0aWFsbHlDaGVja2VkPXtmYWxzZX1cbiAgICBwb3NpdGlvbj17J2xlZnQnfVxuICAgIG9uQ2hhbmdlPXthY3Rpb24oYG9uQ2hhbmdlYCl9XG4gID5cbiAgICB7Y2hpbGRyZW59XG4gIDwvQ2hlY2tib3g+XG4pO1xuXG5sZXQgb3V0cHV0ID0gc2hhbGxvdyhDb21wb25lbnQoKSk7XG5cbmZ1bmN0aW9uIGdldERlc2NyaWJlKGlzQ2hlY2tlZCkge1xuICBkZXNjcmliZSgnQ2hlY2tib3gnLCAoKSA9PiB7XG4gICAgaXQoYFNob3VsZCBoYXZlIGlzQ2hlY2tlZDogJHtpc0NoZWNrZWR9YCwgKCkgPT4ge1xuICAgICAgZXhwZWN0KG91dHB1dC5wcm9wKCdpc0NoZWNrZWQnKSkudG9FcXVhbChpc0NoZWNrZWQpO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IHRlc3RzID0gKGNoZWNrYm94LCBpc0NoZWNrZWQgPSBmYWxzZSkgPT4ge1xuICBvdXRwdXQgPSBzaGFsbG93KGNoZWNrYm94KTtcblxuICByZXR1cm4gZ2V0RGVzY3JpYmUoaXNDaGVja2VkKTtcblxuICAvLyBpdChgU2hvdWxkIGhhdmUgaXNEZWZhdWx0Q2hlY2tlZDogJHtpc0RlZmF1bHRDaGVja2VkfWAsICgpID0+IHtcbiAgLy8gICBleHBlY3Qob3V0cHV0LnByb3AoJ2lzRGVmYXVsdENoZWNrZWQnKSkudG9FcXVhbChpc0RlZmF1bHRDaGVja2VkKTtcbiAgLy8gfSk7XG4gIC8vXG4gIC8vIGl0KGBTaG91bGQgaGF2ZSBpc0Rpc2FibGVkOiAke2lzRGlzYWJsZWR9YCwgKCkgPT4ge1xuICAvLyAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNEaXNhYmxlZCcpKS50b0VxdWFsKGlzRGlzYWJsZWQpO1xuICAvLyB9KTtcbiAgLy9cbiAgLy8gaXQoYFNob3VsZCBoYXZlIGlzUGFydGlhbGx5Q2hlY2tlZDogJHtpc1BhcnRpYWxseUNoZWNrZWR9YCwgKCkgPT4ge1xuICAvLyAgIGV4cGVjdChvdXRwdXQucHJvcCgnaXNQYXJ0aWFsbHlDaGVja2VkJykpLnRvRXF1YWwoaXNQYXJ0aWFsbHlDaGVja2VkKTtcbiAgLy8gfSk7XG4gIC8vXG4gIC8vIGl0KGBTaG91bGQgaGF2ZSBwb3NpdGlvbjogJHtwb3NpdGlvbn1gLCAoKSA9PiB7XG4gIC8vICAgZXhwZWN0KG91dHB1dC5wcm9wKCdwb3NpdGlvbicpKS50b0VxdWFsKHBvc2l0aW9uKTtcbiAgLy8gfSk7XG4gIC8vXG4gIC8vIGl0KGBTaG91bGQgaGF2ZSBjaGlsZHJlbjogJHtjaGlsZHJlbn1gLCAoKSA9PiB7XG4gIC8vICAgZXhwZWN0KG91dHB1dC5wcm9wKCdjaGlsZHJlbicpKS50b0VxdWFsKGNoaWxkcmVuKTtcbiAgLy8gfSk7XG4gIC8vIH0pO1xufTtcbiJdfQ==