{"version":3,"sources":["Checkbox.test.jsx"],"names":["checkbox","isDefaultChecked","isDisabled","isPartiallyChecked","position","children","output","tests","describe","it","rofl","expect","prop","toEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAOA;;AACA;;;;AAEA,MAAMA,QAAQ,GACZ,6BAAC,kBAAD;AACE,EAAA,SAAS,EAAE,KADb;AAEE,EAAA,gBAAgB,EAAEC,2BAFpB;AAGE,EAAA,UAAU,EAAEC,qBAHd;AAIE,EAAA,kBAAkB,EAAEC,6BAJtB;AAKE,EAAA,QAAQ,EAAEC,mBALZ;AAME,EAAA,QAAQ,EAAE,0BAAQ,UAAR,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQGC,mBARH,CADF;;AAYA,MAAMC,MAAM,GAAG,qBAAQN,QAAR,CAAf;AAEO,MAAMO,KAAK,GAAGC,QAAQ,CAAC,UAAD,EAAa,MAAM;AAC9CC,EAAAA,EAAE,CAAE,0BAAyBC,eAAK,EAAhC,EAAmC,MAAM;AACzCC,IAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,WAAZ,CAAD,CAAN,CAAiCC,OAAjC,CAAyCH,eAAzC;AACD,GAFC,CAAF;AAIAD,EAAAA,EAAE,CAAE,iCAAgCR,2BAAiB,EAAnD,EAAsD,MAAM;AAC5DU,IAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,kBAAZ,CAAD,CAAN,CAAwCC,OAAxC,CAAgDZ,2BAAhD;AACD,GAFC,CAAF;AAIAQ,EAAAA,EAAE,CAAE,2BAA0BP,qBAAW,EAAvC,EAA0C,MAAM;AAChDS,IAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,YAAZ,CAAD,CAAN,CAAkCC,OAAlC,CAA0CX,qBAA1C;AACD,GAFC,CAAF;AAIAO,EAAAA,EAAE,CAAE,mCAAkCN,6BAAmB,EAAvD,EAA0D,MAAM;AAChEQ,IAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,oBAAZ,CAAD,CAAN,CAA0CC,OAA1C,CAAkDV,6BAAlD;AACD,GAFC,CAAF;AAIAM,EAAAA,EAAE,CAAE,yBAAwBL,mBAAS,EAAnC,EAAsC,MAAM;AAC5CO,IAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCT,mBAAxC;AACD,GAFC,CAAF;AAIAK,EAAAA,EAAE,CAAE,yBAAwBJ,mBAAS,EAAnC,EAAsC,MAAM;AAC5CM,IAAAA,MAAM,CAACL,MAAM,CAACM,IAAP,CAAY,UAAZ,CAAD,CAAN,CAAgCC,OAAhC,CAAwCR,mBAAxC;AACD,GAFC,CAAF;AAGD,CAxB4B,CAAtB","sourcesContent":["import { shallow } from 'enzyme';\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport {\n  isDefaultChecked,\n  isDisabled,\n  isPartiallyChecked,\n  position,\n  children\n} from '../../constants';\nimport { action } from '@storybook/addon-actions';\nimport {rofl} from \"./Checkbox.story\";\n\nconst checkbox = (\n  <Checkbox\n    isChecked={false}\n    isDefaultChecked={isDefaultChecked}\n    isDisabled={isDisabled}\n    isPartiallyChecked={isPartiallyChecked}\n    position={position}\n    onChange={action(`onChange`)}\n  >\n    {children}\n  </Checkbox>\n);\nconst output = shallow(checkbox);\n\nexport const tests = describe('Checkbox', () => {\n  it(`Should have isChecked: ${rofl}`, () => {\n    expect(output.prop('isChecked')).toEqual(rofl);\n  });\n\n  it(`Should have isDefaultChecked: ${isDefaultChecked}`, () => {\n    expect(output.prop('isDefaultChecked')).toEqual(isDefaultChecked);\n  });\n\n  it(`Should have isDisabled: ${isDisabled}`, () => {\n    expect(output.prop('isDisabled')).toEqual(isDisabled);\n  });\n\n  it(`Should have isPartiallyChecked: ${isPartiallyChecked}`, () => {\n    expect(output.prop('isPartiallyChecked')).toEqual(isPartiallyChecked);\n  });\n\n  it(`Should have position: ${position}`, () => {\n    expect(output.prop('position')).toEqual(position);\n  });\n\n  it(`Should have children: ${children}`, () => {\n    expect(output.prop('children')).toEqual(children);\n  });\n});\n"]}